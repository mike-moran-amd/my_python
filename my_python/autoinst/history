    1  sudo shutdown now
    2  history
    3  sudo apt update
    4  sudo apt-get install dos2unix p7zip-full cpio gzip genisoimage whois pwgen wget fakeroot isolinux xorriso
    5  sudo apt-get install qemu-utils qemu-kvm
    6  which docker
    7  sudo apt-get install     ca-certificates     curl     gnupg     lsb-release
    8  sudo mkdir -p /etc/apt/keyrings
    9  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
   10  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
   11    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
   12  sudo apt-get update
   13  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
   14  sudo docker run hello-world
   15  sudo docker ps -a
   16  docker images
   17  sudo docker images
   18  ls
   19  ll
   20  git clone https://github.com/coreprocess/linux-unattended-installation.git
   21  ll
   22  history
   23  cd linux-unattended-installation/
   24  ll
   25  cat Dockerfile
   26  sudo doker run help
   27  sudo docker run help
   28  sudo docker help
   29  sudo docker help run
   30  docker run   --rm   -t   -v "$HOME/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub:ro"   -v "$(pwd):/iso"   ubuntu-unattended
   31  sudo docker run   --rm   -t   -v "$HOME/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub:ro"   -v "$(pwd):/iso"   ubuntu-unattended
   32  sudo docker build -t ubuntu-unattended .
   33  ll
   34  ssh-keygen
   35  ll .ssh
   36  ll ~/.ssh
   37  echi $HOME
   38  echo $HOME
   39  sudo docker run   --rm   -t   -v "$HOME/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub:ro"   -v "$(pwd):/iso"   ubuntu-unattended
   40  ll
   41  docker ps
   42  sudo docker run
   43  sudo docker ps
   44  sudo docker images
   45  history
   46  ll
   47  ifconfig -a | grep inet
   48  ip a | grep inet
   49  pwd
   50  cd
   51  ls
   52  ll
   53  cd .ssh
   54  ll
   55  cat authorized_keys
   56  vi authorized_keys
   57  ls
   58  find . -name "ubuntu-18.04-netboot-amd64-unattended.iso" -print
   59  find . -name "*ubuntu-18.04-netboot-amd64-unattended.iso" -print
   60  cd ..
   61  find . -name "*ubuntu-18.04-netboot-amd64-unattended.iso" -print
   62  exit
   63  exit
   64  cd /var
   65  ls
   66  ll
   67  2 * 5
   68  python3
   69  ll
   70  history
   71  ll
   72  cd
   73  ll
   74  cat .bash_history
   75  df
   76  cat .ssh/authorized_keys.orig
   77  ll
   78  ll .ssh
   79  ll
   80  ll .ssh
   81  ll
   82  ll .ssh
   83  which expect
   84  which python3
   85  python3 --version
   86  which docker
   87  sudo docker ps
   88  history
   89  cat /etc/passwd
   90  cat /etc/passwd | grep docker
   91  groupadd docker
   92  getent docker
   93  getent group
   94  getent group | grep docker
   95  getent group | grep jenkins
   96  cat /etc/group
   97  cat /etc/group | grep docker
   98  cat /etc/group | grep jenkins
   99  useradd -D
  100  useradd -G docker jenkins
  101  sudo useradd -G docker jenkins
  102  passwd jenkins
  103  sudo passwd jenkins
  104  login jenkins
  105  ll /var
  106  history > ~/h_u




    1  sudo shutdown now
    2  history
    3  sudo apt update
    4  sudo apt-get install dos2unix p7zip-full cpio gzip genisoimage whois pwgen wget fakeroot isolinux xorriso
    5  sudo apt-get install qemu-utils qemu-kvm
    6  which docker
    7  sudo apt-get install     ca-certificates     curl     gnupg     lsb-release
    8  sudo mkdir -p /etc/apt/keyrings
    9  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
   10  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
   11    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
   12  sudo apt-get update
   13  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
   14  sudo docker run hello-world
   15  sudo docker ps -a
   16  docker images
   17  sudo docker images
   18  ls
   19  ll
   20  git clone https://github.com/coreprocess/linux-unattended-installation.git
   21  ll
   22  history
   23  cd linux-unattended-installation/
   24  ll
   25  cat Dockerfile
   26  sudo doker run help
   27  sudo docker run help
   28  sudo docker help
   29  sudo docker help run
   30  docker run   --rm   -t   -v "$HOME/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub:ro"   -v "$(pwd):/iso"   ubuntu-unattended
   31  sudo docker run   --rm   -t   -v "$HOME/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub:ro"   -v "$(pwd):/iso"   ubuntu-unattended
   32  sudo docker build -t ubuntu-unattended .
   33  ll
   34  ssh-keygen
   35  ll .ssh
   36  ll ~/.ssh
   37  echi $HOME
   38  echo $HOME
   39  sudo docker run   --rm   -t   -v "$HOME/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub:ro"   -v "$(pwd):/iso"   ubuntu-unattended
   40  ll
   41  docker ps
   42  sudo docker run
   43  sudo docker ps
   44  sudo docker images
   45  history
   46  ll
   47  ifconfig -a | grep inet
   48  ip a | grep inet
   49  pwd
   50  cd
   51  ls
   52  ll
   53  cd .ssh
   54  ll
   55  cat authorized_keys
   56  vi authorized_keys
   57  ls
   58  find . -name "ubuntu-18.04-netboot-amd64-unattended.iso" -print
   59  find . -name "*ubuntu-18.04-netboot-amd64-unattended.iso" -print
   60  cd ..
   61  find . -name "*ubuntu-18.04-netboot-amd64-unattended.iso" -print
   62  exit
   63  exit
   64  cat .ssh/id_rsa.pub
   65  cat .ssh/authorized_keys
   66  cd .ssh
   67  ll
   68  mv authorized_keys authorized_keys.orig
   69  ll
   70  git status
   71  cd
   72  history
   73  cd /var
   74  ll
   75  ll opt
   76  cd log
   77  cd installer/
   78  ll
   79  cat autoinstall-user-data
   80  cd
   81  ll
   82  ll .sh
   83  ll .ssh
   84  cd .ssh
   85  ll
   86  mv authorized_keys.orig authorized_keys
   87  mv authorized_keys authorized_keys.orig
   88  mv authorized_keys.orig authorized_keys
   89  mv authorized_keys authorized_keys.orig
   90  mv authorized_keys.orig authorized_keys
   91  mv authorized_keys authorized_keys.orig
   92  mv authorized_keys.orig authorized_keys
   93  mv authorized_keys authorized_keys.orig
   94  mv authorized_keys.orig authorized_keys
   95  mv authorized_keys authorized_keys.orig
   96  mv authorized_keys.orig authorized_keys
   97  mv authorized_keys authorized_keys.orig
   98  mv authorized_keys.orig authorized_keys
   99  history
  100  who
  101  ll
  102  v authorized_keys authorized_keys.orig
  103  mv authorized_keys authorized_keys.orig
  104  ll
  105  uname -m
  106  man uname
  107  uname -o
  108  man uname
  109  uname -a
  110  ll
  111  mv authorized_keys.orig authorized_keys
  112  mv authorized_keys authorized_keys.orig
  113  ll
  114  mv authorized_keys.orig authorized_keys
  115  uname -a
  116  man uname
  117  uname -v
  118  ll
  119  mv authorized_keys authorized_keys.orig
  120  mv authorized_keys.orig authorized_keys
  121  mv authorized_keys authorized_keys.orig
  122  mv authorized_keys.orig authorized_keys
  123  cat /etc/hosts
  124  ll
  125  mv authorized_keys authorized_keys.orig
  126  ll
  127  ll /var
  128  ll opt
  129  ll /var/mail/
  130  ll /var/opt
  131  ll /var/log
  132  mkdir /var/log/my
  133  cd /var
  134  ll
  135  cd opt
  136  mkdir xx
  137  ll /opt
  138  ll /
  139  ll /opt/containerd/
  140  ll sudo /opt/containerd/
  141  ll sudo ll /opt/containerd/
  142  sudo ll /opt/containerd/
  143  sudo ls -lAF /opt/containerd/
  144  sudo ls -lAF /opt/containerd/b
  145  sudo ls -lAF /opt/containerd/bin
  146  sudo ls -lAF /opt/containerd/lib
  147  history
  148  exit
  149  history > ~/h_u2

# download seed.iso:
mkdir -p ~/cidata
cd ~/cidata
curl -o u20045.iso https://releases.ubuntu.com/20.04/ubuntu-20.04.5-live-server-amd64.iso
cp /var/log/installer/autoinstall-user-data user-data
touch meta-data

# from https://github.com/covertsh/ubuntu-autoinstall-generator/blob/22865030f521cc760a3c58813b4207147a12265b/ubuntu-autoinstall-generator.sh
# lines 231-233 need to add param " fsk.mode=skip " before autoinstall in sed line
wget https://raw.githubusercontent.com/covertsh/ubuntu-autoinstall-generator/main/ubuntu-autoinstall-generator.sh


# from https://ubuntu.com/server/docs/install/autoinstall-quickstart
sudo apt install cloud-image-utils
cloud-localds u20045.iso user-data meta-data

# TODO negotiate connection credentials

# TODO install docker

sudo useradd -m -d /var/jenkins -s /bin/bash jenkins

sudo usermod -a -G docker jenkins

docker image pull docker:dind

docker network create jenkins

docker run --name jenkins-docker --rm --detach \
  --privileged --network jenkins --network-alias docker \
  --env DOCKER_TLS_CERTDIR=/certs \
  --volume jenkins-docker-certs:/certs/client \
  --volume /var/jenkins_home:/var/jenkins_home \
  --publish 2376:2376 \
  docker:dind --storage-driver overlay2

