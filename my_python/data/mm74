Microsoft Windows [Version 10.0.19044.1826]
(c) Microsoft Corporation. All rights reserved.

C:\Users\mikmoran>ssh root@145.40.99.43
The authenticity of host '145.40.99.43 (145.40.99.43)' can't be established.
ECDSA key fingerprint is SHA256:JPbHax+TaXTMRsNEW/aihQVqpnhrkZT8f75NWWDfnBE.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '145.40.99.43' (ECDSA) to the list of known hosts.
Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-33-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Wed Aug 17 19:19:24 UTC 2022

  System load:            0.0263671875
  Usage of /:             1.5% of 218.06GB
  Memory usage:           1%
  Swap usage:             0%
  Processes:              567
  Users logged in:        0
  IPv4 address for bond0: 145.40.99.43
  IPv6 address for bond0: 2604:1380:4641:3b00::d

6 updates can be applied immediately.
6 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable


The list of available updates is more than a week old.
To check for new updates run: sudo apt update


The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

root@mm74:~# uname -a
Linux mm74 5.15.0-33-generic #34-Ubuntu SMP Wed May 18 13:34:26 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux
root@mm74:~# useradd -s /bin/bash -d /home/mfm/ -m -G sudo mfm
root@mm74:~# passwd mfm
New password:
Retype new password:
passwd: password updated successfully
root@mm74:~# cp -r ~/.ssh /home/mfm/.ssh
root@mm74:~# chown -R mfm:mfm /home/mfm/.ssh
root@mm74:~#
logout
Connection to 145.40.99.43 closed.

C:\Users\mikmoran>ssh mfm@145.40.99.43
Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-33-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Wed Aug 17 19:24:43 UTC 2022

  System load:            0.0
  Usage of /:             1.5% of 218.06GB
  Memory usage:           1%
  Swap usage:             0%
  Processes:              511
  Users logged in:        0
  IPv4 address for bond0: 145.40.99.43
  IPv6 address for bond0: 2604:1380:4641:3b00::d


6 updates can be applied immediately.
6 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable


The list of available updates is more than a week old.
To check for new updates run: sudo apt update


The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

mfm@mm74:~$ sudo apt update
[sudo] password for mfm:
Hit:1 http://archive.ubuntu.com/ubuntu jammy InRelease
Get:2 http://security.ubuntu.com/ubuntu jammy-security InRelease [110 kB]
Get:3 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [114 kB]
Get:4 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [267 kB]
Get:5 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [99.8 kB]
Get:6 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [509 kB]
Get:7 http://security.ubuntu.com/ubuntu jammy-security/main Translation-en [63.6 kB]
Get:8 http://security.ubuntu.com/ubuntu jammy-security/main amd64 c-n-f Metadata [3924 B]
Get:9 http://security.ubuntu.com/ubuntu jammy-security/restricted amd64 Packages [243 kB]
Get:10 http://security.ubuntu.com/ubuntu jammy-security/restricted Translation-en [37.3 kB]
Get:11 http://security.ubuntu.com/ubuntu jammy-security/restricted amd64 c-n-f Metadata [524 B]
Get:12 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [108 kB]
Get:13 http://archive.ubuntu.com/ubuntu jammy-updates/main Translation-en [121 kB]
Get:14 http://security.ubuntu.com/ubuntu jammy-security/universe Translation-en [37.5 kB]
Get:15 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 c-n-f Metadata [2408 B]
Get:16 http://security.ubuntu.com/ubuntu jammy-security/multiverse amd64 Packages [4192 B]
Get:17 http://security.ubuntu.com/ubuntu jammy-security/multiverse amd64 c-n-f Metadata [228 B]
Get:18 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 c-n-f Metadata [7368 B]
Get:19 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [276 kB]
Get:20 http://archive.ubuntu.com/ubuntu jammy-updates/restricted Translation-en [42.5 kB]
Get:21 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 c-n-f Metadata [524 B]
Get:22 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [213 kB]
Get:23 http://archive.ubuntu.com/ubuntu jammy-updates/universe Translation-en [71.1 kB]
Get:24 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 c-n-f Metadata [4404 B]
Get:25 http://archive.ubuntu.com/ubuntu jammy-updates/multiverse amd64 Packages [7000 B]
Get:26 http://archive.ubuntu.com/ubuntu jammy-updates/multiverse Translation-en [2264 B]
Get:27 http://archive.ubuntu.com/ubuntu jammy-updates/multiverse amd64 c-n-f Metadata [420 B]
Get:28 http://archive.ubuntu.com/ubuntu jammy-backports/universe amd64 Packages [5416 B]
Get:29 http://archive.ubuntu.com/ubuntu jammy-backports/universe Translation-en [8248 B]
Get:30 http://archive.ubuntu.com/ubuntu jammy-backports/universe amd64 c-n-f Metadata [236 B]
Fetched 2359 kB in 2s (1569 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
84 packages can be upgraded. Run 'apt list --upgradable' to see them.
mfm@mm74:~$ sudo apt install -y ca-certificates curl gnupg lsb-release
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
ca-certificates is already the newest version (20211016).
ca-certificates set to manually installed.
lsb-release is already the newest version (11.1.0ubuntu4).
lsb-release set to manually installed.
The following additional packages will be installed:
  dirmngr gnupg-l10n gnupg-utils gpg gpg-agent gpg-wks-client gpg-wks-server gpgconf gpgsm gpgv libcurl4
Suggested packages:
  pinentry-gnome3 tor parcimonie xloadimage scdaemon
The following packages will be upgraded:
  curl dirmngr gnupg gnupg-l10n gnupg-utils gpg gpg-agent gpg-wks-client gpg-wks-server gpgconf gpgsm gpgv libcurl4
13 upgraded, 0 newly installed, 0 to remove and 71 not upgraded.
Need to get 2730 kB of archives.
After this operation, 4096 B of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gpg-wks-client amd64 2.2.27-3ubuntu2.1 [62.7 kB]
Get:2 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 dirmngr amd64 2.2.27-3ubuntu2.1 [293 kB]
Get:3 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gnupg-utils amd64 2.2.27-3ubuntu2.1 [308 kB]
Get:4 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gpg-wks-server amd64 2.2.27-3ubuntu2.1 [57.5 kB]
Get:5 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gpg-agent amd64 2.2.27-3ubuntu2.1 [209 kB]
Get:6 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gpg amd64 2.2.27-3ubuntu2.1 [519 kB]
Get:7 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gpgconf amd64 2.2.27-3ubuntu2.1 [94.2 kB]
Get:8 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gnupg-l10n all 2.2.27-3ubuntu2.1 [54.4 kB]
Get:9 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gnupg all 2.2.27-3ubuntu2.1 [315 kB]
Get:10 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gpgsm amd64 2.2.27-3ubuntu2.1 [197 kB]
Get:11 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gpgv amd64 2.2.27-3ubuntu2.1 [137 kB]
Get:12 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 curl amd64 7.81.0-1ubuntu1.3 [194 kB]
Get:13 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 libcurl4 amd64 7.81.0-1ubuntu1.3 [290 kB]
Fetched 2730 kB in 1s (2247 kB/s)
(Reading database ... 74930 files and directories currently installed.)
Preparing to unpack .../00-gpg-wks-client_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gpg-wks-client (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../01-dirmngr_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking dirmngr (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../02-gnupg-utils_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gnupg-utils (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../03-gpg-wks-server_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gpg-wks-server (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../04-gpg-agent_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gpg-agent (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../05-gpg_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gpg (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../06-gpgconf_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gpgconf (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../07-gnupg-l10n_2.2.27-3ubuntu2.1_all.deb ...
Unpacking gnupg-l10n (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../08-gnupg_2.2.27-3ubuntu2.1_all.deb ...
Unpacking gnupg (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../09-gpgsm_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gpgsm (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../10-gpgv_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gpgv (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Setting up gpgv (2.2.27-3ubuntu2.1) ...
(Reading database ... 74930 files and directories currently installed.)
Preparing to unpack .../curl_7.81.0-1ubuntu1.3_amd64.deb ...
Unpacking curl (7.81.0-1ubuntu1.3) over (7.81.0-1ubuntu1.2) ...
Preparing to unpack .../libcurl4_7.81.0-1ubuntu1.3_amd64.deb ...
Unpacking libcurl4:amd64 (7.81.0-1ubuntu1.3) over (7.81.0-1ubuntu1.2) ...
Setting up gnupg-l10n (2.2.27-3ubuntu2.1) ...
Setting up gpgconf (2.2.27-3ubuntu2.1) ...
Setting up libcurl4:amd64 (7.81.0-1ubuntu1.3) ...
Setting up curl (7.81.0-1ubuntu1.3) ...
Setting up gpg (2.2.27-3ubuntu2.1) ...
Setting up gnupg-utils (2.2.27-3ubuntu2.1) ...
Setting up gpg-agent (2.2.27-3ubuntu2.1) ...
Setting up gpgsm (2.2.27-3ubuntu2.1) ...
Setting up dirmngr (2.2.27-3ubuntu2.1) ...
Setting up gpg-wks-server (2.2.27-3ubuntu2.1) ...
Setting up gpg-wks-client (2.2.27-3ubuntu2.1) ...
Setting up gnupg (2.2.27-3ubuntu2.1) ...
Processing triggers for libc-bin (2.35-0ubuntu3) ...
Processing triggers for man-db (2.10.2-1) ...
Processing triggers for install-info (6.8-4build1) ...
Scanning processes...
Scanning processor microcode...
Scanning linux images...

Running kernel seems to be up-to-date.

The processor microcode seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
mfm@mm74:~$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
mfm@mm74:~$ echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list
deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu jammy stable
mfm@mm74:~$ sudo apt update
Get:1 https://download.docker.com/linux/ubuntu jammy InRelease [48.9 kB]
Get:2 https://download.docker.com/linux/ubuntu jammy/stable amd64 Packages [6255 B]
Hit:3 http://security.ubuntu.com/ubuntu jammy-security InRelease
Hit:4 http://archive.ubuntu.com/ubuntu jammy InRelease
Hit:5 http://archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:6 http://archive.ubuntu.com/ubuntu jammy-backports InRelease
Fetched 55.1 kB in 1s (91.8 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
71 packages can be upgraded. Run 'apt list --upgradable' to see them.
mfm@mm74:~$ sudo apt install -y containerd.io
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following NEW packages will be installed:
  containerd.io
0 upgraded, 1 newly installed, 0 to remove and 71 not upgraded.
Need to get 28.1 MB of archives.
After this operation, 127 MB of additional disk space will be used.
Get:1 https://download.docker.com/linux/ubuntu jammy/stable amd64 containerd.io amd64 1.6.7-1 [28.1 MB]
Fetched 28.1 MB in 2s (13.7 MB/s)
Selecting previously unselected package containerd.io.
(Reading database ... 74930 files and directories currently installed.)
Preparing to unpack .../containerd.io_1.6.7-1_amd64.deb ...
Unpacking containerd.io (1.6.7-1) ...
Setting up containerd.io (1.6.7-1) ...
Created symlink /etc/systemd/system/multi-user.target.wants/containerd.service → /lib/systemd/system/containerd.service.
Processing triggers for man-db (2.10.2-1) ...
Scanning processes...
Scanning processor microcode...
Scanning linux images...

Running kernel seems to be up-to-date.

The processor microcode seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
mfm@mm74:~$ wget https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64
--2022-08-17 19:28:20--  https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64
Resolving github.com (github.com)... 140.82.114.4
Connecting to github.com (github.com)|140.82.114.4|:443... connected.
HTTP request sent, awaiting response... 302 Found
Location: https://objects.githubusercontent.com/github-production-release-asset-2e65be/36960321/decb03b0-76a4-4ee7-bd06-4e3a548d9f87?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20220817%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220817T192820Z&X-Amz-Expires=300&X-Amz-Signature=dadf1064f9e9b36392b496ca8808408d9c2672ce7d20d51bef467f26f5c94e33&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=36960321&response-content-disposition=attachment%3B%20filename%3Drunc.amd64&response-content-type=application%2Foctet-stream [following]
--2022-08-17 19:28:20--  https://objects.githubusercontent.com/github-production-release-asset-2e65be/36960321/decb03b0-76a4-4ee7-bd06-4e3a548d9f87?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20220817%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220817T192820Z&X-Amz-Expires=300&X-Amz-Signature=dadf1064f9e9b36392b496ca8808408d9c2672ce7d20d51bef467f26f5c94e33&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=36960321&response-content-disposition=attachment%3B%20filename%3Drunc.amd64&response-content-type=application%2Foctet-stream
Resolving objects.githubusercontent.com (objects.githubusercontent.com)... 185.199.110.133, 185.199.109.133, 185.199.108.133, ...
Connecting to objects.githubusercontent.com (objects.githubusercontent.com)|185.199.110.133|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 9415040 (9.0M) [application/octet-stream]
Saving to: ‘runc.amd64’

runc.amd64                    100%[=================================================>]   8.98M  --.-KB/s    in 0.1s

2022-08-17 19:28:20 (80.7 MB/s) - ‘runc.amd64’ saved [9415040/9415040]

mfm@mm74:~$ sudo install -m 755 runc.amd64 /usr/local/sbin/runc
mfm@mm74:~$ sudo mkdir -p /etc/containerd/
mfm@mm74:~$ containerd config default | sudo tee /etc/containerd/config.toml
disabled_plugins = []
imports = []
oom_score = 0
plugin_dir = ""
required_plugins = []
root = "/var/lib/containerd"
state = "/run/containerd"
temp = ""
version = 2

[cgroup]
  path = ""

[debug]
  address = ""
  format = ""
  gid = 0
  level = ""
  uid = 0

[grpc]
  address = "/run/containerd/containerd.sock"
  gid = 0
  max_recv_message_size = 16777216
  max_send_message_size = 16777216
  tcp_address = ""
  tcp_tls_ca = ""
  tcp_tls_cert = ""
  tcp_tls_key = ""
  uid = 0

[metrics]
  address = ""
  grpc_histogram = false

[plugins]

  [plugins."io.containerd.gc.v1.scheduler"]
    deletion_threshold = 0
    mutation_threshold = 100
    pause_threshold = 0.02
    schedule_delay = "0s"
    startup_delay = "100ms"

  [plugins."io.containerd.grpc.v1.cri"]
    device_ownership_from_security_context = false
    disable_apparmor = false
    disable_cgroup = false
    disable_hugetlb_controller = true
    disable_proc_mount = false
    disable_tcp_service = true
    enable_selinux = false
    enable_tls_streaming = false
    enable_unprivileged_icmp = false
    enable_unprivileged_ports = false
    ignore_image_defined_volumes = false
    max_concurrent_downloads = 3
    max_container_log_line_size = 16384
    netns_mounts_under_state_dir = false
    restrict_oom_score_adj = false
    sandbox_image = "k8s.gcr.io/pause:3.6"
    selinux_category_range = 1024
    stats_collect_period = 10
    stream_idle_timeout = "4h0m0s"
    stream_server_address = "127.0.0.1"
    stream_server_port = "0"
    systemd_cgroup = false
    tolerate_missing_hugetlb_controller = true
    unset_seccomp_profile = ""

    [plugins."io.containerd.grpc.v1.cri".cni]
      bin_dir = "/opt/cni/bin"
      conf_dir = "/etc/cni/net.d"
      conf_template = ""
      ip_pref = ""
      max_conf_num = 1

    [plugins."io.containerd.grpc.v1.cri".containerd]
      default_runtime_name = "runc"
      disable_snapshot_annotations = true
      discard_unpacked_layers = false
      ignore_rdt_not_enabled_errors = false
      no_pivot = false
      snapshotter = "overlayfs"

      [plugins."io.containerd.grpc.v1.cri".containerd.default_runtime]
        base_runtime_spec = ""
        cni_conf_dir = ""
        cni_max_conf_num = 0
        container_annotations = []
        pod_annotations = []
        privileged_without_host_devices = false
        runtime_engine = ""
        runtime_path = ""
        runtime_root = ""
        runtime_type = ""

        [plugins."io.containerd.grpc.v1.cri".containerd.default_runtime.options]

      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]

        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
          base_runtime_spec = ""
          cni_conf_dir = ""
          cni_max_conf_num = 0
          container_annotations = []
          pod_annotations = []
          privileged_without_host_devices = false
          runtime_engine = ""
          runtime_path = ""
          runtime_root = ""
          runtime_type = "io.containerd.runc.v2"

          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
            BinaryName = ""
            CriuImagePath = ""
            CriuPath = ""
            CriuWorkPath = ""
            IoGid = 0
            IoUid = 0
            NoNewKeyring = false
            NoPivotRoot = false
            Root = ""
            ShimCgroup = ""
            SystemdCgroup = false

      [plugins."io.containerd.grpc.v1.cri".containerd.untrusted_workload_runtime]
        base_runtime_spec = ""
        cni_conf_dir = ""
        cni_max_conf_num = 0
        container_annotations = []
        pod_annotations = []
        privileged_without_host_devices = false
        runtime_engine = ""
        runtime_path = ""
        runtime_root = ""
        runtime_type = ""

        [plugins."io.containerd.grpc.v1.cri".containerd.untrusted_workload_runtime.options]

    [plugins."io.containerd.grpc.v1.cri".image_decryption]
      key_model = "node"

    [plugins."io.containerd.grpc.v1.cri".registry]
      config_path = ""

      [plugins."io.containerd.grpc.v1.cri".registry.auths]

      [plugins."io.containerd.grpc.v1.cri".registry.configs]

      [plugins."io.containerd.grpc.v1.cri".registry.headers]

      [plugins."io.containerd.grpc.v1.cri".registry.mirrors]

    [plugins."io.containerd.grpc.v1.cri".x509_key_pair_streaming]
      tls_cert_file = ""
      tls_key_file = ""

  [plugins."io.containerd.internal.v1.opt"]
    path = "/opt/containerd"

  [plugins."io.containerd.internal.v1.restart"]
    interval = "10s"

  [plugins."io.containerd.internal.v1.tracing"]
    sampling_ratio = 1.0
    service_name = "containerd"

  [plugins."io.containerd.metadata.v1.bolt"]
    content_sharing_policy = "shared"

  [plugins."io.containerd.monitor.v1.cgroups"]
    no_prometheus = false

  [plugins."io.containerd.runtime.v1.linux"]
    no_shim = false
    runtime = "runc"
    runtime_root = ""
    shim = "containerd-shim"
    shim_debug = false

  [plugins."io.containerd.runtime.v2.task"]
    platforms = ["linux/amd64"]
    sched_core = false

  [plugins."io.containerd.service.v1.diff-service"]
    default = ["walking"]

  [plugins."io.containerd.service.v1.tasks-service"]
    rdt_config_file = ""

  [plugins."io.containerd.snapshotter.v1.aufs"]
    root_path = ""

  [plugins."io.containerd.snapshotter.v1.btrfs"]
    root_path = ""

  [plugins."io.containerd.snapshotter.v1.devmapper"]
    async_remove = false
    base_image_size = ""
    discard_blocks = false
    fs_options = ""
    fs_type = ""
    pool_name = ""
    root_path = ""

  [plugins."io.containerd.snapshotter.v1.native"]
    root_path = ""

  [plugins."io.containerd.snapshotter.v1.overlayfs"]
    root_path = ""
    upperdir_label = false

  [plugins."io.containerd.snapshotter.v1.zfs"]
    root_path = ""

  [plugins."io.containerd.tracing.processor.v1.otlp"]
    endpoint = ""
    insecure = false
    protocol = ""

[proxy_plugins]

[stream_processors]

  [stream_processors."io.containerd.ocicrypt.decoder.v1.tar"]
    accepts = ["application/vnd.oci.image.layer.v1.tar+encrypted"]
    args = ["--decryption-keys-path", "/etc/containerd/ocicrypt/keys"]
    env = ["OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf"]
    path = "ctd-decoder"
    returns = "application/vnd.oci.image.layer.v1.tar"

  [stream_processors."io.containerd.ocicrypt.decoder.v1.tar.gzip"]
    accepts = ["application/vnd.oci.image.layer.v1.tar+gzip+encrypted"]
    args = ["--decryption-keys-path", "/etc/containerd/ocicrypt/keys"]
    env = ["OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf"]
    path = "ctd-decoder"
    returns = "application/vnd.oci.image.layer.v1.tar+gzip"

[timeouts]
  "io.containerd.timeout.bolt.open" = "0s"
  "io.containerd.timeout.shim.cleanup" = "5s"
  "io.containerd.timeout.shim.load" = "5s"
  "io.containerd.timeout.shim.shutdown" = "3s"
  "io.containerd.timeout.task.state" = "2s"

[ttrpc]
  address = ""
  gid = 0
  uid = 0
mfm@mm74:~$ sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
mfm@mm74:~$ sudo sed -i 's/^disabled_plugins \=/\#disabled_plugins \=/g' /etc/containerd/config.toml
mfm@mm74:~$ sudo systemctl restart containerd
mfm@mm74:~$ sudo ufw allow 6443/tcp
Rules updated
Rules updated (v6)
mfm@mm74:~$ sudo ufw allow 2379/tcp
Rules updated
Rules updated (v6)
mfm@mm74:~$ sudo ufw allow 2380/tcp
Rules updated
Rules updated (v6)
mfm@mm74:~$ sudo ufw allow 10250/tcp
Rules updated
Rules updated (v6)
mfm@mm74:~$ sudo ufw allow 10257/tcp
Rules updated
Rules updated (v6)
mfm@mm74:~$ sudo ufw allow 10259/tcp
Rules updated
Rules updated (v6)
mfm@mm74:~$ sudo ufw reload
Firewall not enabled (skipping reload)
mfm@mm74:~$ sudo ufw allow 10250/tcp
Skipping adding existing rule
Skipping adding existing rule (v6)
mfm@mm74:~$ sudo ufw allow 30000:32767/tcp
Rules updated
Rules updated (v6)
mfm@mm74:~$ sudo ufw reload
Firewall not enabled (skipping reload)
mfm@mm74:~$ cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
> br_netfilter
> EOF
br_netfilter
mfm@mm74:~$ cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
all-ipta> net.bridge.bridge-nf-call-ip6tables = 1
> net.bridge.bridge-nf-call-iptables = 1
> net.ipv4.ip_forward = 1
> EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
mfm@mm74:~$ sudo sysctl --system
* Applying /etc/sysctl.d/10-console-messages.conf ...
kernel.printk = 4 4 1 7
* Applying /etc/sysctl.d/10-ipv6-privacy.conf ...
net.ipv6.conf.all.use_tempaddr = 2
net.ipv6.conf.default.use_tempaddr = 2
* Applying /etc/sysctl.d/10-kernel-hardening.conf ...
kernel.kptr_restrict = 1
* Applying /etc/sysctl.d/10-magic-sysrq.conf ...
kernel.sysrq = 176
* Applying /etc/sysctl.d/10-network-security.conf ...
net.ipv4.conf.default.rp_filter = 2
net.ipv4.conf.all.rp_filter = 2
* Applying /etc/sysctl.d/10-ptrace.conf ...
kernel.yama.ptrace_scope = 1
* Applying /etc/sysctl.d/10-zeropage.conf ...
vm.mmap_min_addr = 65536
* Applying /usr/lib/sysctl.d/50-default.conf ...
kernel.core_uses_pid = 1
net.ipv4.conf.default.rp_filter = 2
net.ipv4.conf.default.accept_source_route = 0
sysctl: setting key "net.ipv4.conf.all.accept_source_route": Invalid argument
net.ipv4.conf.default.promote_secondaries = 1
sysctl: setting key "net.ipv4.conf.all.promote_secondaries": Invalid argument
net.ipv4.ping_group_range = 0 2147483647
net.core.default_qdisc = fq_codel
fs.protected_hardlinks = 1
fs.protected_symlinks = 1
fs.protected_regular = 1
fs.protected_fifos = 1
* Applying /usr/lib/sysctl.d/50-pid-max.conf ...
kernel.pid_max = 4194304
* Applying /etc/sysctl.d/99-cloudimg-ipv6.conf ...
net.ipv6.conf.all.use_tempaddr = 0
net.ipv6.conf.default.use_tempaddr = 0
* Applying /usr/lib/sysctl.d/99-protect-links.conf ...
fs.protected_fifos = 1
fs.protected_hardlinks = 1
fs.protected_regular = 2
fs.protected_symlinks = 1
* Applying /etc/sysctl.d/99-sysctl.conf ...
net.core.rmem_default = 12582912
net.core.wmem_default = 12582912
net.core.rmem_max = 12582912
net.core.wmem_max = 12582912
net.ipv4.tcp_rmem = 10240 87380 12582912
net.ipv4.tcp_wmem = 10240 87380 12582912
net.ipv4.tcp_congestion_control = westwood
* Applying /etc/sysctl.d/k8s.conf ...
net.ipv4.ip_forward = 1
* Applying /etc/sysctl.conf ...
net.core.rmem_default = 12582912
net.core.wmem_default = 12582912
net.core.rmem_max = 12582912
net.core.wmem_max = 12582912
net.ipv4.tcp_rmem = 10240 87380 12582912
net.ipv4.tcp_wmem = 10240 87380 12582912
net.ipv4.tcp_congestion_control = westwood
mfm@mm74:~$ sudo swapoff -a
mfm@mm74:~$ sudo vi /etc/fstab  # comment out swap line
mfm@mm74:~$ mfm@mm74:~$ sudo cat /etc/fstab
UUID=f3d0a9d8-d335-4d42-862a-ea76f43074b5       /       ext4    errors=remount-ro       0       1
#UUID=15f9e25a-9dbf-4053-b54f-42209add753d      none    swap    none    0       0

mfm@mm74:~$ sudo modprobe br_netfilter
mfm@mm74:~$ sudo sysctl net.bridge.bridge-nf-call-iptables=1
net.bridge.bridge-nf-call-iptables = 1
mfm@mm74:~$ sudo apt update
Hit:1 https://download.docker.com/linux/ubuntu jammy InRelease
Hit:2 http://archive.ubuntu.com/ubuntu jammy InRelease
Hit:3 http://security.ubuntu.com/ubuntu jammy-security InRelease
Hit:4 http://archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:5 http://archive.ubuntu.com/ubuntu jammy-backports InRelease
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
71 packages can be upgraded. Run 'apt list --upgradable' to see them.
mfm@mm74:~$ sudo apt install -y apt-transport-https ca-certificates curl
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
ca-certificates is already the newest version (20211016).
curl is already the newest version (7.81.0-1ubuntu1.3).
The following packages will be upgraded:
  apt-transport-https
1 upgraded, 0 newly installed, 0 to remove and 70 not upgraded.
Need to get 1512 B of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 apt-transport-https all 2.4.7 [1512 B]
Fetched 1512 B in 0s (6897 B/s)
(Reading database ... 74946 files and directories currently installed.)
Preparing to unpack .../apt-transport-https_2.4.7_all.deb ...
Unpacking apt-transport-https (2.4.7) over (2.4.5) ...
Setting up apt-transport-https (2.4.7) ...
Scanning processes...
Scanning processor microcode...
Scanning linux images...

Running kernel seems to be up-to-date.

The processor microcode seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
mfm@mm74:~$ sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
mfm@mm74:~$ echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
mfm@mm74:~$ sudo apt update
Hit:1 https://download.docker.com/linux/ubuntu jammy InRelease
Get:2 https://packages.cloud.google.com/apt kubernetes-xenial InRelease [9383 B]
Hit:3 http://security.ubuntu.com/ubuntu jammy-security InRelease
Hit:4 http://archive.ubuntu.com/ubuntu jammy InRelease
Get:5 https://packages.cloud.google.com/apt kubernetes-xenial/main amd64 Packages [57.6 kB]
Hit:6 http://archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:7 http://archive.ubuntu.com/ubuntu jammy-backports InRelease
Fetched 67.0 kB in 1s (110 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
70 packages can be upgraded. Run 'apt list --upgradable' to see them.
mfm@mm74:~$ sudo apt install -y kubelet kubeadm kubectl
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following additional packages will be installed:
  conntrack cri-tools ebtables kubernetes-cni socat
The following NEW packages will be installed:
  conntrack cri-tools ebtables kubeadm kubectl kubelet kubernetes-cni socat
0 upgraded, 8 newly installed, 0 to remove and 70 not upgraded.
Need to get 75.2 MB of archives.
After this operation, 313 MB of additional disk space will be used.
Get:1 https://packages.cloud.google.com/apt kubernetes-xenial/main amd64 cri-tools amd64 1.24.2-00 [12.3 MB]
Get:6 http://archive.ubuntu.com/ubuntu jammy/main amd64 conntrack amd64 1:1.4.6-2build2 [33.5 kB]
Get:7 http://archive.ubuntu.com/ubuntu jammy/main amd64 ebtables amd64 2.0.11-4build2 [84.9 kB]
Get:2 https://packages.cloud.google.com/apt kubernetes-xenial/main amd64 kubernetes-cni amd64 0.8.7-00 [25.0 MB]
Get:8 http://archive.ubuntu.com/ubuntu jammy/main amd64 socat amd64 1.7.4.1-3ubuntu4 [349 kB]
Get:3 https://packages.cloud.google.com/apt kubernetes-xenial/main amd64 kubelet amd64 1.24.3-00 [19.2 MB]
Get:4 https://packages.cloud.google.com/apt kubernetes-xenial/main amd64 kubectl amd64 1.24.3-00 [9316 kB]
Get:5 https://packages.cloud.google.com/apt kubernetes-xenial/main amd64 kubeadm amd64 1.24.3-00 [9002 kB]
Fetched 75.2 MB in 2s (43.8 MB/s)
Selecting previously unselected package conntrack.
(Reading database ... 74946 files and directories currently installed.)
Preparing to unpack .../0-conntrack_1%3a1.4.6-2build2_amd64.deb ...
Unpacking conntrack (1:1.4.6-2build2) ...
Selecting previously unselected package cri-tools.
Preparing to unpack .../1-cri-tools_1.24.2-00_amd64.deb ...
Unpacking cri-tools (1.24.2-00) ...
Selecting previously unselected package ebtables.
Preparing to unpack .../2-ebtables_2.0.11-4build2_amd64.deb ...
Unpacking ebtables (2.0.11-4build2) ...
Selecting previously unselected package kubernetes-cni.
Preparing to unpack .../3-kubernetes-cni_0.8.7-00_amd64.deb ...
Unpacking kubernetes-cni (0.8.7-00) ...
Selecting previously unselected package socat.
Preparing to unpack .../4-socat_1.7.4.1-3ubuntu4_amd64.deb ...
Unpacking socat (1.7.4.1-3ubuntu4) ...
Selecting previously unselected package kubelet.
Preparing to unpack .../5-kubelet_1.24.3-00_amd64.deb ...
Unpacking kubelet (1.24.3-00) ...
Selecting previously unselected package kubectl.
Preparing to unpack .../6-kubectl_1.24.3-00_amd64.deb ...
Unpacking kubectl (1.24.3-00) ...
Selecting previously unselected package kubeadm.
Preparing to unpack .../7-kubeadm_1.24.3-00_amd64.deb ...
Unpacking kubeadm (1.24.3-00) ...
Setting up conntrack (1:1.4.6-2build2) ...
Setting up kubectl (1.24.3-00) ...
Setting up ebtables (2.0.11-4build2) ...
Setting up socat (1.7.4.1-3ubuntu4) ...
Setting up cri-tools (1.24.2-00) ...
Setting up kubernetes-cni (0.8.7-00) ...
Setting up kubelet (1.24.3-00) ...
Created symlink /etc/systemd/system/multi-user.target.wants/kubelet.service → /lib/systemd/system/kubelet.service.
Setting up kubeadm (1.24.3-00) ...
Processing triggers for man-db (2.10.2-1) ...
Scanning processes...
Scanning processor microcode...
Scanning linux images...

Running kernel seems to be up-to-date.

The processor microcode seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
mfm@mm74:~$ sudo kubeadm init --pod-network-cidr=192.168.0.0/16
[init] Using Kubernetes version: v1.24.3
[preflight] Running pre-flight checks
        [WARNING SystemVerification]: missing optional cgroups: blkio
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local mm74] and IPs [10.96.0.1 145.40.99.43]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [localhost mm74] and IPs [145.40.99.43 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [localhost mm74] and IPs [145.40.99.43 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
[apiclient] All control plane components are healthy after 6.001951 seconds
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Skipping phase. Please see --upload-certs
[mark-control-plane] Marking the node mm74 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node mm74 as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: ygvuj2.he7ssistontxqeel
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 145.40.99.43:6443 --token ygvuj2.he7ssistontxqeel \
        --discovery-token-ca-cert-hash sha256:1a519dbf0000655cec9f4acb8d562459d822cd0e288e264ed0ee54e522e24f62
mfm@mm74:~$ mkdir -p $HOME/.kube
mfm@mm74:~$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
mfm@mm74:~$ sudo chown $(id -u):$(id -g) $HOME/.kube/config
mfm@mm74:~$ kubectl taint nodes --all node-role.kubernetes.io/master-
node/mm74 untainted
mfm@mm74:~$ kubectl taint nodes --all node-role.kubernetes.io/control-plane-
node/mm74 untainted
mfm@mm74:~$ kubectl create -f https://projectcalico.docs.tigera.io/manifests/tigera-operator.yaml
namespace/tigera-operator created
customresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/apiservers.operator.tigera.io created
customresourcedefinition.apiextensions.k8s.io/imagesets.operator.tigera.io created
customresourcedefinition.apiextensions.k8s.io/installations.operator.tigera.io created
customresourcedefinition.apiextensions.k8s.io/tigerastatuses.operator.tigera.io created
Warning: policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
podsecuritypolicy.policy/tigera-operator created
serviceaccount/tigera-operator created
clusterrole.rbac.authorization.k8s.io/tigera-operator created
clusterrolebinding.rbac.authorization.k8s.io/tigera-operator created
deployment.apps/tigera-operator created
mfm@mm74:~$ kubectl create -f https://projectcalico.docs.tigera.io/manifests/custom-resources.yaml
installation.operator.tigera.io/default created
apiserver.operator.tigera.io/default created
mfm@mm74:~$ kubectl get nodes --show-labels
NAME   STATUS   ROLES           AGE     VERSION   LABELS
mm74   Ready    control-plane   2m56s   v1.24.3   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=mm74,kubernetes.io/os=linux,node-role.kubernetes.io/control-plane=,node.kubernetes.io/exclude-from-external-load-balancers=
mfm@mm74:~$ sudo mkdir -p /k8s/weathervane/vol
mfm@mm74:~$ sudo chmod -R 777 /k8s
mfm@mm74:~$ git clone http://github.com/vmware/weathervane
Cloning into 'weathervane'...
warning: redirecting to https://github.com/vmware/weathervane/
remote: Enumerating objects: 19144, done.
remote: Counting objects: 100% (1935/1935), done.
remote: Compressing objects: 100% (630/630), done.
remote: Total 19144 (delta 1003), reused 1874 (delta 959), pack-reused 17209
Receiving objects: 100% (19144/19144), 64.62 MiB | 76.94 MiB/s, done.
Resolving deltas: 100% (11699/11699), done.
mfm@mm74:~$ cd weathervane/
mfm@mm74:/home/mfm/weathervane$ cat > create-persistent-vol.yaml << EOF
> apiVersion: v1
> kind: PersistentVolume
> metadata:
>   name: weathervane-pv
> spec:
>   capacity:
>     storage: 400Gi
>   accessModes:
>   - ReadWriteOnce
>   persistentVolumeReclaimPolicy: Retain
>   storageClassName: local-storage
>   local:
>     path: /k8s/weathervane/vol
>   nodeAffinity:
>     required:
>       nodeSelectorTerms:
>       - matchExpressions:
>         - key: kubernetes.io/hostname
>           operator: In
>           values:
>           - mm74
> EOF
mfm@mm74:/home/mfm/weathervane$ kubectl create -f create-persistent-vol.yaml
persistentvolume/weathervane-pv created
mfm@mm74:/home/mfm/weathervane$ kubectl get pv
NAME             CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS    REASON   AGE
weathervane-pv   400Gi      RWO            Retain           Available           local-storage            11s
mfm@mm74:/home/mfm/weathervane$ cat > create-storage-class.yaml << EOF
.k8s.io/v1
metadata:
  name: l> kind: StorageClass
> apiVersion: storage.k8s.io/v1
> metadata:
>   name: local-storage
visioner: kuber> provisioner: kubernetes.io/no-provisioner
> volumeBindingMode: Immediate
> EOF
mfm@mm74:/home/mfm/weathervane$ kubectl create -f create-storage-class.yaml
storageclass.storage.k8s.io/local-storage created
mfm@mm74:/home/mfm/weathervane$ kubectl get sc
NAME            PROVISIONER                    RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE
local-storage   kubernetes.io/no-provisioner   Delete          Immediate           false                  8s
mfm@mm74:/home/mfm/weathervane$ cat > weathervane.config.k8s.quickstart << EOF
> {
>   "description" : "micro",
>   "configurationSize": "micro",
>   "runStrategy" : "fixed",
>   "dockerNamespace" : "mikemoranamd",
>   "kubernetesClusters" : [
>     {
>       "name" : "kubernetes",
>       "kubeconfigFile" : "/home/mfm/.kube/config",
>       "kubeconfigContext" : "",
>     },
>   ],
>   "driverCluster" : "kubernetes",
>   "appInstanceCluster" : "kubernetes",
>   "appIngressMethod" : "clusterip",
>   "cassandraDataStorageClass" : "local-storage",
>   "postgresqlStorageClass" : "local-storage",
>   "nginxCacheStorageClass" : "local-storage",
> }
> EOF
mfm@mm74:/home/mfm/weathervane$ cat create-persistent-vol.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: weathervane-pv
spec:
  capacity:
    storage: 400Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /k8s/weathervane/vol
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - mm74
mfm@mm74:/home/mfm/weathervane$ cat create-storage-class.yaml
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: Immediate
mfm@mm74:/home/mfm/weathervane$ cat weathervane.config.k8s.quickstart
{
  "description" : "micro",
  "configurationSize": "micro",
  "runStrategy" : "fixed",
  "dockerNamespace" : "mikemoranamd",
  "kubernetesClusters" : [
    {
      "name" : "kubernetes",
      "kubeconfigFile" : "/home/mfm/.kube/config",
      "kubeconfigContext" : "",
    },
  ],
  "driverCluster" : "kubernetes",
  "appInstanceCluster" : "kubernetes",
  "appIngressMethod" : "clusterip",
  "cassandraDataStorageClass" : "local-storage",
  "postgresqlStorageClass" : "local-storage",
  "nginxCacheStorageClass" : "local-storage",
}
mfm@mm74:/home/mfm/weathervane$ sudo ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
Weathervane
Copyright (c) 2019 VMware, Inc. All Rights Reserved.

This product is licensed to you under the BSD-2 license (the "License").  You may not use this product except in compliance with the BSD-2 License.

This product may include a number of subcomponents with separate copyright notices and license terms. Your use of these subcomponents is subject to the terms and conditions of the subcomponent's license, as noted in the LICENSE file.

Do you accept these terms and conditions (yes/no)? yes
Starting Weathervane Run-Harness.  Pulling container image may take a few minutes.
Can't open docker logs pipe (docker logs --follow weathervane |) : No such file or directory
mfm@mm74:/home/mfm/weathervane$ ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
Weathervane is unable to create a persistant volume using storage class local-storage in kubernetesCluster kubernetes.
Check the configuration of your cluster to ensure that the storage class exists and can provision persistent volumes.
mfm@mm74:/home/mfm/weathervane$ history
    1  sudo apt update
    2  sudo apt install -y ca-certificates curl gnupg lsb-release
    3  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    4  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list
    5  sudo apt update
    6  sudo apt install -y containerd.io
    7  wget https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64
    8  sudo install -m 755 runc.amd64 /usr/local/sbin/runc
    9  sudo mkdir -p /etc/containerd/
   10  containerd config default | sudo tee /etc/containerd/config.toml
   11  sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
   12  sudo sed -i 's/^disabled_plugins \=/\#disabled_plugins \=/g' /etc/containerd/config.toml
   13  sudo systemctl restart containerd
   14  sudo ufw allow 6443/tcp
   15  sudo ufw allow 2379/tcp
   16  sudo ufw allow 2380/tcp
   17  sudo ufw allow 10250/tcp
   18  sudo ufw allow 10257/tcp
   19  sudo ufw allow 10259/tcp
   20  sudo ufw reload
   21  sudo ufw allow 10250/tcp
   22  sudo ufw allow 30000:32767/tcp
   23  sudo ufw reload
   24  cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

   25  cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

   26  sudo sysctl --system
   27  sudo swapoff -a
   28  sudo vi /etc/fstab  # comment out swap line
   29  sudo cat /etc/fstab
   30  sudo modprobe br_netfilter
   31  sudo sysctl net.bridge.bridge-nf-call-iptables=1
   32  sudo apt update
   33  sudo apt install -y apt-transport-https ca-certificates curl
   34  sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
   35  echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
   36  sudo apt update
   37  sudo apt install -y kubelet kubeadm kubectl
   38  sudo kubeadm init --pod-network-cidr=192.168.0.0/16
   39  mkdir -p $HOME/.kube
   40  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   41  sudo chown $(id -u):$(id -g) $HOME/.kube/config
   42  kubectl taint nodes --all node-role.kubernetes.io/master-
   43  kubectl taint nodes --all node-role.kubernetes.io/control-plane-
   44  kubectl create -f https://projectcalico.docs.tigera.io/manifests/tigera-operator.yaml
   45  kubectl create -f https://projectcalico.docs.tigera.io/manifests/custom-resources.yaml
   46  kubectl get nodes --show-labels
   47  sudo mkdir -p /k8s/weathervane/vol
   48  sudo chmod -R 777 /k8s
   49  git clone http://github.com/vmware/weathervane
   50  cd weathervane/
   51  cat > create-persistent-vol.yaml << EOF
apiVersion: v1
kind: PersistentVolume
metadata:
  name: weathervane-pv
spec:
  capacity:
    storage: 400Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /k8s/weathervane/vol
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - mm74
EOF

   52  kubectl create -f create-persistent-vol.yaml
   53  kubectl get pv
   54  cat > create-storage-class.yaml << EOF
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: Immediate
EOF

   55  kubectl create -f create-storage-class.yaml
   56  kubectl get sc
   57  cat > weathervane.config.k8s.quickstart << EOF
{
  "description" : "micro",
  "configurationSize": "micro",
  "runStrategy" : "fixed",
  "dockerNamespace" : "mikemoranamd",
  "kubernetesClusters" : [
    {
      "name" : "kubernetes",
      "kubeconfigFile" : "/home/mfm/.kube/config",
      "kubeconfigContext" : "",
    },
  ],
  "driverCluster" : "kubernetes",
  "appInstanceCluster" : "kubernetes",
  "appIngressMethod" : "clusterip",
  "cassandraDataStorageClass" : "local-storage",
  "postgresqlStorageClass" : "local-storage",
  "nginxCacheStorageClass" : "local-storage",
}
EOF

   58  cat create-persistent-vol.yaml
   59  cat create-storage-class.yaml
   60  cat weathervane.config.k8s.quickstart
   61  sudo ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
   62  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
   63  history
mfm@mm74:/home/mfm/weathervane$






Microsoft Windows [Version 10.0.19044.1826]
(c) Microsoft Corporation. All rights reserved.

C:\Users\mikmoran>ssh root@145.40.99.43
The authenticity of host '145.40.99.43 (145.40.99.43)' can't be established.
ECDSA key fingerprint is SHA256:JPbHax+TaXTMRsNEW/aihQVqpnhrkZT8f75NWWDfnBE.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '145.40.99.43' (ECDSA) to the list of known hosts.
Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-33-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Wed Aug 17 19:19:24 UTC 2022

  System load:            0.0263671875
  Usage of /:             1.5% of 218.06GB
  Memory usage:           1%
  Swap usage:             0%
  Processes:              567
  Users logged in:        0
  IPv4 address for bond0: 145.40.99.43
  IPv6 address for bond0: 2604:1380:4641:3b00::d

6 updates can be applied immediately.
6 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable


The list of available updates is more than a week old.
To check for new updates run: sudo apt update


The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

root@mm74:~# uname -a
Linux mm74 5.15.0-33-generic #34-Ubuntu SMP Wed May 18 13:34:26 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux
root@mm74:~# useradd -s /bin/bash -d /home/mfm/ -m -G sudo mfm
root@mm74:~# passwd mfm
New password:
Retype new password:
passwd: password updated successfully
root@mm74:~# cp -r ~/.ssh /home/mfm/.ssh
root@mm74:~# chown -R mfm:mfm /home/mfm/.ssh
root@mm74:~#
logout
Connection to 145.40.99.43 closed.

C:\Users\mikmoran>ssh mfm@145.40.99.43
Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-33-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Wed Aug 17 19:24:43 UTC 2022

  System load:            0.0
  Usage of /:             1.5% of 218.06GB
  Memory usage:           1%
  Swap usage:             0%
  Processes:              511
  Users logged in:        0
  IPv4 address for bond0: 145.40.99.43
  IPv6 address for bond0: 2604:1380:4641:3b00::d


6 updates can be applied immediately.
6 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable


The list of available updates is more than a week old.
To check for new updates run: sudo apt update


The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

mfm@mm74:~$ sudo apt update
[sudo] password for mfm:
Hit:1 http://archive.ubuntu.com/ubuntu jammy InRelease
Get:2 http://security.ubuntu.com/ubuntu jammy-security InRelease [110 kB]
Get:3 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [114 kB]
Get:4 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [267 kB]
Get:5 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [99.8 kB]
Get:6 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [509 kB]
Get:7 http://security.ubuntu.com/ubuntu jammy-security/main Translation-en [63.6 kB]
Get:8 http://security.ubuntu.com/ubuntu jammy-security/main amd64 c-n-f Metadata [3924 B]
Get:9 http://security.ubuntu.com/ubuntu jammy-security/restricted amd64 Packages [243 kB]
Get:10 http://security.ubuntu.com/ubuntu jammy-security/restricted Translation-en [37.3 kB]
Get:11 http://security.ubuntu.com/ubuntu jammy-security/restricted amd64 c-n-f Metadata [524 B]
Get:12 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [108 kB]
Get:13 http://archive.ubuntu.com/ubuntu jammy-updates/main Translation-en [121 kB]
Get:14 http://security.ubuntu.com/ubuntu jammy-security/universe Translation-en [37.5 kB]
Get:15 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 c-n-f Metadata [2408 B]
Get:16 http://security.ubuntu.com/ubuntu jammy-security/multiverse amd64 Packages [4192 B]
Get:17 http://security.ubuntu.com/ubuntu jammy-security/multiverse amd64 c-n-f Metadata [228 B]
Get:18 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 c-n-f Metadata [7368 B]
Get:19 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [276 kB]
Get:20 http://archive.ubuntu.com/ubuntu jammy-updates/restricted Translation-en [42.5 kB]
Get:21 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 c-n-f Metadata [524 B]
Get:22 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [213 kB]
Get:23 http://archive.ubuntu.com/ubuntu jammy-updates/universe Translation-en [71.1 kB]
Get:24 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 c-n-f Metadata [4404 B]
Get:25 http://archive.ubuntu.com/ubuntu jammy-updates/multiverse amd64 Packages [7000 B]
Get:26 http://archive.ubuntu.com/ubuntu jammy-updates/multiverse Translation-en [2264 B]
Get:27 http://archive.ubuntu.com/ubuntu jammy-updates/multiverse amd64 c-n-f Metadata [420 B]
Get:28 http://archive.ubuntu.com/ubuntu jammy-backports/universe amd64 Packages [5416 B]
Get:29 http://archive.ubuntu.com/ubuntu jammy-backports/universe Translation-en [8248 B]
Get:30 http://archive.ubuntu.com/ubuntu jammy-backports/universe amd64 c-n-f Metadata [236 B]
Fetched 2359 kB in 2s (1569 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
84 packages can be upgraded. Run 'apt list --upgradable' to see them.
mfm@mm74:~$ sudo apt install -y ca-certificates curl gnupg lsb-release
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
ca-certificates is already the newest version (20211016).
ca-certificates set to manually installed.
lsb-release is already the newest version (11.1.0ubuntu4).
lsb-release set to manually installed.
The following additional packages will be installed:
  dirmngr gnupg-l10n gnupg-utils gpg gpg-agent gpg-wks-client gpg-wks-server gpgconf gpgsm gpgv libcurl4
Suggested packages:
  pinentry-gnome3 tor parcimonie xloadimage scdaemon
The following packages will be upgraded:
  curl dirmngr gnupg gnupg-l10n gnupg-utils gpg gpg-agent gpg-wks-client gpg-wks-server gpgconf gpgsm gpgv libcurl4
13 upgraded, 0 newly installed, 0 to remove and 71 not upgraded.
Need to get 2730 kB of archives.
After this operation, 4096 B of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gpg-wks-client amd64 2.2.27-3ubuntu2.1 [62.7 kB]
Get:2 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 dirmngr amd64 2.2.27-3ubuntu2.1 [293 kB]
Get:3 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gnupg-utils amd64 2.2.27-3ubuntu2.1 [308 kB]
Get:4 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gpg-wks-server amd64 2.2.27-3ubuntu2.1 [57.5 kB]
Get:5 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gpg-agent amd64 2.2.27-3ubuntu2.1 [209 kB]
Get:6 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gpg amd64 2.2.27-3ubuntu2.1 [519 kB]
Get:7 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gpgconf amd64 2.2.27-3ubuntu2.1 [94.2 kB]
Get:8 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gnupg-l10n all 2.2.27-3ubuntu2.1 [54.4 kB]
Get:9 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gnupg all 2.2.27-3ubuntu2.1 [315 kB]
Get:10 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gpgsm amd64 2.2.27-3ubuntu2.1 [197 kB]
Get:11 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 gpgv amd64 2.2.27-3ubuntu2.1 [137 kB]
Get:12 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 curl amd64 7.81.0-1ubuntu1.3 [194 kB]
Get:13 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 libcurl4 amd64 7.81.0-1ubuntu1.3 [290 kB]
Fetched 2730 kB in 1s (2247 kB/s)
(Reading database ... 74930 files and directories currently installed.)
Preparing to unpack .../00-gpg-wks-client_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gpg-wks-client (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../01-dirmngr_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking dirmngr (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../02-gnupg-utils_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gnupg-utils (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../03-gpg-wks-server_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gpg-wks-server (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../04-gpg-agent_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gpg-agent (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../05-gpg_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gpg (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../06-gpgconf_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gpgconf (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../07-gnupg-l10n_2.2.27-3ubuntu2.1_all.deb ...
Unpacking gnupg-l10n (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../08-gnupg_2.2.27-3ubuntu2.1_all.deb ...
Unpacking gnupg (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../09-gpgsm_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gpgsm (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Preparing to unpack .../10-gpgv_2.2.27-3ubuntu2.1_amd64.deb ...
Unpacking gpgv (2.2.27-3ubuntu2.1) over (2.2.27-3ubuntu2) ...
Setting up gpgv (2.2.27-3ubuntu2.1) ...
(Reading database ... 74930 files and directories currently installed.)
Preparing to unpack .../curl_7.81.0-1ubuntu1.3_amd64.deb ...
Unpacking curl (7.81.0-1ubuntu1.3) over (7.81.0-1ubuntu1.2) ...
Preparing to unpack .../libcurl4_7.81.0-1ubuntu1.3_amd64.deb ...
Unpacking libcurl4:amd64 (7.81.0-1ubuntu1.3) over (7.81.0-1ubuntu1.2) ...
Setting up gnupg-l10n (2.2.27-3ubuntu2.1) ...
Setting up gpgconf (2.2.27-3ubuntu2.1) ...
Setting up libcurl4:amd64 (7.81.0-1ubuntu1.3) ...
Setting up curl (7.81.0-1ubuntu1.3) ...
Setting up gpg (2.2.27-3ubuntu2.1) ...
Setting up gnupg-utils (2.2.27-3ubuntu2.1) ...
Setting up gpg-agent (2.2.27-3ubuntu2.1) ...
Setting up gpgsm (2.2.27-3ubuntu2.1) ...
Setting up dirmngr (2.2.27-3ubuntu2.1) ...
Setting up gpg-wks-server (2.2.27-3ubuntu2.1) ...
Setting up gpg-wks-client (2.2.27-3ubuntu2.1) ...
Setting up gnupg (2.2.27-3ubuntu2.1) ...
Processing triggers for libc-bin (2.35-0ubuntu3) ...
Processing triggers for man-db (2.10.2-1) ...
Processing triggers for install-info (6.8-4build1) ...
Scanning processes...
Scanning processor microcode...
Scanning linux images...

Running kernel seems to be up-to-date.

The processor microcode seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
mfm@mm74:~$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
mfm@mm74:~$ echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list
deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu jammy stable
mfm@mm74:~$ sudo apt update
Get:1 https://download.docker.com/linux/ubuntu jammy InRelease [48.9 kB]
Get:2 https://download.docker.com/linux/ubuntu jammy/stable amd64 Packages [6255 B]
Hit:3 http://security.ubuntu.com/ubuntu jammy-security InRelease
Hit:4 http://archive.ubuntu.com/ubuntu jammy InRelease
Hit:5 http://archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:6 http://archive.ubuntu.com/ubuntu jammy-backports InRelease
Fetched 55.1 kB in 1s (91.8 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
71 packages can be upgraded. Run 'apt list --upgradable' to see them.
mfm@mm74:~$ sudo apt install -y containerd.io
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following NEW packages will be installed:
  containerd.io
0 upgraded, 1 newly installed, 0 to remove and 71 not upgraded.
Need to get 28.1 MB of archives.
After this operation, 127 MB of additional disk space will be used.
Get:1 https://download.docker.com/linux/ubuntu jammy/stable amd64 containerd.io amd64 1.6.7-1 [28.1 MB]
Fetched 28.1 MB in 2s (13.7 MB/s)
Selecting previously unselected package containerd.io.
(Reading database ... 74930 files and directories currently installed.)
Preparing to unpack .../containerd.io_1.6.7-1_amd64.deb ...
Unpacking containerd.io (1.6.7-1) ...
Setting up containerd.io (1.6.7-1) ...
Created symlink /etc/systemd/system/multi-user.target.wants/containerd.service → /lib/systemd/system/containerd.service.
Processing triggers for man-db (2.10.2-1) ...
Scanning processes...
Scanning processor microcode...
Scanning linux images...

Running kernel seems to be up-to-date.

The processor microcode seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
mfm@mm74:~$ wget https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64
--2022-08-17 19:28:20--  https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64
Resolving github.com (github.com)... 140.82.114.4
Connecting to github.com (github.com)|140.82.114.4|:443... connected.
HTTP request sent, awaiting response... 302 Found
Location: https://objects.githubusercontent.com/github-production-release-asset-2e65be/36960321/decb03b0-76a4-4ee7-bd06-4e3a548d9f87?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20220817%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220817T192820Z&X-Amz-Expires=300&X-Amz-Signature=dadf1064f9e9b36392b496ca8808408d9c2672ce7d20d51bef467f26f5c94e33&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=36960321&response-content-disposition=attachment%3B%20filename%3Drunc.amd64&response-content-type=application%2Foctet-stream [following]
--2022-08-17 19:28:20--  https://objects.githubusercontent.com/github-production-release-asset-2e65be/36960321/decb03b0-76a4-4ee7-bd06-4e3a548d9f87?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20220817%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220817T192820Z&X-Amz-Expires=300&X-Amz-Signature=dadf1064f9e9b36392b496ca8808408d9c2672ce7d20d51bef467f26f5c94e33&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=36960321&response-content-disposition=attachment%3B%20filename%3Drunc.amd64&response-content-type=application%2Foctet-stream
Resolving objects.githubusercontent.com (objects.githubusercontent.com)... 185.199.110.133, 185.199.109.133, 185.199.108.133, ...
Connecting to objects.githubusercontent.com (objects.githubusercontent.com)|185.199.110.133|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 9415040 (9.0M) [application/octet-stream]
Saving to: ‘runc.amd64’

runc.amd64                    100%[=================================================>]   8.98M  --.-KB/s    in 0.1s

2022-08-17 19:28:20 (80.7 MB/s) - ‘runc.amd64’ saved [9415040/9415040]

mfm@mm74:~$ sudo install -m 755 runc.amd64 /usr/local/sbin/runc
mfm@mm74:~$ sudo mkdir -p /etc/containerd/
mfm@mm74:~$ containerd config default | sudo tee /etc/containerd/config.toml
disabled_plugins = []
imports = []
oom_score = 0
plugin_dir = ""
required_plugins = []
root = "/var/lib/containerd"
state = "/run/containerd"
temp = ""
version = 2

[cgroup]
  path = ""

[debug]
  address = ""
  format = ""
  gid = 0
  level = ""
  uid = 0

[grpc]
  address = "/run/containerd/containerd.sock"
  gid = 0
  max_recv_message_size = 16777216
  max_send_message_size = 16777216
  tcp_address = ""
  tcp_tls_ca = ""
  tcp_tls_cert = ""
  tcp_tls_key = ""
  uid = 0

[metrics]
  address = ""
  grpc_histogram = false

[plugins]

  [plugins."io.containerd.gc.v1.scheduler"]
    deletion_threshold = 0
    mutation_threshold = 100
    pause_threshold = 0.02
    schedule_delay = "0s"
    startup_delay = "100ms"

  [plugins."io.containerd.grpc.v1.cri"]
    device_ownership_from_security_context = false
    disable_apparmor = false
    disable_cgroup = false
    disable_hugetlb_controller = true
    disable_proc_mount = false
    disable_tcp_service = true
    enable_selinux = false
    enable_tls_streaming = false
    enable_unprivileged_icmp = false
    enable_unprivileged_ports = false
    ignore_image_defined_volumes = false
    max_concurrent_downloads = 3
    max_container_log_line_size = 16384
    netns_mounts_under_state_dir = false
    restrict_oom_score_adj = false
    sandbox_image = "k8s.gcr.io/pause:3.6"
    selinux_category_range = 1024
    stats_collect_period = 10
    stream_idle_timeout = "4h0m0s"
    stream_server_address = "127.0.0.1"
    stream_server_port = "0"
    systemd_cgroup = false
    tolerate_missing_hugetlb_controller = true
    unset_seccomp_profile = ""

    [plugins."io.containerd.grpc.v1.cri".cni]
      bin_dir = "/opt/cni/bin"
      conf_dir = "/etc/cni/net.d"
      conf_template = ""
      ip_pref = ""
      max_conf_num = 1

    [plugins."io.containerd.grpc.v1.cri".containerd]
      default_runtime_name = "runc"
      disable_snapshot_annotations = true
      discard_unpacked_layers = false
      ignore_rdt_not_enabled_errors = false
      no_pivot = false
      snapshotter = "overlayfs"

      [plugins."io.containerd.grpc.v1.cri".containerd.default_runtime]
        base_runtime_spec = ""
        cni_conf_dir = ""
        cni_max_conf_num = 0
        container_annotations = []
        pod_annotations = []
        privileged_without_host_devices = false
        runtime_engine = ""
        runtime_path = ""
        runtime_root = ""
        runtime_type = ""

        [plugins."io.containerd.grpc.v1.cri".containerd.default_runtime.options]

      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]

        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
          base_runtime_spec = ""
          cni_conf_dir = ""
          cni_max_conf_num = 0
          container_annotations = []
          pod_annotations = []
          privileged_without_host_devices = false
          runtime_engine = ""
          runtime_path = ""
          runtime_root = ""
          runtime_type = "io.containerd.runc.v2"

          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
            BinaryName = ""
            CriuImagePath = ""
            CriuPath = ""
            CriuWorkPath = ""
            IoGid = 0
            IoUid = 0
            NoNewKeyring = false
            NoPivotRoot = false
            Root = ""
            ShimCgroup = ""
            SystemdCgroup = false

      [plugins."io.containerd.grpc.v1.cri".containerd.untrusted_workload_runtime]
        base_runtime_spec = ""
        cni_conf_dir = ""
        cni_max_conf_num = 0
        container_annotations = []
        pod_annotations = []
        privileged_without_host_devices = false
        runtime_engine = ""
        runtime_path = ""
        runtime_root = ""
        runtime_type = ""

        [plugins."io.containerd.grpc.v1.cri".containerd.untrusted_workload_runtime.options]

    [plugins."io.containerd.grpc.v1.cri".image_decryption]
      key_model = "node"

    [plugins."io.containerd.grpc.v1.cri".registry]
      config_path = ""

      [plugins."io.containerd.grpc.v1.cri".registry.auths]

      [plugins."io.containerd.grpc.v1.cri".registry.configs]

      [plugins."io.containerd.grpc.v1.cri".registry.headers]

      [plugins."io.containerd.grpc.v1.cri".registry.mirrors]

    [plugins."io.containerd.grpc.v1.cri".x509_key_pair_streaming]
      tls_cert_file = ""
      tls_key_file = ""

  [plugins."io.containerd.internal.v1.opt"]
    path = "/opt/containerd"

  [plugins."io.containerd.internal.v1.restart"]
    interval = "10s"

  [plugins."io.containerd.internal.v1.tracing"]
    sampling_ratio = 1.0
    service_name = "containerd"

  [plugins."io.containerd.metadata.v1.bolt"]
    content_sharing_policy = "shared"

  [plugins."io.containerd.monitor.v1.cgroups"]
    no_prometheus = false

  [plugins."io.containerd.runtime.v1.linux"]
    no_shim = false
    runtime = "runc"
    runtime_root = ""
    shim = "containerd-shim"
    shim_debug = false

  [plugins."io.containerd.runtime.v2.task"]
    platforms = ["linux/amd64"]
    sched_core = false

  [plugins."io.containerd.service.v1.diff-service"]
    default = ["walking"]

  [plugins."io.containerd.service.v1.tasks-service"]
    rdt_config_file = ""

  [plugins."io.containerd.snapshotter.v1.aufs"]
    root_path = ""

  [plugins."io.containerd.snapshotter.v1.btrfs"]
    root_path = ""

  [plugins."io.containerd.snapshotter.v1.devmapper"]
    async_remove = false
    base_image_size = ""
    discard_blocks = false
    fs_options = ""
    fs_type = ""
    pool_name = ""
    root_path = ""

  [plugins."io.containerd.snapshotter.v1.native"]
    root_path = ""

  [plugins."io.containerd.snapshotter.v1.overlayfs"]
    root_path = ""
    upperdir_label = false

  [plugins."io.containerd.snapshotter.v1.zfs"]
    root_path = ""

  [plugins."io.containerd.tracing.processor.v1.otlp"]
    endpoint = ""
    insecure = false
    protocol = ""

[proxy_plugins]

[stream_processors]

  [stream_processors."io.containerd.ocicrypt.decoder.v1.tar"]
    accepts = ["application/vnd.oci.image.layer.v1.tar+encrypted"]
    args = ["--decryption-keys-path", "/etc/containerd/ocicrypt/keys"]
    env = ["OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf"]
    path = "ctd-decoder"
    returns = "application/vnd.oci.image.layer.v1.tar"

  [stream_processors."io.containerd.ocicrypt.decoder.v1.tar.gzip"]
    accepts = ["application/vnd.oci.image.layer.v1.tar+gzip+encrypted"]
    args = ["--decryption-keys-path", "/etc/containerd/ocicrypt/keys"]
    env = ["OCICRYPT_KEYPROVIDER_CONFIG=/etc/containerd/ocicrypt/ocicrypt_keyprovider.conf"]
    path = "ctd-decoder"
    returns = "application/vnd.oci.image.layer.v1.tar+gzip"

[timeouts]
  "io.containerd.timeout.bolt.open" = "0s"
  "io.containerd.timeout.shim.cleanup" = "5s"
  "io.containerd.timeout.shim.load" = "5s"
  "io.containerd.timeout.shim.shutdown" = "3s"
  "io.containerd.timeout.task.state" = "2s"

[ttrpc]
  address = ""
  gid = 0
  uid = 0
mfm@mm74:~$ sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
mfm@mm74:~$ sudo sed -i 's/^disabled_plugins \=/\#disabled_plugins \=/g' /etc/containerd/config.toml
mfm@mm74:~$ sudo systemctl restart containerd
mfm@mm74:~$ sudo ufw allow 6443/tcp
Rules updated
Rules updated (v6)
mfm@mm74:~$ sudo ufw allow 2379/tcp
Rules updated
Rules updated (v6)
mfm@mm74:~$ sudo ufw allow 2380/tcp
Rules updated
Rules updated (v6)
mfm@mm74:~$ sudo ufw allow 10250/tcp
Rules updated
Rules updated (v6)
mfm@mm74:~$ sudo ufw allow 10257/tcp
Rules updated
Rules updated (v6)
mfm@mm74:~$ sudo ufw allow 10259/tcp
Rules updated
Rules updated (v6)
mfm@mm74:~$ sudo ufw reload
Firewall not enabled (skipping reload)
mfm@mm74:~$ sudo ufw allow 10250/tcp
Skipping adding existing rule
Skipping adding existing rule (v6)
mfm@mm74:~$ sudo ufw allow 30000:32767/tcp
Rules updated
Rules updated (v6)
mfm@mm74:~$ sudo ufw reload
Firewall not enabled (skipping reload)
mfm@mm74:~$ cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
> br_netfilter
> EOF
br_netfilter
mfm@mm74:~$ cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
all-ipta> net.bridge.bridge-nf-call-ip6tables = 1
> net.bridge.bridge-nf-call-iptables = 1
> net.ipv4.ip_forward = 1
> EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
mfm@mm74:~$ sudo sysctl --system
* Applying /etc/sysctl.d/10-console-messages.conf ...
kernel.printk = 4 4 1 7
* Applying /etc/sysctl.d/10-ipv6-privacy.conf ...
net.ipv6.conf.all.use_tempaddr = 2
net.ipv6.conf.default.use_tempaddr = 2
* Applying /etc/sysctl.d/10-kernel-hardening.conf ...
kernel.kptr_restrict = 1
* Applying /etc/sysctl.d/10-magic-sysrq.conf ...
kernel.sysrq = 176
* Applying /etc/sysctl.d/10-network-security.conf ...
net.ipv4.conf.default.rp_filter = 2
net.ipv4.conf.all.rp_filter = 2
* Applying /etc/sysctl.d/10-ptrace.conf ...
kernel.yama.ptrace_scope = 1
* Applying /etc/sysctl.d/10-zeropage.conf ...
vm.mmap_min_addr = 65536
* Applying /usr/lib/sysctl.d/50-default.conf ...
kernel.core_uses_pid = 1
net.ipv4.conf.default.rp_filter = 2
net.ipv4.conf.default.accept_source_route = 0
sysctl: setting key "net.ipv4.conf.all.accept_source_route": Invalid argument
net.ipv4.conf.default.promote_secondaries = 1
sysctl: setting key "net.ipv4.conf.all.promote_secondaries": Invalid argument
net.ipv4.ping_group_range = 0 2147483647
net.core.default_qdisc = fq_codel
fs.protected_hardlinks = 1
fs.protected_symlinks = 1
fs.protected_regular = 1
fs.protected_fifos = 1
* Applying /usr/lib/sysctl.d/50-pid-max.conf ...
kernel.pid_max = 4194304
* Applying /etc/sysctl.d/99-cloudimg-ipv6.conf ...
net.ipv6.conf.all.use_tempaddr = 0
net.ipv6.conf.default.use_tempaddr = 0
* Applying /usr/lib/sysctl.d/99-protect-links.conf ...
fs.protected_fifos = 1
fs.protected_hardlinks = 1
fs.protected_regular = 2
fs.protected_symlinks = 1
* Applying /etc/sysctl.d/99-sysctl.conf ...
net.core.rmem_default = 12582912
net.core.wmem_default = 12582912
net.core.rmem_max = 12582912
net.core.wmem_max = 12582912
net.ipv4.tcp_rmem = 10240 87380 12582912
net.ipv4.tcp_wmem = 10240 87380 12582912
net.ipv4.tcp_congestion_control = westwood
* Applying /etc/sysctl.d/k8s.conf ...
net.ipv4.ip_forward = 1
* Applying /etc/sysctl.conf ...
net.core.rmem_default = 12582912
net.core.wmem_default = 12582912
net.core.rmem_max = 12582912
net.core.wmem_max = 12582912
net.ipv4.tcp_rmem = 10240 87380 12582912
net.ipv4.tcp_wmem = 10240 87380 12582912
net.ipv4.tcp_congestion_control = westwood
mfm@mm74:~$ sudo swapoff -a
mfm@mm74:~$ sudo vi /etc/fstab  # comment out swap line
mfm@mm74:~$ mfm@mm74:~$ sudo cat /etc/fstab
UUID=f3d0a9d8-d335-4d42-862a-ea76f43074b5       /       ext4    errors=remount-ro       0       1
#UUID=15f9e25a-9dbf-4053-b54f-42209add753d      none    swap    none    0       0

mfm@mm74:~$ sudo modprobe br_netfilter
mfm@mm74:~$ sudo sysctl net.bridge.bridge-nf-call-iptables=1
net.bridge.bridge-nf-call-iptables = 1
mfm@mm74:~$ sudo apt update
Hit:1 https://download.docker.com/linux/ubuntu jammy InRelease
Hit:2 http://archive.ubuntu.com/ubuntu jammy InRelease
Hit:3 http://security.ubuntu.com/ubuntu jammy-security InRelease
Hit:4 http://archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:5 http://archive.ubuntu.com/ubuntu jammy-backports InRelease
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
71 packages can be upgraded. Run 'apt list --upgradable' to see them.
mfm@mm74:~$ sudo apt install -y apt-transport-https ca-certificates curl
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
ca-certificates is already the newest version (20211016).
curl is already the newest version (7.81.0-1ubuntu1.3).
The following packages will be upgraded:
  apt-transport-https
1 upgraded, 0 newly installed, 0 to remove and 70 not upgraded.
Need to get 1512 B of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 apt-transport-https all 2.4.7 [1512 B]
Fetched 1512 B in 0s (6897 B/s)
(Reading database ... 74946 files and directories currently installed.)
Preparing to unpack .../apt-transport-https_2.4.7_all.deb ...
Unpacking apt-transport-https (2.4.7) over (2.4.5) ...
Setting up apt-transport-https (2.4.7) ...
Scanning processes...
Scanning processor microcode...
Scanning linux images...

Running kernel seems to be up-to-date.

The processor microcode seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
mfm@mm74:~$ sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
mfm@mm74:~$ echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
mfm@mm74:~$ sudo apt update
Hit:1 https://download.docker.com/linux/ubuntu jammy InRelease
Get:2 https://packages.cloud.google.com/apt kubernetes-xenial InRelease [9383 B]
Hit:3 http://security.ubuntu.com/ubuntu jammy-security InRelease
Hit:4 http://archive.ubuntu.com/ubuntu jammy InRelease
Get:5 https://packages.cloud.google.com/apt kubernetes-xenial/main amd64 Packages [57.6 kB]
Hit:6 http://archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:7 http://archive.ubuntu.com/ubuntu jammy-backports InRelease
Fetched 67.0 kB in 1s (110 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
70 packages can be upgraded. Run 'apt list --upgradable' to see them.
mfm@mm74:~$ sudo apt install -y kubelet kubeadm kubectl
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following additional packages will be installed:
  conntrack cri-tools ebtables kubernetes-cni socat
The following NEW packages will be installed:
  conntrack cri-tools ebtables kubeadm kubectl kubelet kubernetes-cni socat
0 upgraded, 8 newly installed, 0 to remove and 70 not upgraded.
Need to get 75.2 MB of archives.
After this operation, 313 MB of additional disk space will be used.
Get:1 https://packages.cloud.google.com/apt kubernetes-xenial/main amd64 cri-tools amd64 1.24.2-00 [12.3 MB]
Get:6 http://archive.ubuntu.com/ubuntu jammy/main amd64 conntrack amd64 1:1.4.6-2build2 [33.5 kB]
Get:7 http://archive.ubuntu.com/ubuntu jammy/main amd64 ebtables amd64 2.0.11-4build2 [84.9 kB]
Get:2 https://packages.cloud.google.com/apt kubernetes-xenial/main amd64 kubernetes-cni amd64 0.8.7-00 [25.0 MB]
Get:8 http://archive.ubuntu.com/ubuntu jammy/main amd64 socat amd64 1.7.4.1-3ubuntu4 [349 kB]
Get:3 https://packages.cloud.google.com/apt kubernetes-xenial/main amd64 kubelet amd64 1.24.3-00 [19.2 MB]
Get:4 https://packages.cloud.google.com/apt kubernetes-xenial/main amd64 kubectl amd64 1.24.3-00 [9316 kB]
Get:5 https://packages.cloud.google.com/apt kubernetes-xenial/main amd64 kubeadm amd64 1.24.3-00 [9002 kB]
Fetched 75.2 MB in 2s (43.8 MB/s)
Selecting previously unselected package conntrack.
(Reading database ... 74946 files and directories currently installed.)
Preparing to unpack .../0-conntrack_1%3a1.4.6-2build2_amd64.deb ...
Unpacking conntrack (1:1.4.6-2build2) ...
Selecting previously unselected package cri-tools.
Preparing to unpack .../1-cri-tools_1.24.2-00_amd64.deb ...
Unpacking cri-tools (1.24.2-00) ...
Selecting previously unselected package ebtables.
Preparing to unpack .../2-ebtables_2.0.11-4build2_amd64.deb ...
Unpacking ebtables (2.0.11-4build2) ...
Selecting previously unselected package kubernetes-cni.
Preparing to unpack .../3-kubernetes-cni_0.8.7-00_amd64.deb ...
Unpacking kubernetes-cni (0.8.7-00) ...
Selecting previously unselected package socat.
Preparing to unpack .../4-socat_1.7.4.1-3ubuntu4_amd64.deb ...
Unpacking socat (1.7.4.1-3ubuntu4) ...
Selecting previously unselected package kubelet.
Preparing to unpack .../5-kubelet_1.24.3-00_amd64.deb ...
Unpacking kubelet (1.24.3-00) ...
Selecting previously unselected package kubectl.
Preparing to unpack .../6-kubectl_1.24.3-00_amd64.deb ...
Unpacking kubectl (1.24.3-00) ...
Selecting previously unselected package kubeadm.
Preparing to unpack .../7-kubeadm_1.24.3-00_amd64.deb ...
Unpacking kubeadm (1.24.3-00) ...
Setting up conntrack (1:1.4.6-2build2) ...
Setting up kubectl (1.24.3-00) ...
Setting up ebtables (2.0.11-4build2) ...
Setting up socat (1.7.4.1-3ubuntu4) ...
Setting up cri-tools (1.24.2-00) ...
Setting up kubernetes-cni (0.8.7-00) ...
Setting up kubelet (1.24.3-00) ...
Created symlink /etc/systemd/system/multi-user.target.wants/kubelet.service → /lib/systemd/system/kubelet.service.
Setting up kubeadm (1.24.3-00) ...
Processing triggers for man-db (2.10.2-1) ...
Scanning processes...
Scanning processor microcode...
Scanning linux images...

Running kernel seems to be up-to-date.

The processor microcode seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
mfm@mm74:~$ sudo kubeadm init --pod-network-cidr=192.168.0.0/16
[init] Using Kubernetes version: v1.24.3
[preflight] Running pre-flight checks
        [WARNING SystemVerification]: missing optional cgroups: blkio
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local mm74] and IPs [10.96.0.1 145.40.99.43]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [localhost mm74] and IPs [145.40.99.43 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [localhost mm74] and IPs [145.40.99.43 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
[apiclient] All control plane components are healthy after 6.001951 seconds
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Skipping phase. Please see --upload-certs
[mark-control-plane] Marking the node mm74 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node mm74 as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: ygvuj2.he7ssistontxqeel
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 145.40.99.43:6443 --token ygvuj2.he7ssistontxqeel \
        --discovery-token-ca-cert-hash sha256:1a519dbf0000655cec9f4acb8d562459d822cd0e288e264ed0ee54e522e24f62
mfm@mm74:~$ mkdir -p $HOME/.kube
mfm@mm74:~$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
mfm@mm74:~$ sudo chown $(id -u):$(id -g) $HOME/.kube/config
mfm@mm74:~$ kubectl taint nodes --all node-role.kubernetes.io/master-
node/mm74 untainted
mfm@mm74:~$ kubectl taint nodes --all node-role.kubernetes.io/control-plane-
node/mm74 untainted
mfm@mm74:~$ kubectl create -f https://projectcalico.docs.tigera.io/manifests/tigera-operator.yaml
namespace/tigera-operator created
customresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/apiservers.operator.tigera.io created
customresourcedefinition.apiextensions.k8s.io/imagesets.operator.tigera.io created
customresourcedefinition.apiextensions.k8s.io/installations.operator.tigera.io created
customresourcedefinition.apiextensions.k8s.io/tigerastatuses.operator.tigera.io created
Warning: policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
podsecuritypolicy.policy/tigera-operator created
serviceaccount/tigera-operator created
clusterrole.rbac.authorization.k8s.io/tigera-operator created
clusterrolebinding.rbac.authorization.k8s.io/tigera-operator created
deployment.apps/tigera-operator created
mfm@mm74:~$ kubectl create -f https://projectcalico.docs.tigera.io/manifests/custom-resources.yaml
installation.operator.tigera.io/default created
apiserver.operator.tigera.io/default created
mfm@mm74:~$ kubectl get nodes --show-labels
NAME   STATUS   ROLES           AGE     VERSION   LABELS
mm74   Ready    control-plane   2m56s   v1.24.3   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=mm74,kubernetes.io/os=linux,node-role.kubernetes.io/control-plane=,node.kubernetes.io/exclude-from-external-load-balancers=
mfm@mm74:~$ sudo mkdir -p /k8s/weathervane/vol
mfm@mm74:~$ sudo chmod -R 777 /k8s
mfm@mm74:~$ git clone http://github.com/vmware/weathervane
Cloning into 'weathervane'...
warning: redirecting to https://github.com/vmware/weathervane/
remote: Enumerating objects: 19144, done.
remote: Counting objects: 100% (1935/1935), done.
remote: Compressing objects: 100% (630/630), done.
remote: Total 19144 (delta 1003), reused 1874 (delta 959), pack-reused 17209
Receiving objects: 100% (19144/19144), 64.62 MiB | 76.94 MiB/s, done.
Resolving deltas: 100% (11699/11699), done.
mfm@mm74:~$ cd weathervane/
mfm@mm74:/home/mfm/weathervane$ cat > create-persistent-vol.yaml << EOF
> apiVersion: v1
> kind: PersistentVolume
> metadata:
>   name: weathervane-pv
> spec:
>   capacity:
>     storage: 400Gi
>   accessModes:
>   - ReadWriteOnce
>   persistentVolumeReclaimPolicy: Retain
>   storageClassName: local-storage
>   local:
>     path: /k8s/weathervane/vol
>   nodeAffinity:
>     required:
>       nodeSelectorTerms:
>       - matchExpressions:
>         - key: kubernetes.io/hostname
>           operator: In
>           values:
>           - mm74
> EOF
mfm@mm74:/home/mfm/weathervane$ kubectl create -f create-persistent-vol.yaml
persistentvolume/weathervane-pv created
mfm@mm74:/home/mfm/weathervane$ kubectl get pv
NAME             CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS    REASON   AGE
weathervane-pv   400Gi      RWO            Retain           Available           local-storage            11s
mfm@mm74:/home/mfm/weathervane$ cat > create-storage-class.yaml << EOF
.k8s.io/v1
metadata:
  name: l> kind: StorageClass
> apiVersion: storage.k8s.io/v1
> metadata:
>   name: local-storage
visioner: kuber> provisioner: kubernetes.io/no-provisioner
> volumeBindingMode: Immediate
> EOF
mfm@mm74:/home/mfm/weathervane$ kubectl create -f create-storage-class.yaml
storageclass.storage.k8s.io/local-storage created
mfm@mm74:/home/mfm/weathervane$ kubectl get sc
NAME            PROVISIONER                    RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE
local-storage   kubernetes.io/no-provisioner   Delete          Immediate           false                  8s
mfm@mm74:/home/mfm/weathervane$ cat > weathervane.config.k8s.quickstart << EOF
> {
>   "description" : "micro",
>   "configurationSize": "micro",
>   "runStrategy" : "fixed",
>   "dockerNamespace" : "mikemoranamd",
>   "kubernetesClusters" : [
>     {
>       "name" : "kubernetes",
>       "kubeconfigFile" : "/home/mfm/.kube/config",
>       "kubeconfigContext" : "",
>     },
>   ],
>   "driverCluster" : "kubernetes",
>   "appInstanceCluster" : "kubernetes",
>   "appIngressMethod" : "clusterip",
>   "cassandraDataStorageClass" : "local-storage",
>   "postgresqlStorageClass" : "local-storage",
>   "nginxCacheStorageClass" : "local-storage",
> }
> EOF
mfm@mm74:/home/mfm/weathervane$ cat create-persistent-vol.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: weathervane-pv
spec:
  capacity:
    storage: 400Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /k8s/weathervane/vol
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - mm74
mfm@mm74:/home/mfm/weathervane$ cat create-storage-class.yaml
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: Immediate
mfm@mm74:/home/mfm/weathervane$ cat weathervane.config.k8s.quickstart
{
  "description" : "micro",
  "configurationSize": "micro",
  "runStrategy" : "fixed",
  "dockerNamespace" : "mikemoranamd",
  "kubernetesClusters" : [
    {
      "name" : "kubernetes",
      "kubeconfigFile" : "/home/mfm/.kube/config",
      "kubeconfigContext" : "",
    },
  ],
  "driverCluster" : "kubernetes",
  "appInstanceCluster" : "kubernetes",
  "appIngressMethod" : "clusterip",
  "cassandraDataStorageClass" : "local-storage",
  "postgresqlStorageClass" : "local-storage",
  "nginxCacheStorageClass" : "local-storage",
}
mfm@mm74:/home/mfm/weathervane$ sudo ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
Weathervane
Copyright (c) 2019 VMware, Inc. All Rights Reserved.

This product is licensed to you under the BSD-2 license (the "License").  You may not use this product except in compliance with the BSD-2 License.

This product may include a number of subcomponents with separate copyright notices and license terms. Your use of these subcomponents is subject to the terms and conditions of the subcomponent's license, as noted in the LICENSE file.

Do you accept these terms and conditions (yes/no)? yes
Starting Weathervane Run-Harness.  Pulling container image may take a few minutes.
Can't open docker logs pipe (docker logs --follow weathervane |) : No such file or directory
mfm@mm74:/home/mfm/weathervane$ ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
Weathervane is unable to create a persistant volume using storage class local-storage in kubernetesCluster kubernetes.
Check the configuration of your cluster to ensure that the storage class exists and can provision persistent volumes.
mfm@mm74:/home/mfm/weathervane$ history
    1  sudo apt update
    2  sudo apt install -y ca-certificates curl gnupg lsb-release
    3  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    4  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list
    5  sudo apt update
    6  sudo apt install -y containerd.io
    7  wget https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64
    8  sudo install -m 755 runc.amd64 /usr/local/sbin/runc
    9  sudo mkdir -p /etc/containerd/
   10  containerd config default | sudo tee /etc/containerd/config.toml
   11  sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
   12  sudo sed -i 's/^disabled_plugins \=/\#disabled_plugins \=/g' /etc/containerd/config.toml
   13  sudo systemctl restart containerd
   14  sudo ufw allow 6443/tcp
   15  sudo ufw allow 2379/tcp
   16  sudo ufw allow 2380/tcp
   17  sudo ufw allow 10250/tcp
   18  sudo ufw allow 10257/tcp
   19  sudo ufw allow 10259/tcp
   20  sudo ufw reload
   21  sudo ufw allow 10250/tcp
   22  sudo ufw allow 30000:32767/tcp
   23  sudo ufw reload
   24  cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

   25  cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

   26  sudo sysctl --system
   27  sudo swapoff -a
   28  sudo vi /etc/fstab  # comment out swap line
   29  sudo cat /etc/fstab
   30  sudo modprobe br_netfilter
   31  sudo sysctl net.bridge.bridge-nf-call-iptables=1
   32  sudo apt update
   33  sudo apt install -y apt-transport-https ca-certificates curl
   34  sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
   35  echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
   36  sudo apt update
   37  sudo apt install -y kubelet kubeadm kubectl
   38  sudo kubeadm init --pod-network-cidr=192.168.0.0/16
   39  mkdir -p $HOME/.kube
   40  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   41  sudo chown $(id -u):$(id -g) $HOME/.kube/config
   42  kubectl taint nodes --all node-role.kubernetes.io/master-
   43  kubectl taint nodes --all node-role.kubernetes.io/control-plane-
   44  kubectl create -f https://projectcalico.docs.tigera.io/manifests/tigera-operator.yaml
   45  kubectl create -f https://projectcalico.docs.tigera.io/manifests/custom-resources.yaml
   46  kubectl get nodes --show-labels
   47  sudo mkdir -p /k8s/weathervane/vol
   48  sudo chmod -R 777 /k8s
   49  git clone http://github.com/vmware/weathervane
   50  cd weathervane/
   51  cat > create-persistent-vol.yaml << EOF
apiVersion: v1
kind: PersistentVolume
metadata:
  name: weathervane-pv
spec:
  capacity:
    storage: 400Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /k8s/weathervane/vol
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - mm74
EOF

   52  kubectl create -f create-persistent-vol.yaml
   53  kubectl get pv
   54  cat > create-storage-class.yaml << EOF
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: Immediate
EOF

   55  kubectl create -f create-storage-class.yaml
   56  kubectl get sc
   57  cat > weathervane.config.k8s.quickstart << EOF
{
  "description" : "micro",
  "configurationSize": "micro",
  "runStrategy" : "fixed",
  "dockerNamespace" : "mikemoranamd",
  "kubernetesClusters" : [
    {
      "name" : "kubernetes",
      "kubeconfigFile" : "/home/mfm/.kube/config",
      "kubeconfigContext" : "",
    },
  ],
  "driverCluster" : "kubernetes",
  "appInstanceCluster" : "kubernetes",
  "appIngressMethod" : "clusterip",
  "cassandraDataStorageClass" : "local-storage",
  "postgresqlStorageClass" : "local-storage",
  "nginxCacheStorageClass" : "local-storage",
}
EOF

   58  cat create-persistent-vol.yaml
   59  cat create-storage-class.yaml
   60  cat weathervane.config.k8s.quickstart
   61  sudo ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
   62  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
   63  history
mfm@mm74:/home/mfm/weathervane$ ll
total 268
drwxrwxr-x 17 mfm  mfm   4096 Aug 17 19:56 ./
drwxr-x---  6 mfm  mfm   4096 Aug 17 19:47 ../
-rw-r--r--  1 root root     0 Aug 17 19:56 .accept-weathervane
drwxrwxr-x  8 mfm  mfm   4096 Aug 17 19:47 .git/
-rw-rw-r--  1 mfm  mfm   2411 Aug 17 19:47 .gitignore
-rw-rw-r--  1 mfm  mfm   2959 Aug 17 19:47 BRANCHING.md
-rw-rw-r--  1 mfm  mfm    200 Aug 17 19:47 Branches.md
-rw-rw-r--  1 mfm  mfm   5247 Aug 17 19:47 CODE-OF-CONDUCT.md
-rw-rw-r--  1 mfm  mfm   9540 Aug 17 19:47 CONTRIBUTING.md
-rw-rw-r--  1 mfm  mfm   4952 Aug 17 19:47 ISSUES.md
-rw-rw-r--  1 mfm  mfm   1485 Aug 17 19:47 LICENSE.txt
-rw-rw-r--  1 mfm  mfm    454 Aug 17 19:47 Notice.txt
-rw-rw-r--  1 mfm  mfm   4585 Aug 17 19:47 README.md
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionApp/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionAppServerWarmer/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionBidService/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionWeb/
-rw-rw-r--  1 mfm  mfm  10152 Aug 17 19:47 build.gradle
-rwxrwxr-x  1 mfm  mfm  13779 Aug 17 19:47 buildDockerImages.pl*
drwxrwxr-x  4 mfm  mfm   4096 Aug 17 19:47 configFiles/
-rw-rw-r--  1 mfm  mfm    432 Aug 17 19:53 create-persistent-vol.yaml
-rw-rw-r--  1 mfm  mfm    152 Aug 17 19:54 create-storage-class.yaml
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 dbLoader/
drwxrwxr-x  8 mfm  mfm   4096 Aug 17 19:47 doc/
drwxrwxr-x 14 mfm  mfm   4096 Aug 17 19:47 dockerImages/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 gradle/
-rw-rw-r--  1 mfm  mfm     20 Aug 17 19:47 gradle.properties
-rwxrwxr-x  1 mfm  mfm   5305 Aug 17 19:47 gradlew*
-rwxrwxr-x  1 mfm  mfm   2185 Aug 17 19:47 gradlew.bat*
drwxr-xr-x  2 root root  4096 Aug 17 19:56 output/
drwxrwxr-x 14 mfm  mfm   4096 Aug 17 19:47 runHarness/
-rwxrwxr-x  1 mfm  mfm  20497 Aug 17 19:47 runWeathervane.pl*
-rwxrwxr-x  1 mfm  mfm   2527 Aug 17 19:47 runmany.sh*
-rw-rw-r--  1 mfm  mfm    145 Aug 17 19:47 settings.gradle
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 testing/
-rw-rw-r--  1 mfm  mfm      6 Aug 17 19:47 version.txt
-rw-rw-r--  1 mfm  mfm    708 Aug 17 19:47 weathervane.config.k8s.micro
-rw-rw-r--  1 mfm  mfm    535 Aug 17 19:55 weathervane.config.k8s.quickstart
-rw-rw-r--  1 mfm  mfm    721 Aug 17 19:47 weathervane.config.k8s.small2
-rwxrwxr-x  1 mfm  mfm  42556 Aug 17 19:47 weathervane.pl*
-rw-r--r--  1 root root     0 Aug 17 19:56 weathervaneResults.csv
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 workloadConfiguration/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 workloadDriver/
mfm@mm74:/home/mfm/weathervane$ history > ~/history_2208151459
mfm@mm74:/home/mfm/weathervane$ ll ~
total 9244
drwxr-x---  6 mfm  mfm     4096 Aug 17 19:59 ./
drwxr-xr-x  3 root root    4096 Aug 17 19:23 ../
-rw-r--r--  1 mfm  mfm      220 Jan  6  2022 .bash_logout
-rw-r--r--  1 mfm  mfm     3771 Jan  6  2022 .bashrc
drwx------  2 mfm  mfm     4096 Aug 17 19:24 .cache/
drwxrwxr-x  3 mfm  mfm     4096 Aug 17 19:44 .kube/
-rw-r--r--  1 mfm  mfm      807 Jan  6  2022 .profile
drwx------  2 mfm  mfm     4096 Aug 17 19:24 .ssh/
-rw-r--r--  1 mfm  mfm        0 Aug 17 19:25 .sudo_as_admin_successful
-rw-rw-r--  1 mfm  mfm      165 Aug 17 19:28 .wget-hsts
-rw-rw-r--  1 mfm  mfm     4719 Aug 17 19:59 history_2208151459
-rw-rw-r--  1 mfm  mfm  9415040 Mar 29 03:22 runc.amd64
drwxrwxr-x 17 mfm  mfm     4096 Aug 17 19:56 weathervane/
mfm@mm74:/home/mfm/weathervane$
mfm@mm74:/home/mfm/weathervane$ uptime
 20:17:58 up  1:03,  1 user,  load average: 0.20, 0.17, 0.11
mfm@mm74:/home/mfm/weathervane$ who
mfm      pts/0        2022-08-17 19:24 (70.112.73.191)
mfm@mm74:/home/mfm/weathervane$
mfm@mm74:/home/mfm/weathervane$ cd ..
mfm@mm74:/home/mfm$ cd .ssh
mfm@mm74:/home/mfm/.ssh$ ll
total 20
drwx------ 2 mfm mfm  4096 Aug 17 19:24 ./
drwxr-x--- 6 mfm mfm  4096 Aug 17 19:59 ../
-rw------- 1 mfm mfm 11716 Aug 17 19:24 authorized_keys
mfm@mm74:/home/mfm/.ssh$ vi authorized_keys
mfm@mm74:/home/mfm/.ssh$ ll
total 24
drwx------ 2 mfm mfm  4096 Aug 17 20:46 ./
drwxr-x--- 6 mfm mfm  4096 Aug 17 20:46 ../
-rw------- 1 mfm mfm 12330 Aug 17 20:46 authorized_keys
mfm@mm74:/home/mfm/.ssh$ who
mfm      pts/0        2022-08-17 19:24 (70.112.73.191)
mfm      pts/1        2022-08-17 20:47 (165.204.77.11)
mfm@mm74:/home/mfm/.ssh$ cd
mfm@mm74:/home/mfm$ ll
total 9248
drwxr-x---  6 mfm  mfm     4096 Aug 17 20:46 ./
drwxr-xr-x  3 root root    4096 Aug 17 19:23 ../
-rw-r--r--  1 mfm  mfm      220 Jan  6  2022 .bash_logout
-rw-r--r--  1 mfm  mfm     3771 Jan  6  2022 .bashrc
drwx------  2 mfm  mfm     4096 Aug 17 19:24 .cache/
drwxrwxr-x  3 mfm  mfm     4096 Aug 17 19:44 .kube/
-rw-r--r--  1 mfm  mfm      807 Jan  6  2022 .profile
drwx------  2 mfm  mfm     4096 Aug 17 20:46 .ssh/
-rw-r--r--  1 mfm  mfm        0 Aug 17 19:25 .sudo_as_admin_successful
-rw-------  1 mfm  mfm     1203 Aug 17 20:46 .viminfo
-rw-rw-r--  1 mfm  mfm      165 Aug 17 19:28 .wget-hsts
-rw-rw-r--  1 mfm  mfm     4719 Aug 17 19:59 history_2208151459
-rw-rw-r--  1 mfm  mfm  9415040 Mar 29 03:22 runc.amd64
drwxrwxr-x 17 mfm  mfm     4096 Aug 17 19:56 weathervane/
mfm@mm74:/home/mfm$
mfm@mm74:/home/mfm$ cd weathervane/
mfm@mm74:/home/mfm/weathervane$ ll
total 268
drwxrwxr-x 17 mfm  mfm   4096 Aug 17 21:07 ./
drwxr-x---  6 mfm  mfm   4096 Aug 17 21:07 ../
-rw-r--r--  1 root root     0 Aug 17 19:56 .accept-weathervane
drwxrwxr-x  8 mfm  mfm   4096 Aug 17 19:47 .git/
-rw-rw-r--  1 mfm  mfm   2411 Aug 17 19:47 .gitignore
-rw-rw-r--  1 mfm  mfm   2959 Aug 17 19:47 BRANCHING.md
-rw-rw-r--  1 mfm  mfm    200 Aug 17 19:47 Branches.md
-rw-rw-r--  1 mfm  mfm   5247 Aug 17 19:47 CODE-OF-CONDUCT.md
-rw-rw-r--  1 mfm  mfm   9540 Aug 17 19:47 CONTRIBUTING.md
-rw-rw-r--  1 mfm  mfm   4952 Aug 17 19:47 ISSUES.md
-rw-rw-r--  1 mfm  mfm   1485 Aug 17 19:47 LICENSE.txt
-rw-rw-r--  1 mfm  mfm    454 Aug 17 19:47 Notice.txt
-rw-rw-r--  1 mfm  mfm   4585 Aug 17 19:47 README.md
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionApp/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionAppServerWarmer/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionBidService/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionWeb/
-rw-rw-r--  1 mfm  mfm  10152 Aug 17 19:47 build.gradle
-rwxrwxr-x  1 mfm  mfm  13779 Aug 17 19:47 buildDockerImages.pl*
drwxrwxr-x  4 mfm  mfm   4096 Aug 17 19:47 configFiles/
-rw-rw-r--  1 mfm  mfm    432 Aug 17 19:53 create-persistent-vol.yaml
-rw-rw-r--  1 mfm  mfm    152 Aug 17 19:54 create-storage-class.yaml
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 dbLoader/
drwxrwxr-x  8 mfm  mfm   4096 Aug 17 19:47 doc/
drwxrwxr-x 14 mfm  mfm   4096 Aug 17 19:47 dockerImages/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 gradle/
-rw-rw-r--  1 mfm  mfm     20 Aug 17 19:47 gradle.properties
-rwxrwxr-x  1 mfm  mfm   5305 Aug 17 19:47 gradlew*
-rwxrwxr-x  1 mfm  mfm   2185 Aug 17 19:47 gradlew.bat*
drwxr-xr-x  2 root root  4096 Aug 17 19:56 output/
drwxrwxr-x 14 mfm  mfm   4096 Aug 17 19:47 runHarness/
-rwxrwxr-x  1 mfm  mfm  20497 Aug 17 19:47 runWeathervane.pl*
-rwxrwxr-x  1 mfm  mfm   2527 Aug 17 19:47 runmany.sh*
-rw-rw-r--  1 mfm  mfm    145 Aug 17 19:47 settings.gradle
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 testing/
-rw-rw-r--  1 mfm  mfm      6 Aug 17 19:47 version.txt
-rw-rw-r--  1 mfm  mfm    708 Aug 17 19:47 weathervane.config.k8s.micro
-rw-rw-r--  1 mfm  mfm    535 Aug 17 19:55 weathervane.config.k8s.quickstart
-rw-rw-r--  1 mfm  mfm    721 Aug 17 19:47 weathervane.config.k8s.small2
-rwxrwxr-x  1 mfm  mfm  42556 Aug 17 19:47 weathervane.pl*
-rw-r--r--  1 root root     0 Aug 17 19:56 weathervaneResults.csv
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 workloadConfiguration/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 workloadDriver/
mfm@mm74:/home/mfm/weathervane$ kubectl get pods
No resources found in default namespace.
mfm@mm74:/home/mfm/weathervane$ kubectl get ns
NAME               STATUS   AGE
calico-apiserver   Active   82m
calico-system      Active   83m
default            Active   85m
kube-node-lease    Active   85m
kube-public        Active   85m
kube-system        Active   85m
tigera-operator    Active   83m
mfm@mm74:/home/mfm/weathervane$ cat ~/.kube/config
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EZ3hOekU1TkRJMU9Gb1hEVE15TURneE5ERTVOREkxT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUxBCml2Vm16Q0t0S2ErSzFJMFNoT0ZkVHpTVEd4dno1bnVkbmhaeE82Z3ltRkt0a0tsYTk2Sm5oTDlEV2pmeFIveloKTTFNWnlwcUlRUmJSWmp6TTdCUG52NER6eTdlWEplMDNNdXRtSmM1R2doNG9VYTkzMG4zc00zWWhLODBRdUFMcwo1ZXNHcFRGZXovazl5TXdJY21YK3VYbDNMRmM0Z0szekdQdEtUNW8rU3M3U3pSdkVqQ3VJRWlLY2Nvdjd0aFVvCmNvK0tBL2xaYmc0TlBIdzc1clZ3TXk5UzQvK3h1NFNGckhLTzVGazdWcnF3ZTBKUCtCS3ZYazNFeUVNUGVYTTUKMFU3dkRSVHNnNkNGYlVvYjE1Y1dmL0psSTNjNnpxTUxDdXEzQzJSa2c1SXByTjhwOHVmS0lyZTlUTFROcTVBUgpYR2xpalhwV090UHFqbVZPcHBNQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZGVTFLOWZscGpXOWhMejRkcjZoOVBKMm5OZXFNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRnpKdkkzOUpJbFl2R0J3TE1SeAp0ZGVHOXpSMW1UN3NobUdOMEQxYWgwWXQzclBvWXhudDd3cm1kTFd5T1dodUhMNWp5YzQ1Q3Y4d3l4TlFZT0FXCnlUY1pmekJyRHJBdmhjUm43c2o4djMvU0lmOWNReU1QWlhWWEMvYVN1b0R6cGxkM2tRL1UrMkt4WXVYeCtmUFEKVnRRa2Y0SVBjaEdJRXZFRHI3U0g0am90dDlxOW43MWk5bkRYK2lHeFhpb3djeGNteElWeENFSWx2aUJFTGd3eApuU0Z3ZEVZK0tsTldyT2o5Mk9jbGdHd3R3UnBWZTVHcTNzcHMzL3NIWThXZk9uVy96bmZLdkRZRFVXcDNlL3NCClVlN1Rub012REw0cFJmTC9jWnFaNml0dm5FaVF0QkRXWjh5bVIyWkdHSHpMQzRHQmRUdGZGWlVkSFdGRWgvNWkKRjlZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://145.40.99.43:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: kubernetes-admin
  name: kubernetes-admin@kubernetes
current-context: kubernetes-admin@kubernetes
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lJUWRTeTA1bEdJL2N3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TWpBNE1UY3hPVFF5TlRoYUZ3MHlNekE0TVRjeE9UUXpNREJhTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhEeFoySVNYYk8yV3p0Tk8KTVNlNStzMUZBMVJUSHRIKzlsdGhHNHk2UTVTTy8zOHA1cWhhOU9TS2hQT3ZWalQ4aGdieC9nYndNbGxSS1ZZawp2VDIwUDFiWjFZS3NvWGVGTVRYbnlpWTM0Zk41TkQzRGhuTGVreXE3ZjJ1SEtzVVh0Vngxd1d1TWdzZXZjbzVLCi9uM2tQR09Sc053WWZwOG9vbE1ONlVhREFhVVpqaktLV0g2cGdlWGUyOUJXSFdZdTZiK0VUbDJrUGJtL2M1bGgKTVZmeDdxb3dIandGK2QwelBmRTAvSTRWSURhRFdaRWVJa2NzVkhPYlF2Wll2cDFwdWMrakU4Z2dzTWI1SFk1TQpZTitoTnpLZW9QbUs3c1ZTb2lQVk9icGVDeGJPV3VCbGozanF2QS9aVTFNWTBRVEtzSnRMN25XNDVhRE5USlFWClMvazJBUUlEQVFBQm8xWXdWREFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSVk5Tdlg1YVkxdllTOCtIYStvZlR5ZHB6WApxakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBWmkrMHdOamg1T2RMaTE2RzRKM01CdjhQdldEWjF4eXNJNW5PCk9raW5zZFE3ajZOeWFjaU9EMFdQMW02SWMzUVFNZHVra2lsUUpUWlV3NE5jS3NnZVJLUEl5Q1NPRXZRRmJiYTcKZXBKdFl1MDcwRllpeUFSVjI1RXE3RUVVYS9FMm90Mys1a2FrbmhLb2EvUUxVOUdhbUoyQU5xTWF6OXR0VkZRUQpsd2VEVjMxZStIbEhlMVRURjJZbk53NFV2MXZBRzB5NmdpTFFCbGpzbTE4R1pZVUdoUytob3NsL3QxZlpXenBsCnF0QmxtcGhJWU93bThuc1pybmpSb1VyQzVWK29NaXkxeG5HQll4akhtd1FqUG11SDVIKytxQW5ZRFJWdEV1Rm4KZlNhdW9BcHBWUXN0c3JHbVV0NVRhL3hrTnJtRHFXL0kwTG5DQnlkd2VUVFQ0U2hRV0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeER4WjJJU1hiTzJXenROT01TZTUrczFGQTFSVEh0SCs5bHRoRzR5NlE1U08vMzhwCjVxaGE5T1NLaFBPdlZqVDhoZ2J4L2did01sbFJLVllrdlQyMFAxYloxWUtzb1hlRk1UWG55aVkzNGZONU5EM0QKaG5MZWt5cTdmMnVIS3NVWHRWeDF3V3VNZ3NldmNvNUsvbjNrUEdPUnNOd1lmcDhvb2xNTjZVYURBYVVaampLSwpXSDZwZ2VYZTI5QldIV1l1NmIrRVRsMmtQYm0vYzVsaE1WZng3cW93SGp3RitkMHpQZkUwL0k0VklEYURXWkVlCklrY3NWSE9iUXZaWXZwMXB1YytqRThnZ3NNYjVIWTVNWU4raE56S2VvUG1LN3NWU29pUFZPYnBlQ3hiT1d1QmwKajNqcXZBL1pVMU1ZMFFUS3NKdEw3blc0NWFETlRKUVZTL2syQVFJREFRQUJBb0lCQUQrSkZzSHV0Q1IxaklWcwpqdjJGVWticzNUSmx3Ly9QbUJCbHA3eEd4U3dLVm41TXl1RStreXlGTG9BN2NnS2taenB4MXpvYlB2dmVSVlB2CjZ6ZEdXaXpEendXOUtHMmpDQUhWNVRWalNHYWs4UkpFQ1NGbjRiNmVjRlNpR1FKMUMrY1JoNkxYVW9ncFpSbmYKRGxMMXFjY1BxZVVzYmRYWmJFdWFQbi9QNzZ6QkdOTDA1WmRMRHk2Z25YZUVnZ3BWSWdyZWhKRU9OdWpsK1M4dApqSEpzUHlkbmV6NEZiNzhTdnQrOXpuNnc1WENkUXpPdDdzcGI3S1RmN1U4MmVIcWprbmQ3a1MrN0p2UmhYYlYrCjNTOVJZSFkyQXB5YjV3dVpMOXNGWEZXS0RraWFUTzFsL0grcXNyVndxZTNON3dPWDNGV0FOMnFWT3hYTE54eW8KTjQraDcwRUNnWUVBeVBUd1BtUUJEczNyTGVHbjAwMmRTSHZNWFpRVWtmYitobzBFcDRsT0hwOWNMWWt2VUprOQo1VDQrZFVOenovckxlZDhsYUxFMWRrWWtKQnEyWVhaZVo0VnBPVDFGUDBKWklRTDgySFU0QWNYbjJ2SVVORUpwCm8remxGcUNzelEzWjlralQ4WXliMkxCUTMzby9pL3VycWZjODZDUmdqWGV2Wm1kRXBGd0RWMWtDZ1lFQStmeGYKbm9rTUNMQXhneEhPSnVyRmRRaWkxL21IOE5UcUxVcnRDd1ZUZGczZTA1Sis3V3gydm5LWUJkbFNsaHNlVlFjZAovcDlVR2xvUjBCV0tUTTZvYXBBMk1lb2wvNktGT1hGd1dldEREZktlbDM2MEVoZDZPWVY5bGNXekdIcTlRUDBJCmRnU2lldC9BOWxIRjJ4MVc2S2UvWnhqM041UUtINkdmcFBaRHB1a0NnWUFYbnFxS09zamhDNVVEN0kwRVNoQWQKaitlQ2JFQktzOFJRM2t4WXdNdTh6N0JPN2R2dzFrSXZLclMrcGJIOEZSZExlTTMxMHpaY2Mzd1Yva25IaE5rdAp3OEdOWjhVMjNUNktvY1pFVHVySlVwQ2c3R2t4aDBqUmFxdTJrQ1lmWit4aGhVZmNFVkhVRTAwK0p5bEc4OHJHCmpIZk5OVkZmNzF4ZlplM3NmNkFvNlFLQmdRRFVaUXJRNWR2bG5kM1RZTk5vMlZ1L0hnRk53dU12U1pkVnVDMUMKaWRucG1jdFNzMHRJYWpsUmdvZUxvS084aVhueUFFUUp6RkZtdWxRY0dkRVJoUnd1dml4dHFHVjBseDdlT1hXZAowSGQrYUQ4NnRCcEdyTS9hQTRNNk4yajlTWHQydGdYMFQrZkV3a3R1ZlBmQVBXTlQ5UUo0bEF1bm13NG01ZWwvCi9RUnAwUUtCZ0RiTHkrNThMbVZrWnJXQUVNQ0x1ZXdUdkVDVDJtOFZLY3BHT1dsSGpRdy9lV0VyNk9iRktYQlkKbXdWRktaU3ZHZXRBRTliZm5LeGxLSStuVzk1N1N3Sm5Vbi94NmphNVRQUHU4Sjk5OFY1SW8vQzQ2bkVQbU5BVQpNUGdyYXJIalRzdi9YMENnVDBuYjhEZ0VoYXdXNnlZOGx3Slo1WktKaG1GZng1ay81bGduCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
mfm@mm74:/home/mfm/weathervane$
mfm@mm74:/home/mfm/weathervane$ ls
BRANCHING.md            auctionBidService           gradle             version.txt
Branches.md             auctionWeb                  gradle.properties  weathervane.config.k8s.micro
CODE-OF-CONDUCT.md      build.gradle                gradlew            weathervane.config.k8s.quickstart
CONTRIBUTING.md         buildDockerImages.pl        gradlew.bat        weathervane.config.k8s.small2
ISSUES.md               configFiles                 output             weathervane.pl
LICENSE.txt             create-persistent-vol.yaml  runHarness         weathervaneResults.csv
Notice.txt              create-storage-class.yaml   runWeathervane.pl  workloadConfiguration
README.md               dbLoader                    runmany.sh         workloadDriver
auctionApp              doc                         settings.gradle
auctionAppServerWarmer  dockerImages                testing
mfm@mm74:/home/mfm/weathervane$
mfm@mm74:/home/mfm/weathervane$
mfm@mm74:/home/mfm/weathervane$ ./runWeathervane.pl --configFile weathervane.config.k8s.quickstart
Weathervane is unable to create a persistant volume using storage class local-storage in kubernetesCluster kubernetes.
Check the configuration of your cluster to ensure that the storage class exists and can provision persistent volumes.
mfm@mm74:/home/mfm/weathervane$ ll
total 284
drwxrwxr-x 17 mfm  mfm   4096 Aug 17 21:30 ./
drwxr-x---  6 mfm  mfm   4096 Aug 17 21:29 ../
-rw-r--r--  1 root root     0 Aug 17 19:56 .accept-weathervane
drwxrwxr-x  8 mfm  mfm   4096 Aug 17 19:47 .git/
-rw-rw-r--  1 mfm  mfm   2411 Aug 17 19:47 .gitignore
-rw-r--r--  1 mfm  mfm  16384 Aug 17 21:30 .runWeathervane.pl.swp
-rw-rw-r--  1 mfm  mfm   2959 Aug 17 19:47 BRANCHING.md
-rw-rw-r--  1 mfm  mfm    200 Aug 17 19:47 Branches.md
-rw-rw-r--  1 mfm  mfm   5247 Aug 17 19:47 CODE-OF-CONDUCT.md
-rw-rw-r--  1 mfm  mfm   9540 Aug 17 19:47 CONTRIBUTING.md
-rw-rw-r--  1 mfm  mfm   4952 Aug 17 19:47 ISSUES.md
-rw-rw-r--  1 mfm  mfm   1485 Aug 17 19:47 LICENSE.txt
-rw-rw-r--  1 mfm  mfm    454 Aug 17 19:47 Notice.txt
-rw-rw-r--  1 mfm  mfm   4585 Aug 17 19:47 README.md
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionApp/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionAppServerWarmer/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionBidService/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionWeb/
-rw-rw-r--  1 mfm  mfm  10152 Aug 17 19:47 build.gradle
-rwxrwxr-x  1 mfm  mfm  13779 Aug 17 19:47 buildDockerImages.pl*
drwxrwxr-x  4 mfm  mfm   4096 Aug 17 19:47 configFiles/
-rw-rw-r--  1 mfm  mfm    432 Aug 17 19:53 create-persistent-vol.yaml
-rw-rw-r--  1 mfm  mfm    164 Aug 17 21:16 create-storage-class.yaml
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 dbLoader/
drwxrwxr-x  8 mfm  mfm   4096 Aug 17 19:47 doc/
drwxrwxr-x 14 mfm  mfm   4096 Aug 17 19:47 dockerImages/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 gradle/
-rw-rw-r--  1 mfm  mfm     20 Aug 17 19:47 gradle.properties
-rwxrwxr-x  1 mfm  mfm   5305 Aug 17 19:47 gradlew*
-rwxrwxr-x  1 mfm  mfm   2185 Aug 17 19:47 gradlew.bat*
drwxr-xr-x  2 root root  4096 Aug 17 19:56 output/
drwxrwxr-x 14 mfm  mfm   4096 Aug 17 19:47 runHarness/
-rwxrwxr-x  1 mfm  mfm  20497 Aug 17 19:47 runWeathervane.pl*
-rwxrwxr-x  1 mfm  mfm   2527 Aug 17 19:47 runmany.sh*
-rw-rw-r--  1 mfm  mfm    145 Aug 17 19:47 settings.gradle
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 testing/
-rw-rw-r--  1 mfm  mfm      6 Aug 17 19:47 version.txt
-rw-rw-r--  1 mfm  mfm    708 Aug 17 19:47 weathervane.config.k8s.micro
-rw-rw-r--  1 mfm  mfm    562 Aug 17 21:29 weathervane.config.k8s.quickstart
-rw-rw-r--  1 mfm  mfm    721 Aug 17 19:47 weathervane.config.k8s.small2
-rwxrwxr-x  1 mfm  mfm  42556 Aug 17 19:47 weathervane.pl*
-rw-r--r--  1 root root     0 Aug 17 19:56 weathervaneResults.csv
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 workloadConfiguration/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 workloadDriver/
mfm@mm74:/home/mfm/weathervane$ cp test-pvc.yaml my.yaml
mfm@mm74:/home/mfm/weathervane$ vi my.yaml
mfm@mm74:/home/mfm/weathervane$ vi my.yaml
mfm@mm74:/home/mfm/weathervane$ python3
Python 3.10.4 (main, Apr  2 2022, 09:04:19) [GCC 11.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> with open("my.yaml", "r") as fp:
...     x = read(fp)
...
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
NameError: name 'read' is not defined
>>> with open("my.yaml", "r") as fp:
...     x = fp.read()
...
>>> x
'{\n  "kind": "PersistentVolumeClaim",\n  "apiVersion": "v1",\n  "metadata": {\n    "name": "weathervane-test-claim",\n    "annotations": {\n        "volume.beta.kubernetes.io/storage-class": "local-storage"\n    }\n  },\n  "spec": {\n    "accessModes": [\n      "ReadWriteOnce"\n    ],\n    "resources": {\n      "requests": {\n        storage: 1Mi\n      }\n    }\n  }\n}\n'
>>> x[320:325]
' stor'
>>>
mfm@mm74:/home/mfm/weathervane$ fg
-bash: fg: current: no such job
mfm@mm74:/home/mfm/weathervane$ ls
BRANCHING.md            auctionBidService           gradle             test-pvc.yaml
Branches.md             auctionWeb                  gradle.properties  testing
CODE-OF-CONDUCT.md      build.gradle                gradlew            version.txt
CONTRIBUTING.md         buildDockerImages.pl        gradlew.bat        weathervane.config.k8s.micro
ISSUES.md               configFiles                 my.yaml            weathervane.config.k8s.quickstart
LICENSE.txt             create-persistent-vol.yaml  output             weathervane.config.k8s.small2
Notice.txt              create-storage-class.yaml   runHarness         weathervane.pl
README.md               dbLoader                    runWeathervane.pl  weathervaneResults.csv
auctionApp              doc                         runmany.sh         workloadConfiguration
auctionAppServerWarmer  dockerImages                settings.gradle    workloadDriver
mfm@mm74:/home/mfm/weathervane$ cat my.yaml
{
  "kind": "PersistentVolumeClaim",
  "apiVersion": "v1",
  "metadata": {
    "name": "weathervane-test-claim",
    "annotations": {
        "volume.beta.kubernetes.io/storage-class": "local-storage"
    }
  },
  "spec": {
    "accessModes": [
      "ReadWriteOnce"
    ],
    "resources": {
      "requests": {
        storage: 1Mi
      }
    }
  }
}
mfm@mm74:/home/mfm/weathervane$ ks
ks: command not found
mfm@mm74:/home/mfm/weathervane$ ls
BRANCHING.md            auctionBidService           gradle             test-pvc.yaml
Branches.md             auctionWeb                  gradle.properties  testing
CODE-OF-CONDUCT.md      build.gradle                gradlew            version.txt
CONTRIBUTING.md         buildDockerImages.pl        gradlew.bat        weathervane.config.k8s.micro
ISSUES.md               configFiles                 my.yaml            weathervane.config.k8s.quickstart
LICENSE.txt             create-persistent-vol.yaml  output             weathervane.config.k8s.small2
Notice.txt              create-storage-class.yaml   runHarness         weathervane.pl
README.md               dbLoader                    runWeathervane.pl  weathervaneResults.csv
auctionApp              doc                         runmany.sh         workloadConfiguration
auctionAppServerWarmer  dockerImages                settings.gradle    workloadDriver
mfm@mm74:/home/mfm/weathervane$
mfm@mm74:/home/mfm/weathervane$ ll
total 276
drwxrwxr-x 17 mfm  mfm   4096 Aug 17 21:50 ./
drwxr-x---  6 mfm  mfm   4096 Aug 17 21:50 ../
-rw-r--r--  1 root root     0 Aug 17 19:56 .accept-weathervane
drwxrwxr-x  8 mfm  mfm   4096 Aug 17 19:47 .git/
-rw-rw-r--  1 mfm  mfm   2411 Aug 17 19:47 .gitignore
-rw-rw-r--  1 mfm  mfm   2959 Aug 17 19:47 BRANCHING.md
-rw-rw-r--  1 mfm  mfm    200 Aug 17 19:47 Branches.md
-rw-rw-r--  1 mfm  mfm   5247 Aug 17 19:47 CODE-OF-CONDUCT.md
-rw-rw-r--  1 mfm  mfm   9540 Aug 17 19:47 CONTRIBUTING.md
-rw-rw-r--  1 mfm  mfm   4952 Aug 17 19:47 ISSUES.md
-rw-rw-r--  1 mfm  mfm   1485 Aug 17 19:47 LICENSE.txt
-rw-rw-r--  1 mfm  mfm    454 Aug 17 19:47 Notice.txt
-rw-rw-r--  1 mfm  mfm   4585 Aug 17 19:47 README.md
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionApp/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionAppServerWarmer/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionBidService/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionWeb/
-rw-rw-r--  1 mfm  mfm  10152 Aug 17 19:47 build.gradle
-rwxrwxr-x  1 mfm  mfm  13779 Aug 17 19:47 buildDockerImages.pl*
drwxrwxr-x  4 mfm  mfm   4096 Aug 17 19:47 configFiles/
-rw-rw-r--  1 mfm  mfm    432 Aug 17 19:53 create-persistent-vol.yaml
-rw-rw-r--  1 mfm  mfm    164 Aug 17 21:16 create-storage-class.yaml
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 dbLoader/
drwxrwxr-x  8 mfm  mfm   4096 Aug 17 19:47 doc/
drwxrwxr-x 14 mfm  mfm   4096 Aug 17 19:47 dockerImages/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 gradle/
-rw-rw-r--  1 mfm  mfm     20 Aug 17 19:47 gradle.properties
-rwxrwxr-x  1 mfm  mfm   5305 Aug 17 19:47 gradlew*
-rwxrwxr-x  1 mfm  mfm   2185 Aug 17 19:47 gradlew.bat*
-rw-rw-r--  1 mfm  mfm    354 Aug 17 21:42 my.yaml
drwxr-xr-x  2 root root  4096 Aug 17 19:56 output/
drwxrwxr-x 14 mfm  mfm   4096 Aug 17 19:47 runHarness/
-rwxrwxr-x  1 mfm  mfm  20538 Aug 17 21:35 runWeathervane.pl*
-rwxrwxr-x  1 mfm  mfm   2527 Aug 17 19:47 runmany.sh*
-rw-rw-r--  1 mfm  mfm    145 Aug 17 19:47 settings.gradle
-rw-rw-r--  1 mfm  mfm    279 Aug 17 21:50 test-pvc.yaml
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 testing/
-rw-rw-r--  1 mfm  mfm      6 Aug 17 19:47 version.txt
-rw-rw-r--  1 mfm  mfm    708 Aug 17 19:47 weathervane.config.k8s.micro
-rw-rw-r--  1 mfm  mfm    562 Aug 17 21:29 weathervane.config.k8s.quickstart
-rw-rw-r--  1 mfm  mfm    721 Aug 17 19:47 weathervane.config.k8s.small2
-rwxrwxr-x  1 mfm  mfm  42556 Aug 17 19:47 weathervane.pl*
-rw-r--r--  1 root root     0 Aug 17 19:56 weathervaneResults.csv
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 workloadConfiguration/
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 workloadDriver/
mfm@mm74:/home/mfm/weathervane$ cp runWeathervane.pl debugWeathervane.pl
mfm@mm74:/home/mfm/weathervane$ vi debugWeathervane.pl
mfm@mm74:/home/mfm/weathervane$ mfm@mm74:/home/mfm/weathervane$ ./debugWeathervane.pl --configFile=weathervane.config.k8s.quickstart
clusterName: kuberneteskubeconfigFileName /home/mfm/.kube/configkubeconfigContext kubernetes-admin@kubernetescmd kubectl --kubeconfig=/home/mfm/.kube/config --context=kubernetes-admin@kubernetes delete pvc weathervane-test-claim 2>&1out: Error from server (NotFound): persistentvolumeclaims "weathervane-test-claim" not found
cmd `echo "$pvcYamlStringCopy" | kubectl --kubeconfig=$kubeconfigFileName --context=$kubeconfigContext apply -f -`out: persistentvolumeclaim/weathervane-test-claim created
kubectl --kubeconfig=/home/mfm/.kube/config --context=kubernetes-admin@kubernetes get pvc weathervane-test-claim -o=jsonpath='{.status.phase}'kubectl --kubeconfig=/home/mfm/.kube/config --context=kubernetes-admin@kubernetes get pvc weathervane-test-claim -o=jsonpath='{.status.phase}'kubectl --kubeconfig=/home/mfm/.kube/config --context=kubernetes-admin@kubernetes get pvc weathervane-test-claim -o=jsonpath='{.status.phase}'kubectl --kubeconfig=/home/mfm/.kube/config --context=kubernetes-admin@kubernetes get pvc weathervane-test-claim -o=jsonpath='{.status.phase}'kubectl --kubeconfig=/home/mfm/.kube/config --context=kubernetes-admin@kubernetes get pvc weathervane-test-claim -o=jsonpath='{.status.phase}'Weathervane is unable to create a persistant volume using storage class local-storage in kubernetesCluster kubernetes.
Check the configuration of your cluster to ensure that the storage class exists and can provision persistent volumes.
mfm@mm74:/home/mfm/weathervane$ jobs
mfm@mm74:/home/mfm/weathervane$ vi debugWeathervane.pl
mfm@mm74:/home/mfm/weathervane$ ./debugWeathervane.pl --configFile=weathervane.config.k8s.quickstart
clusterName: kubernetes
kubeconfigFileName /home/mfm/.kube/config
kubeconfigContext kubernetes-admin@kubernetes
cmd kubectl --kubeconfig=/home/mfm/.kube/config --context=kubernetes-admin@kubernetes delete pvc weathervane-test-claim 2>&1
out: Error from server (NotFound): persistentvolumeclaims "weathervane-test-claim" not found

cmd `echo "$pvcYamlStringCopy" | kubectl --kubeconfig=$kubeconfigFileName --context=$kubeconfigContext apply -f -`\nout: persistentvolumeclaim/weathervane-test-claim created

kubectl --kubeconfig=/home/mfm/.kube/config --context=kubernetes-admin@kubernetes get pvc weathervane-test-claim -o=jsonpath='{.status.phase}'
kubectl --kubeconfig=/home/mfm/.kube/config --context=kubernetes-admin@kubernetes get pvc weathervane-test-claim -o=jsonpath='{.status.phase}'
kubectl --kubeconfig=/home/mfm/.kube/config --context=kubernetes-admin@kubernetes get pvc weathervane-test-claim -o=jsonpath='{.status.phase}'
kubectl --kubeconfig=/home/mfm/.kube/config --context=kubernetes-admin@kubernetes get pvc weathervane-test-claim -o=jsonpath='{.status.phase}'
kubectl --kubeconfig=/home/mfm/.kube/config --context=kubernetes-admin@kubernetes get pvc weathervane-test-claim -o=jsonpath='{.status.phase}'
Weathervane is unable to create a persistant volume using storage class local-storage in kubernetesCluster kubernetes.
Check the configuration of your cluster to ensure that the storage class exists and can provision persistent volumes.
mfm@mm74:/home/mfm/weathervane$
mfm@mm74:/home/mfm/weathervane$
mfm@mm74:/home/mfm/weathervane$


Microsoft Windows [Version 10.0.19044.1826]
(c) Microsoft Corporation. All rights reserved.

C:\Users\mikmoran>ssh mfm@145.40.99.43
Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-33-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Fri Aug 19 16:35:57 UTC 2022

  System load:            0.466796875
  Usage of /:             3.4% of 218.06GB
  Memory usage:           3%
  Swap usage:             0%
  Processes:              639
  Users logged in:        1
  IPv4 address for bond0: 145.40.99.43
  IPv6 address for bond0: 2604:1380:4641:3b00::d

 * Super-optimized for small spaces - read how we shrank the memory
   footprint of MicroK8s to make it the smallest full K8s around.

   https://ubuntu.com/blog/microk8s-memory-optimisation

43 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable


1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

*** System restart required ***
Last login: Fri Aug 19 15:22:23 2022 from 165.204.154.57
Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-33-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Fri Aug 19 16:35:57 UTC 2022

  System load:            0.466796875
  Usage of /:             3.4% of 218.06GB
  Memory usage:           3%
  Swap usage:             0%
  Processes:              639
  Users logged in:        1
  IPv4 address for bond0: 145.40.99.43
  IPv6 address for bond0: 2604:1380:4641:3b00::d

 * Super-optimized for small spaces - read how we shrank the memory
   footprint of MicroK8s to make it the smallest full K8s around.

   https://ubuntu.com/blog/microk8s-memory-optimisation

43 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable


1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

*** System restart required ***
Last login: Fri Aug 19 15:22:23 2022 from 165.204.154.57
mfm@mm74:~$ history
    1  sudo apt update
    2  sudo apt install -y ca-certificates curl gnupg lsb-release
    3  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    4  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list
    5  sudo apt update
    6  sudo apt install -y containerd.io
    7  wget https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64
    8  sudo install -m 755 runc.amd64 /usr/local/sbin/runc
    9  sudo mkdir -p /etc/containerd/
   10  containerd config default | sudo tee /etc/containerd/config.toml
   11  sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
   12  sudo sed -i 's/^disabled_plugins \=/\#disabled_plugins \=/g' /etc/containerd/config.toml
   13  sudo systemctl restart containerd
   14  sudo ufw allow 6443/tcp
   15  sudo ufw allow 2379/tcp
   16  sudo ufw allow 2380/tcp
   17  sudo ufw allow 10250/tcp
   18  sudo ufw allow 10257/tcp
   19  sudo ufw allow 10259/tcp
   20  sudo ufw reload
   21  sudo ufw allow 10250/tcp
   22  sudo ufw allow 30000:32767/tcp
   23  sudo ufw reload
   24  cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
   25  br_netfilter
   26  EOF
   27  cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
   28  net.bridge.bridge-nf-call-ip6tables = 1
   29  net.bridge.bridge-nf-call-iptables = 1
   30  net.ipv4.ip_forward = 1
   31  EOF
   32  sudo sysctl --system
   33  sudo swapoff -a
   34  sudo vi /etc/fstab  # comment out swap line
   35  sudo cat /etc/fstab
   36  sudo modprobe br_netfilter
   37  sudo sysctl net.bridge.bridge-nf-call-iptables=1
   38  sudo apt update
   39  sudo apt install -y apt-transport-https ca-certificates curl
   40  sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
   41  echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
   42  sudo apt update
   43  sudo apt install -y kubelet kubeadm kubectl
   44  sudo kubeadm init --pod-network-cidr=192.168.0.0/16
   45  mkdir -p $HOME/.kube
   46  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   47  sudo chown $(id -u):$(id -g) $HOME/.kube/config
   48  kubectl taint nodes --all node-role.kubernetes.io/master-
   49  kubectl taint nodes --all node-role.kubernetes.io/control-plane-
   50  kubectl create -f https://projectcalico.docs.tigera.io/manifests/tigera-operator.yaml
   51  kubectl create -f https://projectcalico.docs.tigera.io/manifests/custom-resources.yaml
   52  kubectl get nodes --show-labels
   53  sudo mkdir -p /k8s/weathervane/vol
   54  sudo chmod -R 777 /k8s
   55  git clone http://github.com/vmware/weathervane
   56  cd weathervane/
   57  cat > create-persistent-vol.yaml << EOF
   58  apiVersion: v1
   59  kind: PersistentVolume
   60  metadata:
   61    name: weathervane-pv
   62  spec:
   63    capacity:
   64      storage: 400Gi
   65    accessModes:
   66    - ReadWriteOnce
   67    persistentVolumeReclaimPolicy: Retain
   68    storageClassName: local-storage
   69    local:
   70      path: /k8s/weathervane/vol
   71    nodeAffinity:
   72      required:
   73        nodeSelectorTerms:
   74        - matchExpressions:
   75          - key: kubernetes.io/hostname
   76            operator: In
   77            values:
   78            - mm74
   79  EOF
   80  kubectl create -f create-persistent-vol.yaml
   81  kubectl get pv
   82  cat > create-storage-class.yaml << EOF
   83  kind: StorageClass
   84  apiVersion: storage.k8s.io/v1
   85  metadata:
   86    name: local-storage
   87  provisioner: kubernetes.io/no-provisioner
   88  volumeBindingMode: Immediate
   89  EOF
   90  kubectl create -f create-storage-class.yaml
   91  kubectl get sc
   92  cat > weathervane.config.k8s.quickstart << EOF
   93  {
   94    "description" : "micro",
   95    "configurationSize": "micro",
   96    "runStrategy" : "fixed",
   97    "dockerNamespace" : "mikemoranamd",
   98    "kubernetesClusters" : [
   99      {
  100        "name" : "kubernetes",
  101        "kubeconfigFile" : "/home/mfm/.kube/config",
  102        "kubeconfigContext" : "",
  103      },
  104    ],
  105    "driverCluster" : "kubernetes",
  106    "appInstanceCluster" : "kubernetes",
  107    "appIngressMethod" : "clusterip",
  108    "cassandraDataStorageClass" : "local-storage",
  109    "postgresqlStorageClass" : "local-storage",
  110    "nginxCacheStorageClass" : "local-storage",
  111  }
  112  EOF
  113  cat create-persistent-vol.yaml
  114  cat create-storage-class.yaml
  115  cat weathervane.config.k8s.quickstart
  116  sudo ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  117  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  118  history
  119  ll
  120  history > ~/history_2208151459
  121  ll ~
  122  uptime
  123  who
  124  cd ..
  125  cd .ssh
  126  ll
  127  vi authorized_keys
  128  ll
  129  who
  130  cd
  131  ll
  132  cd weathervane/
  133  ll
  134  kubectl get pods
  135  kubectl get ns
  136  cat ~/.kube/config
  137  ls
  138  ./runWeathervane.pl --configFile weathervane.config.k8s.quickstart
  139  ll
  140  cp test-pvc.yaml my.yaml
  141  vi my.yaml
  142  python3
  143  fg
  144  ls
  145  cat my.yaml
  146  ks
  147  ls
  148  ll
  149  cp runWeathervane.pl debugWeathervane.pl
  150  vi debugWeathervane.pl
  151  ./debugWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  152  jobs
  153  vi debugWeathervane.pl
  154  ./debugWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  155  kubectl get nodes
  156  kubectl get nodes -o wide
  157  kube get pods --allnamespace
  158  kubectl get pods --allnamespace
  159  kubectl get pods --all-namespace
  160  kubectl get pods -all ns
  161  kubectl get pods --all-namespace
  162  kubectl get pods --all-namespaces
  163  cd weathervane/
  164  ls -lat
  165  vim weathervane.config.k8s.quickstart
  166  kubectl get persisistvolume
  167  kubectl get pv
  168  kubectl get sc
  169  vim weathervane.config.k8s.quickstart
  170  vim runWeathervane.pl
  171  kubectl get ns
  172  vim runWeathervane.pl
  173  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  174  kubectl get pv
  175  kubectl get sc
  176  dir
  177  vim runWeathervane.pl
  178  vim create-persistent-vol.yaml
  179  vim create-storage-class.yaml
  180  kubectl get sc
  181  kubectl delete sc local-storage
  182  kubectl get sc
  183  kubectl apply -f create-storage-class.yaml
  184  kubectl get sc
  185  ./runWeathervane.pl --help
  186  kubectl get pods --all-namespaces
  187  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  188  vim weathervane.config.k8s.micro
  189  vim weathervane.config.k8s.quickstart
  190  vim weathervane.config.k8s.micro
  191  vim runWeathervane.pl
  192  cat weathervane.config.k8s.quickstart
  193  cat /home/mfm/.kube/config
  194  cat weathervane.config.k8s.quickstart
  195  vim  weathervane.config.k8s.quickstart
  196  kubectl get pods --all-namespaces
  197  kubectl get pvc
  198  kubectl get pods --all-namespaces
  199  kubectl get pvc
  200  vim runWeathervane.pl
  201  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  202  vim runWeathervane.pl
  203  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  204  vim test-pvc.yaml
  205  vim test-pvc.yaml
  206  vim my.yaml
  207  kubectl apply -f my.yaml
  208  vim test-pvc.yaml
  209  kubectl apply -f my.yaml
  210  kubectl apply -f test-pvc.yaml
  211  vim test-pvc.yaml
  212  kubectl apply -f test-pvc.yaml
  213  kubectl get pvc
  214  kubectl describe pvc weathervane-test-claim-02
  215  kubectl get pvc
  216  kubectl describe pvc weathervane-test-claim-02
  217  who
  218  ls
  219  cat history_2208151459
  220  cd weathervane/
  221  ll
  222  cat create-storage-class.yaml
  223  cat create-persistent-vol.yaml
  224  cat weathervane.config.k8s.quickstart
  225  kubectl get nodes
  226  kubectl get pv
  227  kubectl get sc
  228  kubectl get pvc
  229  cd weathervane/
  230  kubectl describe weathervane-test-claim-02
  231  kubectl describe pvc weathervane-test-claim-02
  232  kubectl get pv
  233  kubectl describe pv weathervane-pv
  234  ls -lat /k8s/weathervane/vol
  235  vim create-persistent-vol.yaml
  236  kubectl get node -o wide
  237  kubectl show labels
  238  kubectl get node --show-lables
  239  kubectl get node --show-labels
  240  vim create-persistent-vol.yaml
  241  ps -a
  242  who
  243  cd .ssh
  244  ll
  245  vi authorized_keys
  246  cd
  247  ls
  248  who
  249  uptime
  250  who
  251  man curl
  252  who
  253  uptime
  254  who
  255  ls
  256  kubectl get ps
  257  kubectl get sc
  258  ls
  259  cd weathervane/
  260  ;s
  261  ls
  262  vi runWeathervane.pl~
  263  vi runWeathervane.pl
  264  jobs
  265  fg
  266  jobs
  267  fg
  268  ps -a
  269  jobs
  270  ps -aef
  271  ps -aef | grep mfm
  272  fg
  273  cd weathervane/
  274  ls -alt
  275  vim create-persistent-vol.yaml
  276  vim create-storage-class.yaml
  277  kubectl get pv
  278  kubectl get pvc
  279  kubectl delete pvc weathervane-test-claim-02
  280  kubectl get pvc
  281  kubectl get pv
  282  kubectl describe pv weathervane-pv
  283  vim create-persistent-vol.yaml
  284  kubectl get pv
  285  vim create-persistent-vol.yaml
  286  vim create-storage-class.yaml
  287  kubectl get sc
  288  kubectl delete sc local-storage
  289  kubectl get sc
  290  kubectl apply -f create-storage-class.yaml
  291  kubectl get sc
  292  kubectl get sc -o wide
  293  kubectl describe sc local-storage
  294  kubectl get pc
  295  kubectl get pv
  296  kubectl apply -f test-pvc.yaml
  297  vim test-pvc.yaml
  298  kubectl get pvc
  299  kubectl get pv
  300  kubectl describe pv weathervane-pv
  301  kubectl get sc
  302  kubectl get pvc
  303  vim test-pvc.yaml
  304  kubectl describe pvc weathervane-test-claim-02
  305  cat /proc/cpuinfo
  306  vim test-pvc.yaml
  307  vim create-persistent-vol.yaml
  308  kubectl get pvc
  309  kubectl delete pvc weathervane-test-claim-02
  310  kubectl apply -f test-pvc.yaml
  311  kubectl get pvc
  312  kubectl get pv
  313  kubectl describe pvc weathervane-test-claim
  314  kubectl delete pvc weathervane-test-claim
  315  vim test-pvc.yaml
  316  kubectl get pv
  317  kubectl get pvc
  318  kubectl apply -f test-pvc.yaml
  319  kubectl get pvc
  320  kubectl describe pvc weathervane-test-claim
  321  kubectl delete pvc weathervane-test-claim
  322  vim test-pvc.yaml
  323  kubectl get pv
  324  ls /k8s/weathervane/vol/
  325  cd /k8s/weathervane/
  326  ls -lat
  327  cd vol/
  328  ls 0lat
  329  ls -lat
  330  touch test.tmp
  331  ls -alt
  332  cd ~/weathervane/
  333  ls -lat
  334  kubectl delete pv weathervane-pv
  335  kubectl get pv
  336  kubectl apply -f create-persistent-vol.yaml
  337  kubectl get pv
  338  kubectl get sc
  339  kubectl apply -f test-pvc.yaml
  340  kubectl get pvc
  341  kubectl describe pvc weathervane-test-claim
  342  cp test-pvc.yaml pvc2.yaml
  343  vim pvc2.yaml
  344  kubectl get pv
  345  kubectl get pvc
  346  kubectl apply -f pvc2.yaml
  347  kubectl get pvc
  348  kubectl describe pvc weathervane-test-claim-02
  349  vim pvc2.yaml
  350  vim create-persistent-vol.yaml
  351  kubectl get pvc
  352  kubectl describe pvc weathervane-test-claim
  353  kubectl get pvc
  354  kubectl delete pvc weathervane-test-claim-02
  355  kubectl delete pvc weathervane-test-claim
  356  kubectl get pv
  357  kubectl delete pv weathervane-pv
  358  kubectl get sc
  359  history | grep run
  360  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  361  kubectl get pv
  362  kubectl get pvc
  363  kubectl get sc
  364  kubectl delete sc local-storage
  365  vim weathervane.config.k8s.quickstart
  366  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  367  kubectl get sc
  368  vim weathervane.config.k8s.quickstart
  369  vim runWeathervane.pl
  370  kubectl get pv
  371  kubectl get pvc
  372  kubectl get sc
  373  kubectl apply -f test-pvc.yaml
  374  kubectl get pvc
  375  kubectl get pv
  376  kubectl get sc
  377  kubectl describe pvc weathervane-test-claim
  378  vim create-persistent-vol.yaml
  379  vim create-storage-class.yaml
  380  kubectl delete pvc weathervane-test-claim
  381  kubectl get sc
  382  kubectl get pv
  383  kubectl get pvc
  384  kubectl apply -f create-storage-class.yaml
  385  kubectl get sc
  386  kubectl apply -f test-pvc.yaml
  387  kubectl get pvc
  388  kubectl get pv
  389  kubectl get pvc
  390  kubectl describe pvc weathervane-test-claim
  391  vim weathervane.config.k8s.micro
  392  vim configFiles/kubernetes/cassandra.yaml
  393  kubectl get sc
  394  vim weathervane.config.k8s.quickstart
  395  vim weathervane.config.k8s.micro
  396  vim create-storage-class.yaml
  397  kubectl get pvc
  398  kubectl get pv
  399  kubectl get pvc
  400  kubectl get pvc -o wide
  401  kubectl describe pvc weathervane-test-claim
  402  kubectl describe pvc weathervane-test-claim -o yaml
  403  kubectl get pvc weathervane-test-claim -o yaml
  404  kubectl get pv
  405  kubectl get pvpvc
  406  kubectl get pvc
  407  kubectl delete pvc weathervane-test-claim
  408  kubectl get sc
  409  kubectl delete sc local-storage
  410  vim create-storage-class.yaml
  411  kubectl apply -f create-storage-class.yaml
  412  kubectl get sc
  413  kubectl apply -f test-pvc.yaml
  414  kubectl get pvc
  415  kubectl describe pvc weathervane-test-claim
  416  vim create-persistent-vol.yaml
  417  mkdir /k8s/weathervane/vol/v01
  418  mkdir /k8s/weathervane/vol/v02
  419  mkdir /k8s/weathervane/vol/v03
  420  mkdir /k8s/weathervane/vol/v04
  421  mkdir /k8s/weathervane/vol/v05
  422  cp create-persistent-vol.yaml pv01.yaml
  423  cp create-persistent-vol.yaml pv02.yaml
  424  cp create-persistent-vol.yaml pv03.yaml
  425  cp create-persistent-vol.yaml pv04.yaml
  426  cp create-persistent-vol.yaml pv05.yaml
  427  vim pv01.yaml
  428  vim pv02.yaml
  429  vim pv03.yaml
  430  vim pv04.yaml
  431  vim pv05.yaml
  432  kubectl get pvc
  433  kubectl delete pvc weathervane-test-claim
  434  vim pv01.yaml
  435  vim pv02.yaml
  436  vim pv03.yaml
  437  kubectl apply -f pv01.yaml pv02.yaml pv03.yaml
  438  kubectl apply -f pv01.yaml
  439  kubectl apply -f pv02.yaml
  440  kubectl apply -f pv03.yaml
  441  kubectl get storage
  442  kubectl get sc
  443  vim test-pvc.yaml
  444  vim pvc2.yaml
  445  cp pvc2.yaml pvc3.yaml
  446  vim pvc3.yaml
  447  kubectl apply -f test-pvc.yaml
  448  kubectl apply -f pvc2.yaml
  449  kubectl apply -f pvc3.yaml
  450  kubectl get pvc
  451  kubectl delete pvc weathervane-test-claim weathervane-test-claim-02 weathervane-test-claim-03
  452  history | grep run
  453  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  454  kubectl get pvs
  455  kubectl get pvc
  456  kubectl get pv
  457  kubectl get sc
  458  kubectl get pv
  459  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  460  ls -alt
  461  ifconfig
  462  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  463  kubectl get pvs
  464  kubectl get pvc
  465  kubectl get pvc weathervane-test-claim -o yaml
  466  kubectl get pvc weathervane-test-claim -o yaml > p.yaml
  467  cd weathervane/
  468  vim wv-pvc.yaml
  469  kubectl apply -f wv-pvc.yaml
  470  kubectl get pvc
  471  kubectl get pv
  472  kubectl get pvc
  473  kubectl apply -f pvc2.yaml
  474  kubectl get pvc
  475  kubectl get nodes
  476  kubectl get pvc
  477  cd weathervane/
  478  kubectl get pvc
  479  kubectl get pv
  480  kubectl get sc
  481  ls /k8s/weathervane/vol/
  482  kubectl get pv
  483  kubectl describe pvc weathervane-test-claim
  484  kubectl get sc
  485  ./runWeathervane.pl --help
  486  kubectl get pvc
  487  kubectl delete pvc weathervane-test-claim
  488  kubectl delete pvc weathervane-test-claim-02
  489  kubectl get pv
  490  kubectl delete pv weathervane-pv1
  491  kubectl delete pv weathervane-pv2
  492  kubectl delete pv weathervane-pv3
  493  kubectl sc
  494  kubectl get sc
  495  vim runWeathervane.pl
  496  kubectl apply -f pv01.yaml
  497  kubectl apply -f pv02.yaml
  498  kubectl apply -f pv03.yaml
  499  kubectl get pv
  500  vim runWeathervane.pl
  501  history | grep run
  502  ./runWeathervane.pl  --configFile=weathervane.config.k8s.quickstart
  503  kubectl get pv
  504  kubectl get pvc
  505  kubectl get pvc --all-namespace
  506  kubectl get pvc --all-namespaces
  507  kubectl get ns
  508  docker
  509  sudo apt install docker.io
  510  docker
  511  sudo apt install podman-docker
  512  dock
  513  podman
  514  podman ps -a
  515  vim runWeathervane.pl
  516  docker
  517  sudo apt remove podman-docker
  518  sudo apt purge podman-docker
  519  podman ps -a
  520  sudo apt install docker.io
  521  sudo apt install containerd.io docker.io
  522  podma
  523  podman
  524  podmannamespave
  525  podmannamespace
  526  podmannamespaces
  527  dockernamespave
  528  dockernamespace
  529  vim runWeathervane.pl
  530  sudo apt install podman-docker
  531  which podman
  532  sudo ln -s /usr/bin/docker /usr/bin/podman
  533  sudo ln -s /usr/bin/podman /usr/bin/docker
  534  ls /usr/bin/docker
  535  docker
  536  docker ps -a
  537  history | grep run
  538  ./runWeathervane.pl  --configFile=weathervane.config.k8s.quickstart
  539  history
mfm@mm74:~$ ll
total 9292
drwxr-x---  8 mfm  mfm     4096 Aug 19 15:52 ./
drwxr-xr-x  3 root root    4096 Aug 17 19:23 ../
-rw-------  1 mfm  mfm    14044 Aug 19 06:43 .bash_history
-rw-r--r--  1 mfm  mfm      220 Jan  6  2022 .bash_logout
-rw-r--r--  1 mfm  mfm     3771 Jan  6  2022 .bashrc
drwx------  3 mfm  mfm     4096 Aug 19 04:30 .cache/
drwxr-xr-x  3 mfm  mfm     4096 Aug 19 04:22 .config/
drwxrwxr-x  3 mfm  mfm     4096 Aug 17 19:44 .kube/
-rw-------  1 mfm  mfm       32 Aug 18 21:43 .lesshst
drwx------  3 mfm  mfm     4096 Aug 19 04:22 .local/
-rw-r--r--  1 mfm  mfm      807 Jan  6  2022 .profile
-rw-------  1 mfm  mfm      114 Aug 17 21:45 .python_history
drwx------  2 mfm  mfm     4096 Aug 18 18:08 .ssh/
-rw-r--r--  1 mfm  mfm        0 Aug 17 19:25 .sudo_as_admin_successful
-rw-------  1 mfm  mfm    15730 Aug 19 15:52 .viminfo
-rw-rw-r--  1 mfm  mfm      165 Aug 17 19:28 .wget-hsts
-rw-rw-r--  1 mfm  mfm     4719 Aug 17 19:59 history_2208151459
-rw-rw-r--  1 mfm  mfm        0 Aug 18 21:35 p.yaml
-rw-rw-r--  1 mfm  mfm  9415040 Mar 29 03:22 runc.amd64
drwxrwxr-x 18 mfm  mfm     4096 Aug 19 15:52 weathervane/
mfm@mm74:~$ history > history_220819
mfm@mm74:~$ cd weathervane/
mfm@mm74:/home/mfm/weathervane$ ls
BRANCHING.md            buildDockerImages.log       my.yaml            test-pvc.yaml
Branches.md             buildDockerImages.pl        output             testing
CODE-OF-CONDUCT.md      configFiles                 pv01.yaml          version.txt
CONTRIBUTING.md         create-persistent-vol.yaml  pv02.yaml          weathervane.config.k8s.micro
ISSUES.md               create-storage-class.yaml   pv03.yaml          weathervane.config.k8s.quickstart
LICENSE.txt             dbLoader                    pv04.yaml          weathervane.config.k8s.small2
Notice.txt              debugWeathervane.pl         pv05.yaml          weathervane.pl
README.md               doc                         pvc2.yaml          weathervaneResults.csv
auctionApp              dockerImages                pvc3.yaml          workloadConfiguration
auctionAppServerWarmer  gradle                      runHarness         workloadDriver
auctionBidService       gradle.properties           runWeathervane.pl  wv-pvc.yaml
auctionWeb              gradlew                     runmany.sh
build.gradle            gradlew.bat                 settings.gradle
mfm@mm74:/home/mfm/weathervane$ ls -lrt
total 320
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionApp
-rw-rw-r--  1 mfm  mfm   4585 Aug 17 19:47 README.md
-rw-rw-r--  1 mfm  mfm    454 Aug 17 19:47 Notice.txt
-rw-rw-r--  1 mfm  mfm   1485 Aug 17 19:47 LICENSE.txt
-rw-rw-r--  1 mfm  mfm   4952 Aug 17 19:47 ISSUES.md
-rw-rw-r--  1 mfm  mfm   9540 Aug 17 19:47 CONTRIBUTING.md
-rw-rw-r--  1 mfm  mfm   5247 Aug 17 19:47 CODE-OF-CONDUCT.md
-rw-rw-r--  1 mfm  mfm    200 Aug 17 19:47 Branches.md
-rw-rw-r--  1 mfm  mfm   2959 Aug 17 19:47 BRANCHING.md
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionBidService
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionAppServerWarmer
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 auctionWeb
drwxrwxr-x  4 mfm  mfm   4096 Aug 17 19:47 configFiles
-rwxrwxr-x  1 mfm  mfm  13779 Aug 17 19:47 buildDockerImages.pl
-rw-rw-r--  1 mfm  mfm  10152 Aug 17 19:47 build.gradle
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 dbLoader
drwxrwxr-x  8 mfm  mfm   4096 Aug 17 19:47 doc
-rwxrwxr-x  1 mfm  mfm   2185 Aug 17 19:47 gradlew.bat
-rwxrwxr-x  1 mfm  mfm   5305 Aug 17 19:47 gradlew
-rw-rw-r--  1 mfm  mfm     20 Aug 17 19:47 gradle.properties
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 gradle
drwxrwxr-x 14 mfm  mfm   4096 Aug 17 19:47 dockerImages
drwxrwxr-x 14 mfm  mfm   4096 Aug 17 19:47 runHarness
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 workloadDriver
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 workloadConfiguration
-rwxrwxr-x  1 mfm  mfm  42556 Aug 17 19:47 weathervane.pl
-rw-rw-r--  1 mfm  mfm    721 Aug 17 19:47 weathervane.config.k8s.small2
-rw-rw-r--  1 mfm  mfm    708 Aug 17 19:47 weathervane.config.k8s.micro
-rw-rw-r--  1 mfm  mfm      6 Aug 17 19:47 version.txt
drwxrwxr-x  3 mfm  mfm   4096 Aug 17 19:47 testing
-rw-rw-r--  1 mfm  mfm    145 Aug 17 19:47 settings.gradle
-rwxrwxr-x  1 mfm  mfm   2527 Aug 17 19:47 runmany.sh
-rw-r--r--  1 root root     0 Aug 17 19:56 weathervaneResults.csv
drwxr-xr-x  2 root root  4096 Aug 17 19:56 output
-rw-rw-r--  1 mfm  mfm    562 Aug 17 21:29 weathervane.config.k8s.quickstart
-rw-rw-r--  1 mfm  mfm    354 Aug 17 21:42 my.yaml
-rwxrwxr-x  1 mfm  mfm  21482 Aug 17 22:08 debugWeathervane.pl
-rwxrwxr-x  1 mfm  mfm  20538 Aug 18 20:34 runWeathervane.pl
-rw-rw-r--  1 mfm  mfm    197 Aug 18 21:14 create-storage-class.yaml
-rw-rw-r--  1 mfm  mfm    460 Aug 18 21:18 create-persistent-vol.yaml
-rw-rw-r--  1 mfm  mfm    460 Aug 18 21:20 pv04.yaml
-rw-rw-r--  1 mfm  mfm    460 Aug 18 21:20 pv05.yaml
-rw-rw-r--  1 mfm  mfm    461 Aug 18 21:21 pv01.yaml
-rw-rw-r--  1 mfm  mfm    461 Aug 18 21:21 pv02.yaml
-rw-rw-r--  1 mfm  mfm    461 Aug 18 21:21 pv03.yaml
-rw-rw-r--  1 mfm  mfm    277 Aug 18 21:23 test-pvc.yaml
-rw-rw-r--  1 mfm  mfm    280 Aug 18 21:23 pvc2.yaml
-rw-rw-r--  1 mfm  mfm    280 Aug 18 21:23 pvc3.yaml
-rw-rw-r--  1 mfm  mfm    791 Aug 18 21:37 wv-pvc.yaml
-rw-rw-r--  1 mfm  mfm    469 Aug 19 15:57 buildDockerImages.log
mfm@mm74:/home/mfm/weathervane$ cat buildDockerImages.log
Building the executables.
COMMAND> docker run --name weathervane-builder --rm -v /home/mfm/weathervane/.gradle:/root/.gradle -v /home/mfm/weathervane:/root/weathervane -w /root/weathervane --entrypoint /root/weathervane/gradlew openjdk:8 release
Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.
Error: short-name "openjdk:8" did not resolve to an alias and no unqualified-search registries are defined in "/etc/containers/registries.conf"
mfm@mm74:/home/mfm/weathervane$ tail ~/.ssh/authorized_keys
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDuHNNNXQ0BVW3i2g9XeWhOPWNCUqA8Q00aKhwtUZrC61nXZ1qM8cB65C0p3KndL22ceHk+F0zVsW8Swr1OJgRrS8xvfpeOlUE6uUD0ZgbEQQcjvilERXO9AlXhRJKxniaWVkfGVbjzOxsLgfYfn+l1M6b7woMA20xbQiIji1wDrvI7RRdlMLVbwlqYHDS91EkmQmIx4VHFxBXDAJbPPH8o5veCl6v0XnItewvQ+lE34yNBDJjh6sXOMc6fFzw0pd26qp/35febV2NVWjzNuuTAW6Ug1Jlqz1pu3u5fZOcHq7hDQt3UVGhv8aYriXxLjtILV4xdr19TRtV2IOPEZcJ/ ryan.savino@amd.com
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC9C7bN00QR3JIywHI3ujU19RjDwg3lEsXOl4oaFtrOA4Mo1OtXIVt6zdpazWLcSD21osnGfa3Q3tpiPpOZpXHjVRf11SfEXqcQVmA9gQE5NTT9TIc0fXIalFHdErx8cdDEmyURp0ZeQ0sV8kwev6QTllXWBFD8liJKYiyBLdybKSVW5GsvUqhJkBq9fVQU++0Z0hKAJWv0xo4H20XHoG/i9RacyW4FJk/GT0vDxni4+HAQ/E/3I7xVPWPhMNdov/qlKJtnsZedcYD1bQTu6tcQ0EjgYlXu4JbL0tJHSyh/Lk6xT/RO2cblY/JWhM09VWZwn+dZhxIjhMkTfo/MMs2nqMmiIvUJWgn64/b64SkL/PYUBPdQQeLeAk6Y5ekXha6DmKlDhJhIxBjCF3JJVOhstnLLHsDZwlef7SGlPpdwfJZWqa0n1IZFq+5JxLaR1zRPUMsK9LJwljSBeBF6Rczm7PUwU3HxWzjZ36D68ylQv2/U35W9tCS+nB/raCX+mfc= amd\udeodhar@SC-L10-udeodhar
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCjJbLSMfCTtgfv5dEe9dRjkrU9pAar0v0Cpc62DErV+802HdOjL3g65+OfeVyicOPL3OAEPKE8Rl8NCFbh+BhPAZSfivIw61RAH9OU/dfQqDVz4FOVbxjGZGqDvjdI5t7jGGcX2qodtgz1DngVbiwYrq4WHcr3wYFHGrOySCDdP09u/ogWnsRNTgR97Zo5UllppDU4MAWgCSj0j5r7U4mKFtzl5crbJC+6KxfNtCJgPDYFxKZ2jZVsbuup3pVhtOaFy4esOA21EWz6Ck3kDpXpOS8r20lXlDmA7M05fhEC3WhhJvuS5IbSw3vJ5L8OHYa6fuCqeNkGgdmEwo+vc4sB rsa-key-20220415
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDnhLeO477zHokrIlHP5eT2zDQHBAd+MSaqwEnxmG5n4kGes4zyRLWLRFf47n698QSmBqLJqfiM8jjjSrdbChzk+CXjSXSDsxAeGv0KGeSSZV+iQ3brVEwKft21S84fgx5I+lpuf2aR8MQ1dpyHfO68SRTfNptw5Xca+Cj5lEXMhw2v908WEoS1TaB5fRvXG+cMB4lQQWPq+yyEtQMQpCAXwaNnhZgMZ1LIVacyBCX/jknc4EyOhCIHL6ZfFBhrYcoIlG0mLiM3w7BkMkuicFAjmGKrfmcIcmH3NB4CzmXGSwJNm5LlAMg+4t+hGt2f5bXRDdMsChUy9OpcggrInr+rOliyx/dcIECYQE3xKgxN8K09FpPCukrJViaJTw1UDDp99TV6TmYjGAOEZphDAU3H/Ip4wZtDtzLHblMeTn948Y986yT+dUUjyzpCVOi38Uleepn0W8zqRmSrdu/IG4n1PGeKXI7j3AmooQyCUe0VsoYRH9Y9h76PHVtBHfWzf5s= amd\diegonza@AUS-LX-DIEGONZA
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCm6tME9rMpNKPqv7aC9rasdigYp9ydwOS2uUBncpW1wNUKNwPH+bgr1RWh/KKlYS0YF4yrSUf9hqb81kA6PRDZ5jxNPbQcfLWWugBI2orPtcq2JE/2PdzYFl0yNZ1jsxjM77e+LkGQzRshl7ZU++Np1dOA9bmoquYgrlpGwctMJO7LtjtXlV18huyPWJj8V2ibuDqGWejETg2VjCPfA6ZvOSIbOKo0f+C22yfxV6TKXKv16zQuws/griPc2ttY2mtdtS2DJCYxGNk/5ZZyKmJr8NjHDKyQkcz1nAYbC59z/UyEHrN2tAoFveenolptGX5yFCg9bZG7aHoY82wG+3n7QIooAMF17KNii+H7kc9EDudzLmIBEkSXR0iqyEALCJQGOQ3RUAYblL4AF3d6xsxgYAMds3GBEH3sg+29cnxlTueigNK04nwos8h3C/JCDLAfgri0w5y3rO4yOobEYeuqjDF44Cmjq3QzdXwWZtOjQr/PkZ5PiBq17KQNsot1Xj8= manali@bhadra
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDIIqFLQ+PWxikVK44D//sImfVViqZNbprbP4ZOL8Dv4GmeCDKVla5XP7fx/r2yIc2I2lvEReOSZ6MS+hI3ImcJMXUaA5zzv0iXUBMu6mEAbQa8GkJVkTwoiPQydPT1VexphewouJ6aC4qLKWYij9ihM58PhfLYvxws0ymDjF5f5sRZg1U6gur3UznhsRWCQrOMCL5mdcYGaMgtL5rqqzjXG/d+6JwZYrRlaLXbnocRPtw3AODM0JyyxM5oHAFsqTzctt/i9JFkuu1+BqQ/+Wn4zffcvmcUwGIYPIVuEcIuKMhqWWDLrOd1WHlp5kBbgGjuoWL/IVsRTeMqMdp1IctfVxuxCw4oC+LqFZUFXKhJ6qLTkrkwnT0RQZB4wf1RsyetwpoGPv/t3jxubghQm3UOusbj0tQAK2B8VBZUU1OOnrtTYrOGnv3/tGQWZR47WCKZMpmaRa1l+r4Ueb2LaTfaLcafC0h6dqgBII5L1lkXspI8RIOi1ofE6g/z/85wV5M= amd\charwong@scs-l-charwong
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8pBl52iqMe8xnrnufIuGTC+HCZSU4TvfVx5zkN0HQiL8BKaAnKujmaFl01x/SyYiTYXW0pj8MJnrlh1u1qTK5tz17A0APIIyjzKJ9TgWC+BZWwC5v5aKxijGiBsMjnapCBDIc6b1rK49qjVl1XBcMa7IefBsaXO8GbF1/XncRn+OqqUGVCzxpTLalItV/X6hymogGS7VYUMup9U6rU7kYnQZ6bsXwem39PgH5agXTX+XuXoT4NecfER0f2Pc1Qxkfd4aednzT4cK5mU56cgCOeZt9fTYRapSSoM7cU/LfpzReyEkwP+JoKwoLQQp7E9tgcwZzIFVyf3lf+nBdNvQaFQsKXkDtZwr1atvcLWw+B96+86rh607w7ApIu5XNgFCHLGknP9vj26GJ2eCUTQ7SmwHIVRRN2mJ8MJDQkbV/xotTIhbG5sLtbOZSOd4PH7OvekeVg6IuI25/7SoPRJOX5c2Mz5XMYQTv/8OZlqJisy/knIBGiyQtCiweShkDeTs= amd\hramezan@SCS-L-hramezan
[3:46 PM] Phrasavath, Sonemaly
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCyJGseJRuuU4R4Z4PxcSkJQV/FjtfRY2zpvtaftUm7O2hLi2HBuUNjodCdQxZaCjyFrxky+On7tK0ZIIhplGzik87J9FLt6zjNKSVpbE3qMpYrcZnuiqNoCXlPLMJL65kMcg0MntjZxOTcqjSjSGFyGhuyRdEvdbIUbn/K+7KMdHMijWTawRXw+CnyHOM29O4zisGaolcpsJCjPBh74cqOucTtNLWPTfq6DVrSZAA7fYNLgrzyc9nXyTBvXTXr2EN57wBHx9DkmqvjbJS4vwQlO7Q88vFCNfvWGU7pysicyd7YzD0+q8pwHBTh0I9jYkNyzKOgGVl2g4/qCRdAfY/QAX4blHtfjWoO9+zKHo+VPVTBxh0arcwp11fs+iRC9d/8MHt9hHEr9pg6uw1jCdkBs6uAUilesjpQ8/DhkaWOD1Cjwzq6nxH36X6Rpkva3SqJUUko7+u/4NXpDQ89K7zztNJvl25w1ycNo+n7eDVkqScMN6Uqcf7z1aG2JyPcqdc= amd\psonemal@AUS-LX-PSONEMAL

mfm@mm74:/home/mfm/weathervane$ cat buildDockerImages.pl
#!/usr/bin/perl
# Copyright 2017-2019 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
#
# Created by: Hal Rosenberg
#
# This builds and pushes the Docker images for Weathervane
#
package BuildDocker;
use strict;
use Getopt::Long;
use Term::ReadKey;
use Cwd qw(getcwd);

sub usage {
        print "Usage: ./buildDockerImages.pl [options] [imageNames]\n";
        print "This script builds the Weathervane docker images and pushes them to either\n";
        print "a Docker Hub account or a private registry.\n";
    print " Options:\n";
    print "     --help :         Print this help and exit.\n";
    print "     --username:      The username for the repository (Docker Hub account or private repository).\n";
    print "                      This must be provided if --private is not used.\n";
    print "                      For a private repository, this must be provided if a login is required\n";
    print "                      to authenticate to the repository.\n";
    print "     --password:      (optional) The password for the username (Docker Hub account or private repository).\n";
    print "                      If username is specified and this is not provided, you will be prompted.\n";
    print "     --private :      Use a private Docker registry \n";
    print "     --host :         This is the hostname or IP address for the private registry.\n";
    print "                      This must be provided if --private is used.\n";
    print "     --port :         This is the port number for the private registry.\n";
    print "                      This is only used with --private.\n";
    print "     --https_proxy :  This is the url of the https proxy to use when accessing the internet.\n";
    print "                      The proxy is currently only used for images that use curl in their Dockerfiles.\n";
    print "                      If required by your proxy, the url should include the port, username, and password.\n";
    print "     --http_proxy :   This is the url of the http proxy to use when accessing the internet.\n";
    print "                      The proxy is currently only used for images that use curl in their Dockerfiles.\n";
    print "                      If required by your proxy, the url should include the port, username, and password.\n";
    print "If the list of image names is empty, then all images are built and pushed.\n";
}

my $help = '';
my $host= "";
my $port = 0;
my $username = "";
my $password = "";
my $private = '';
my $http_proxy = '';
my $https_proxy = '';

my $optionsSuccess = GetOptions('help' => \$help,
                        'host=s' => \$host,
                        'port=i' => \$port,
                        'username=s' => \$username,
                        'password=s' => \$password,
                        'private!' => \$private,
                        'http_proxy=s' => \$http_proxy,
                        'https_proxy=s' => \$https_proxy
                        );
if (!$optionsSuccess) {
  die "Error for command line options.\n";
}

my @imageNames = qw(centos7 runharness auctiondatamanager auctionworkloaddriver auctionappserverwarmer cassandra nginx postgresql rabbitmq zookeeper tomcat auctionbidservice);
if ($#ARGV >= 0) {
        @imageNames = @ARGV;
}


if ($help) {
        usage();
        exit;
}

sub runAndLog {
        my ( $fileout, $cmd ) = @_;
        print $fileout "COMMAND> $cmd\n";
        open( CMD, "$cmd 2>&1 |" ) || die "Couldn't run command $cmd: $!\n";
        while ( my $line = <CMD> ) {
                print $fileout $line;
        }
        close CMD;
}

sub rewriteDockerfile {
        my ( $dirName, $namespace, $version) = @_;
        `mv $dirName/Dockerfile $dirName/Dockerfile.orig`;
        open(my $filein, "$dirName/Dockerfile.orig") or die "Can't open file $dirName/Dockerfile.orig for reading: $!\n";
        open(my $fileout, ">$dirName/Dockerfile") or die "Can't open file $dirName/Dockerfile for writing: $!\n";
        while (my $inline = <$filein>) {
                if ($inline =~ /^FROM/) {
                        print $fileout "FROM $namespace/weathervane-centos7:$version\n";
                } else {
                        print $fileout $inline;
                }
        }
        close $filein;
        close $fileout
}

sub cleanupDockerfile {
        my ( $dirName) = @_;
        `mv $dirName/Dockerfile.orig $dirName/Dockerfile`;
}

sub buildImage {
        my ($imageName, $buildArgsListRef, $fileout, $namespace, $version, $logFile) = @_;
        if ($imageName ne "centos7") {
                rewriteDockerfile("./dockerImages/$imageName", $namespace, $version);
        }

        my $buildArgs = "";
        foreach my $buildArg (@$buildArgsListRef) {
                $buildArgs .= " --build-arg $buildArg";
        }

        runAndLog($fileout, "docker build $buildArgs -t $namespace/weathervane-$imageName:$version ./dockerImages/$imageName");
        my $exitValue;
        $exitValue=$? >> 8;
        if ($exitValue) {
                print "Error: docker build failed with exitValue $exitValue, check $logFile.\n";
                if ($imageName ne "centos7") {
                        cleanupDockerfile("./dockerImages/$imageName");
                }
                cleanupAfterBuild($fileout);
                exit(-1);
        }

        runAndLog($fileout, "docker push $namespace/weathervane-$imageName:$version");
        $exitValue=$? >> 8;
        if ($exitValue) {
                print "Error: docker push failed with exitValue $exitValue, check $logFile.\n";
                if ($imageName ne "centos7") {
                        cleanupDockerfile("./dockerImages/$imageName");
                }
                cleanupAfterBuild($fileout);
                exit(-1);
        }

        if ($imageName ne "centos7") {
                cleanupDockerfile("./dockerImages/$imageName");
        }

}

sub setupForBuild {
        my ($fileout) = @_;

        #nginx
        runAndLog($fileout, "rm -rf ./dockerImages/nginx/html");
        runAndLog($fileout, "mkdir ./dockerImages/nginx/html");
        runAndLog($fileout, "cp ./dist/auctionWeb.zip ./dockerImages/nginx/html/");
        runAndLog($fileout, "cd ./dockerImages/nginx/html; unzip auctionWeb.zip; rm -f auctionWeb.zip");
        # appServerWarmer
        runAndLog($fileout, "rm -f ./dockerImages/auctionappserverwarmer/auctionAppServerWarmer.jar");
        runAndLog($fileout, "cp ./dist/auctionAppServerWarmer.jar ./dockerImages/auctionappserverwarmer/auctionAppServerWarmer.jar");
        # tomcat
        runAndLog($fileout, "rm -rf ./dockerImages/tomcat/apache-tomcat-auction1/webapps");
        runAndLog($fileout, "mkdir ./dockerImages/tomcat/apache-tomcat-auction1/webapps");
        runAndLog($fileout, "mkdir ./dockerImages/tomcat/apache-tomcat-auction1/webapps/auction");
        runAndLog($fileout, "mkdir ./dockerImages/tomcat/apache-tomcat-auction1/webapps/auctionWeb");
        runAndLog($fileout, "cp ./dist/auction.war ./dockerImages/tomcat/apache-tomcat-auction1/webapps/");
        runAndLog($fileout, "cp ./dist/auctionWeb.war ./dockerImages/tomcat/apache-tomcat-auction1/webapps/");
        runAndLog($fileout, "cp ./dist/auction.war ./dockerImages/tomcat/apache-tomcat-auction1/webapps/auction/");
        runAndLog($fileout, "cd ./dockerImages/tomcat/apache-tomcat-auction1/webapps/auction; unzip auction.war; rm -f auction.war");
        runAndLog($fileout, "cp ./dist/auctionWeb.war ./dockerImages/tomcat/apache-tomcat-auction1/webapps/auctionWeb/");
        runAndLog($fileout, "cd ./dockerImages/tomcat/apache-tomcat-auction1/webapps/auctionWeb; unzip auctionWeb.war; rm -f auctionWeb.war");
        # auctionBidService
        runAndLog($fileout, "rm -rf ./dockerImages/auctionbidservice/apache-tomcat-bid/webapps");
        runAndLog($fileout, "mkdir ./dockerImages/auctionbidservice/apache-tomcat-bid/webapps");
        runAndLog($fileout, "mkdir ./dockerImages/auctionbidservice/apache-tomcat-bid/webapps/auction");
        runAndLog($fileout, "cp ./dist/auctionBidService.war ./dockerImages/auctionbidservice/apache-tomcat-bid/webapps/auction.war");
        runAndLog($fileout, "cp ./dist/auctionBidService.war ./dockerImages/auctionbidservice/apache-tomcat-bid/webapps/auction/auction.war");
        runAndLog($fileout, "cd ./dockerImages/auctionbidservice/apache-tomcat-bid/webapps/auction; unzip auction.war; rm -f auction.war");
        # workload driver
        runAndLog($fileout, "rm -f ./dockerImages/auctionworkloaddriver/workloadDriver.jar");
        runAndLog($fileout, "rm -rf ./dockerImages/auctionworkloaddriver/workloadDriverLibs");
        runAndLog($fileout, "cp ./dist/workloadDriver.jar ./dockerImages/auctionworkloaddriver/workloadDriver.jar");
        runAndLog($fileout, "cp -r ./dist/workloadDriverLibs ./dockerImages/auctionworkloaddriver/workloadDriverLibs");
        # data manager
        runAndLog($fileout, "rm -f ./dockerImages/auctiondatamanager/dbLoader.jar");
        runAndLog($fileout, "rm -rf ./dockerImages/auctiondatamanager/dbLoaderLibs");
        runAndLog($fileout, "cp ./dist/dbLoader.jar ./dockerImages/auctiondatamanager/dbLoader.jar");
        runAndLog($fileout, "cp -r ./dist/dbLoaderLibs ./dockerImages/auctiondatamanager/dbLoaderLibs");
        # run harness
        runAndLog($fileout, "rm -rf ./dockerImages/runharness/runHarness");
        runAndLog($fileout, "rm -rf ./dockerImages/runharness/configFiles");
        runAndLog($fileout, "rm -rf ./dockerImages/runharness/workloadConfiguration");
        runAndLog($fileout, "rm -f ./dockerImages/runharness/weathervane.pl");
        runAndLog($fileout, "rm -f ./dockerImages/runharness/version.txt");
        runAndLog($fileout, "cp ./version.txt ./dockerImages/runharness/version.txt");
        runAndLog($fileout, "cp -r ./runHarness ./dockerImages/runharness/runHarness");
        runAndLog($fileout, "cp ./weathervane.pl ./dockerImages/runharness/weathervane.pl");
        runAndLog($fileout, "cp -r ./configFiles ./dockerImages/runharness/configFiles");
        runAndLog($fileout, "cp -r ./workloadConfiguration ./dockerImages/runharness/workloadConfiguration");
}

sub removeImages {
        my ($fileout) = @_;

        #Catching any left-over images
        runAndLog($fileout, "docker images -a | grep \"weathervane*\\|openjdk*\\|centos*\" | awk '{print \$3}' | xargs docker rmi");
}

sub cleanupAfterBuild {
        my ($fileout) = @_;
        #cleaning extraneous files from previous runs
        removeImages($fileout);

        runAndLog($fileout, "rm -rf ./dockerImages/nginx/html");
        runAndLog($fileout, "rm -f ./dockerImages/auctionappserverwarmer/auctionAppServerWarmer.jar");
        runAndLog($fileout, "rm -rf ./dockerImages/tomcat/apache-tomcat-auction1/webapps");
        runAndLog($fileout, "rm -rf ./dockerImages/auctionBidService/apache-tomcat-bid/webapps");
        runAndLog($fileout, "rm -f ./dockerImages/auctionworkloaddriver/workloadDriver.jar");
        runAndLog($fileout, "rm -rf ./dockerImages/auctionworkloaddriver/workloadDriverLibs");
        runAndLog($fileout, "rm -f ./dockerImages/auctiondatamanager/dbLoader.jar");
        runAndLog($fileout, "rm -rf ./dockerImages/auctiondatamanager/dbLoaderLibs");
        runAndLog($fileout, "rm -rf ./dockerImages/runharness/runHarness");
        runAndLog($fileout, "rm -rf ./dockerImages/runharness/configFiles");
        runAndLog($fileout, "rm -rf ./dockerImages/runharness/workloadConfiguration");
        runAndLog($fileout, "rm -f ./dockerImages/runharness/weathervane.pl");
        runAndLog($fileout, "rm -f ./dockerImages/runharness/version.txt");
}

my $namespace;
if ($private) {
        if ($host eq "") {
                print "When using a private repository, you must specify the host parameter.\n";
                usage();
                exit(-1);
        }
        $namespace = $host;
        if ($port) {
                $namespace .= ":$port";
        }
} else {
        if ($username eq "") {
                        print "When using Docker Hub, you must specify the username parameter.\n";
                        usage();
                        exit(-1);
        }
        $namespace = $username;
}

if (!(-e "./buildDockerImages.pl")) {
        print "You must run in the weathervane directory with buildDockerImages.pl\n";
        exit(-1);
}

my $cmdout;
my $fileout;
my $logFile = "buildDockerImages.log";
open( $fileout, ">$logFile" ) or die "Can't open file $logFile for writing: $!\n";

my $version = `cat version.txt`;
chomp($version);

# Build the executables if any of the images to be built
# require the executables
foreach my $imageName (@imageNames) {
        my @needExecutableImageNames = qw(auctiondatamanager auctionworkloaddriver auctionappserverwarmer nginx tomcat auctionbidservice);
        if (grep { $imageName eq $_ } @needExecutableImageNames) {
                print "Building the executables.\n";
                print $fileout "Building the executables.\n";

                # Create a .gradle directory and map it into the container
                # This will speed subsequent builds
                my $cwd = getcwd();
                `mkdir -p $cwd/.gradle`;
                my $cmdString = "docker run --name weathervane-builder --rm "
                              . "-v $cwd/.gradle:/root/.gradle "
                          . "-v $cwd:/root/weathervane -w /root/weathervane "
                      . "--entrypoint /root/weathervane/gradlew openjdk:8 release";
                runAndLog($fileout, $cmdString);
                my $exitValue=$? >> 8;
                if ($exitValue) {
                        print "Error: Building failed with exitValue $exitValue, check $logFile.\n";
                        exit(-1);
                }
                last;
        }
}

# Get the latest executables into the appropriate directories for the Docker images
print "Setting up the Docker images.\n";
print $fileout "Setting up the Docker images.\n";
setupForBuild($fileout);

# Turn on auto flushing of output
BEGIN { $| = 1 }

if (!$private || $username) {
        my $hostString = "Docker Hub";
        if ($private) {
                $hostString = $host;
        }
        if (!(length $password > 0)) {
                Term::ReadKey::ReadMode('noecho');
                print "Enter $hostString password for $username:";
                $password = Term::ReadKey::ReadLine(0);
                Term::ReadKey::ReadMode('restore');
                print "\n";
                $password =~ s/\R\z//; #get rid of new line
        }

        if (!(length $password > 0)) {
                die "Error, no password input.\n";
        }

        print "Logging into $hostString\n";
        print $fileout "Logging into $hostString\n";
        my $cmd = "docker login -u=\'$username\' -p=$password $host";
        my $response = `$cmd 2>&1`;
        print $fileout "result: $response\n";
        if ($response =~ /unauthorized/) {
                print "Could not login to $hostString with the supplied username and password.\n";
                cleanupAfterBuild($fileout);
                exit(-1);
        }
}

foreach my $imageName (@imageNames) {
        $imageName = lc $imageName;
        print "Building and pushing weathervane-$imageName image.\n";
        print $fileout "Building and pushing weathervane-$imageName image.\n";
        my @buildArgs;

        if($http_proxy){
                push @buildArgs, "http_proxy=$http_proxy";
        }
        if($https_proxy){
                push @buildArgs, "https_proxy=$https_proxy";
        }

        buildImage($imageName, \@buildArgs, $fileout, $namespace, $version, $logFile);
}

# Clean up
print $fileout "Cleaning up.\n";
cleanupAfterBuild($fileout);

print "Done.\n";
print $fileout "Done.\n";

1;
mfm@mm74:/home/mfm/weathervane$
mfm@mm74:/home/mfm/weathervane$ ./buildDockerImages.pl --username mikemoranamd
Building the executables.
Error: Building failed with exitValue 125, check buildDockerImages.log.
mfm@mm74:/home/mfm/weathervane$ cat buildDockerImages.log
Building the executables.
COMMAND> docker run --name weathervane-builder --rm -v /home/mfm/weathervane/.gradle:/root/.gradle -v /home/mfm/weathervane:/root/weathervane -w /root/weathervane --entrypoint /root/weathervane/gradlew openjdk:8 release
Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.
Error: short-name "openjdk:8" did not resolve to an alias and no unqualified-search registries are defined in "/etc/containers/registries.conf"
mfm@mm74:/home/mfm/weathervane$ client_loop: send disconnect: Connection reset

C:\Users\mikmoran>ssh mfm@145.40.99.43
Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-33-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Fri Aug 19 18:44:59 UTC 2022

  System load:            0.09814453125
  Usage of /:             3.4% of 218.06GB
  Memory usage:           3%
  Swap usage:             0%
  Processes:              632
  Users logged in:        1
  IPv4 address for bond0: 145.40.99.43
  IPv6 address for bond0: 2604:1380:4641:3b00::d

 * Super-optimized for small spaces - read how we shrank the memory
   footprint of MicroK8s to make it the smallest full K8s around.

   https://ubuntu.com/blog/microk8s-memory-optimisation

43 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable


1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

*** System restart required ***
Last login: Fri Aug 19 16:35:57 2022 from 165.204.77.11
mfm@mm74:~$ who
mfm      pts/0        2022-08-19 18:44 (165.204.77.11)
mfm      pts/2        2022-08-19 16:35 (165.204.77.11)
mfm@mm74:~$ cd weathervane/
mfm@mm74:/home/mfm/weathervane$ cat pv01.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: weathervane-pv1
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /k8s/weathervane/vol/v01
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - mm74
mfm@mm74:/home/mfm/weathervane$ cat pv01.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: weathervane-pv1
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /k8s/weathervane/vol/v01
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - mm74
mfm@mm74:/home/mfm/weathervane$ cat pv02.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: weathervane-pv2
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /k8s/weathervane/vol/v02
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - mm74
mfm@mm74:/home/mfm/weathervane$ cat pv03.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: weathervane-pv3
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /k8s/weathervane/vol/v03
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - mm74
mfm@mm74:/home/mfm/weathervane$ cat pv04.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: weathervane-pv
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /k8s/weathervane/vol/v04
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - mm74
mfm@mm74:/home/mfm/weathervane$ cat pv05.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: weathervane-pv
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /k8s/weathervane/vol/v05
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - mm74
mfm@mm74:/home/mfm/weathervane$ cat pvc2.yaml
  kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: weathervane-test-claim-02
    annotations:
        volume.beta.kubernetes.io/storage-class: local-storage
  spec:
    accessModes:
     - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
mfm@mm74:/home/mfm/weathervane$ cat pvc3.yaml
  kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: weathervane-test-claim-03
    annotations:
        volume.beta.kubernetes.io/storage-class: local-storage
  spec:
    accessModes:
     - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
mfm@mm74:/home/mfm/weathervane$ cat wv-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"annotations":{"volume.beta.kubernetes.io/storage-class":"local-storage"},"name":"weathervane-test-claim","namespace":"default"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}}
    volume.beta.kubernetes.io/storage-class: local-storage
  creationTimestamp: "2022-08-18T21:35:18Z"
  finalizers:
  - kubernetes.io/pvc-protection
  name: weathervane-test-claim
  namespace: default
  resourceVersion: "205735"
  uid: d547ca3a-a98a-4ee9-9299-4f9a95b1d8f2
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem

mfm@mm74:/home/mfm/weathervane$
mfm@mm74:/home/mfm/weathervane$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   runWeathervane.pl

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        create-persistent-vol.yaml
        create-storage-class.yaml
        debugWeathervane.pl
        my.yaml
        pv01.yaml
        pv02.yaml
        pv03.yaml
        pv04.yaml
        pv05.yaml
        pvc2.yaml
        pvc3.yaml
        test-pvc.yaml
        weathervane.config.k8s.quickstart
        weathervaneResults.csv
        wv-pvc.yaml

no changes added to commit (use "git add" and/or "git commit -a")
mfm@mm74:/home/mfm/weathervane$ ./runWeathervane.pl --skipPvTest --configFile=weathervane.config.k8s.quickstart
Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.
Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.
Starting Weathervane Run-Harness.  Pulling container image may take a few minutes.
Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.
Error: short-name "mikemoranamd/weathervane-runharness:2.1.1" did not resolve to an alias and no unqualified-search registries are defined in "/etc/containers/registries.conf"
Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.
Error: short-name "mikemoranamd/weathervane-runharness:2.1.1" did not resolve to an alias and no unqualified-search registries are defined in "/etc/containers/registries.conf"
Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.
Error: no container with name or ID "weathervane" found: no such container
Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.
Error: error inspecting object: no such object: "weathervane"
Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.
Error: no container with name or ID "weathervane" found: no such container
mfm@mm74:/home/mfm/weathervane$



Microsoft Windows [Version 10.0.19044.1826]
(c) Microsoft Corporation. All rights reserved.

C:\Users\mikmoran>ssh mfm@145.40.99.43
Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-33-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Tue Aug 23 21:31:59 UTC 2022

  System load:            0.06005859375
  Usage of /:             5.2% of 218.06GB
  Memory usage:           4%
  Swap usage:             0%
  Processes:              633
  Users logged in:        1
  IPv4 address for bond0: 145.40.99.43
  IPv6 address for bond0: 2604:1380:4641:3b00::d

 * Super-optimized for small spaces - read how we shrank the memory
   footprint of MicroK8s to make it the smallest full K8s around.

   https://ubuntu.com/blog/microk8s-memory-optimisation

41 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable


1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

*** System restart required ***
Last login: Tue Aug 23 19:49:31 2022 from 165.204.154.57
Welcome to Ubuntu 22.04 LTS (GNU/Linux 5.15.0-33-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Tue Aug 23 21:31:59 UTC 2022

  System load:            0.06005859375
  Usage of /:             5.2% of 218.06GB
  Memory usage:           4%
  Swap usage:             0%
  Processes:              633
  Users logged in:        1
  IPv4 address for bond0: 145.40.99.43
  IPv6 address for bond0: 2604:1380:4641:3b00::d

 * Super-optimized for small spaces - read how we shrank the memory
   footprint of MicroK8s to make it the smallest full K8s around.

   https://ubuntu.com/blog/microk8s-memory-optimisation

41 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable


1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

*** System restart required ***
Last login: Tue Aug 23 19:49:31 2022 from 165.204.154.57
mfm@mm74:~$ uname -a
Linux mm74 5.15.0-33-generic #34-Ubuntu SMP Wed May 18 13:34:26 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux
mfm@mm74:~$ ll
total 9320
drwxr-x---  9 mfm  mfm     4096 Aug 23 19:50 ./
drwxr-xr-x  3 root root    4096 Aug 17 19:23 ../
-rw-------  1 mfm  mfm    17184 Aug 23 04:30 .bash_history
-rw-r--r--  1 mfm  mfm      220 Jan  6  2022 .bash_logout
-rw-r--r--  1 mfm  mfm     3771 Jan  6  2022 .bashrc
drwx------  3 mfm  mfm     4096 Aug 19 04:30 .cache/
drwxr-xr-x  4 mfm  mfm     4096 Aug 23 04:18 .config/
drwxrwxr-x  3 mfm  mfm     4096 Aug 19 19:18 .cpan/
drwxrwxr-x  3 mfm  mfm     4096 Aug 17 19:44 .kube/
-rw-------  1 mfm  mfm       32 Aug 18 21:43 .lesshst
drwx------  3 mfm  mfm     4096 Aug 19 04:22 .local/
-rw-r--r--  1 mfm  mfm      807 Jan  6  2022 .profile
-rw-------  1 mfm  mfm      114 Aug 17 21:45 .python_history
drwx------  2 mfm  mfm     4096 Aug 18 18:08 .ssh/
-rw-r--r--  1 mfm  mfm        0 Aug 17 19:25 .sudo_as_admin_successful
-rw-------  1 mfm  mfm    16086 Aug 23 19:50 .viminfo
-rw-rw-r--  1 mfm  mfm      165 Aug 17 19:28 .wget-hsts
-rw-rw-r--  1 mfm  mfm     4719 Aug 17 19:59 history_2208151459
-rw-rw-r--  1 mfm  mfm    17862 Aug 19 16:38 history_220819
-rw-rw-r--  1 mfm  mfm        0 Aug 18 21:35 p.yaml
-rw-rw-r--  1 mfm  mfm  9415040 Mar 29 03:22 runc.amd64
drwxrwxr-x 21 mfm  mfm     4096 Aug 23 04:13 weathervane/
mfm@mm74:~$ which zip
mfm@mm74:~$ which pkzip
mfm@mm74:~$ cd weathervane/
mfm@mm74:/home/mfm/weathervane$ ls
BRANCHING.md            buildDockerImages.pl        outDir             testing
Branches.md             configFiles                 output             tmpDir
CODE-OF-CONDUCT.md      create-persistent-vol.yaml  pv01.yaml          version.txt
CONTRIBUTING.md         create-storage-class.yaml   pv02.yaml          weathervane.config.k8s.micro
ISSUES.md               dbLoader                    pv03.yaml          weathervane.config.k8s.quickstart
LICENSE.txt             debugWeathervane.pl         pv04.yaml          weathervane.config.k8s.small2
Notice.txt              dist                        pv05.yaml          weathervane.pl
README.md               doc                         pvc2.yaml          weathervaneResults.csv
auctionApp              dockerImages                pvc3.yaml          workloadConfiguration
auctionAppServerWarmer  gradle                      runHarness         workloadDriver
auctionBidService       gradle.properties           runWeathervane.pl  wv-pvc.yaml
auctionWeb              gradlew                     runmany.sh
build.gradle            gradlew.bat                 settings.gradle
buildDockerImages.log   my.yaml                     test-pvc.yaml
mfm@mm74:/home/mfm/weathervane$ ls -lrt
total 704
-rw-rw-r--  1 mfm  mfm    4585 Aug 17 19:47 README.md
-rw-rw-r--  1 mfm  mfm     454 Aug 17 19:47 Notice.txt
-rw-rw-r--  1 mfm  mfm    1485 Aug 17 19:47 LICENSE.txt
-rw-rw-r--  1 mfm  mfm    4952 Aug 17 19:47 ISSUES.md
-rw-rw-r--  1 mfm  mfm    9540 Aug 17 19:47 CONTRIBUTING.md
-rw-rw-r--  1 mfm  mfm    5247 Aug 17 19:47 CODE-OF-CONDUCT.md
-rw-rw-r--  1 mfm  mfm     200 Aug 17 19:47 Branches.md
-rw-rw-r--  1 mfm  mfm    2959 Aug 17 19:47 BRANCHING.md
drwxrwxr-x  4 mfm  mfm    4096 Aug 17 19:47 configFiles
-rwxrwxr-x  1 mfm  mfm   13779 Aug 17 19:47 buildDockerImages.pl
-rw-rw-r--  1 mfm  mfm   10152 Aug 17 19:47 build.gradle
drwxrwxr-x  8 mfm  mfm    4096 Aug 17 19:47 doc
-rwxrwxr-x  1 mfm  mfm    2185 Aug 17 19:47 gradlew.bat
-rwxrwxr-x  1 mfm  mfm    5305 Aug 17 19:47 gradlew
-rw-rw-r--  1 mfm  mfm      20 Aug 17 19:47 gradle.properties
drwxrwxr-x  3 mfm  mfm    4096 Aug 17 19:47 gradle
drwxrwxr-x 14 mfm  mfm    4096 Aug 17 19:47 dockerImages
drwxrwxr-x 14 mfm  mfm    4096 Aug 17 19:47 runHarness
drwxrwxr-x  3 mfm  mfm    4096 Aug 17 19:47 workloadConfiguration
-rwxrwxr-x  1 mfm  mfm   42556 Aug 17 19:47 weathervane.pl
-rw-rw-r--  1 mfm  mfm     721 Aug 17 19:47 weathervane.config.k8s.small2
-rw-rw-r--  1 mfm  mfm     708 Aug 17 19:47 weathervane.config.k8s.micro
-rw-rw-r--  1 mfm  mfm       6 Aug 17 19:47 version.txt
drwxrwxr-x  3 mfm  mfm    4096 Aug 17 19:47 testing
-rw-rw-r--  1 mfm  mfm     145 Aug 17 19:47 settings.gradle
-rwxrwxr-x  1 mfm  mfm    2527 Aug 17 19:47 runmany.sh
-rw-r--r--  1 root root      0 Aug 17 19:56 weathervaneResults.csv
drwxr-xr-x  2 root root   4096 Aug 17 19:56 output
-rw-rw-r--  1 mfm  mfm     562 Aug 17 21:29 weathervane.config.k8s.quickstart
-rw-rw-r--  1 mfm  mfm     354 Aug 17 21:42 my.yaml
-rwxrwxr-x  1 mfm  mfm   21482 Aug 17 22:08 debugWeathervane.pl
-rwxrwxr-x  1 mfm  mfm   20538 Aug 18 20:34 runWeathervane.pl
-rw-rw-r--  1 mfm  mfm     197 Aug 18 21:14 create-storage-class.yaml
-rw-rw-r--  1 mfm  mfm     460 Aug 18 21:18 create-persistent-vol.yaml
-rw-rw-r--  1 mfm  mfm     460 Aug 18 21:20 pv04.yaml
-rw-rw-r--  1 mfm  mfm     460 Aug 18 21:20 pv05.yaml
-rw-rw-r--  1 mfm  mfm     461 Aug 18 21:21 pv01.yaml
-rw-rw-r--  1 mfm  mfm     461 Aug 18 21:21 pv02.yaml
-rw-rw-r--  1 mfm  mfm     461 Aug 18 21:21 pv03.yaml
-rw-rw-r--  1 mfm  mfm     277 Aug 18 21:23 test-pvc.yaml
-rw-rw-r--  1 mfm  mfm     280 Aug 18 21:23 pvc2.yaml
-rw-rw-r--  1 mfm  mfm     280 Aug 18 21:23 pvc3.yaml
-rw-rw-r--  1 mfm  mfm     791 Aug 18 21:37 wv-pvc.yaml
drwxrwxr-x  4 mfm  mfm    4096 Aug 23 03:55 auctionApp
drwxrwxr-x  4 mfm  mfm    4096 Aug 23 03:56 auctionAppServerWarmer
drwxrwxr-x  4 mfm  mfm    4096 Aug 23 03:56 auctionBidService
drwxrwxr-x  4 mfm  mfm    4096 Aug 23 03:56 auctionWeb
drwxrwxr-x  4 mfm  mfm    4096 Aug 23 03:56 dbLoader
drwxrwxr-x  4 mfm  mfm    4096 Aug 23 03:56 workloadDriver
drwxr-xr-x  4 mfm  mfm    4096 Aug 23 03:56 dist
-rw-rw-r--  1 mfm  mfm  378761 Aug 23 04:04 buildDockerImages.log
drwxrwxr-x  2 mfm  mfm    4096 Aug 23 04:13 tmpDir
drwxrwxr-x  3 mfm  mfm    4096 Aug 23 04:13 outDir
mfm@mm74:/home/mfm/weathervane$ cd ..
mfm@mm74:/home/mfm$ cp -R weathervane/ weathervane_backup
mfm@mm74:/home/mfm$ ll
total 9324
drwxr-x--- 10 mfm  mfm     4096 Aug 23 21:38 ./
drwxr-xr-x  3 root root    4096 Aug 17 19:23 ../
-rw-------  1 mfm  mfm    17184 Aug 23 04:30 .bash_history
-rw-r--r--  1 mfm  mfm      220 Jan  6  2022 .bash_logout
-rw-r--r--  1 mfm  mfm     3771 Jan  6  2022 .bashrc
drwx------  3 mfm  mfm     4096 Aug 19 04:30 .cache/
drwxr-xr-x  4 mfm  mfm     4096 Aug 23 04:18 .config/
drwxrwxr-x  3 mfm  mfm     4096 Aug 19 19:18 .cpan/
drwxrwxr-x  3 mfm  mfm     4096 Aug 17 19:44 .kube/
-rw-------  1 mfm  mfm       32 Aug 18 21:43 .lesshst
drwx------  3 mfm  mfm     4096 Aug 19 04:22 .local/
-rw-r--r--  1 mfm  mfm      807 Jan  6  2022 .profile
-rw-------  1 mfm  mfm      114 Aug 17 21:45 .python_history
drwx------  2 mfm  mfm     4096 Aug 18 18:08 .ssh/
-rw-r--r--  1 mfm  mfm        0 Aug 17 19:25 .sudo_as_admin_successful
-rw-------  1 mfm  mfm    16086 Aug 23 19:50 .viminfo
-rw-rw-r--  1 mfm  mfm      165 Aug 17 19:28 .wget-hsts
-rw-rw-r--  1 mfm  mfm     4719 Aug 17 19:59 history_2208151459
-rw-rw-r--  1 mfm  mfm    17862 Aug 19 16:38 history_220819
-rw-rw-r--  1 mfm  mfm        0 Aug 18 21:35 p.yaml
-rw-rw-r--  1 mfm  mfm  9415040 Mar 29 03:22 runc.amd64
drwxrwxr-x 21 mfm  mfm     4096 Aug 23 04:13 weathervane/
drwxrwxr-x 21 mfm  mfm     4096 Aug 23 21:38 weathervane_backup/
mfm@mm74:/home/mfm$ cd weathervane_backup/
mfm@mm74:/home/mfm/weathervane_backup$ ll
total 720
drwxrwxr-x 21 mfm mfm   4096 Aug 23 21:38 ./
drwxr-x--- 10 mfm mfm   4096 Aug 23 21:38 ../
-rw-r--r--  1 mfm mfm      0 Aug 23 21:38 .accept-weathervane
drwxrwxr-x  8 mfm mfm   4096 Aug 23 21:38 .git/
-rw-rw-r--  1 mfm mfm   2411 Aug 23 21:38 .gitignore
drwxrwxr-x 10 mfm mfm   4096 Aug 23 21:38 .gradle/
-rw-rw-r--  1 mfm mfm   2959 Aug 23 21:38 BRANCHING.md
-rw-rw-r--  1 mfm mfm    200 Aug 23 21:38 Branches.md
-rw-rw-r--  1 mfm mfm   5247 Aug 23 21:38 CODE-OF-CONDUCT.md
-rw-rw-r--  1 mfm mfm   9540 Aug 23 21:38 CONTRIBUTING.md
-rw-rw-r--  1 mfm mfm   4952 Aug 23 21:38 ISSUES.md
-rw-rw-r--  1 mfm mfm   1485 Aug 23 21:38 LICENSE.txt
-rw-rw-r--  1 mfm mfm    454 Aug 23 21:38 Notice.txt
-rw-rw-r--  1 mfm mfm   4585 Aug 23 21:38 README.md
drwxrwxr-x  4 mfm mfm   4096 Aug 23 21:38 auctionApp/
drwxrwxr-x  4 mfm mfm   4096 Aug 23 21:38 auctionAppServerWarmer/
drwxrwxr-x  4 mfm mfm   4096 Aug 23 21:38 auctionBidService/
drwxrwxr-x  4 mfm mfm   4096 Aug 23 21:38 auctionWeb/
-rw-rw-r--  1 mfm mfm  10152 Aug 23 21:38 build.gradle
-rw-rw-r--  1 mfm mfm 378761 Aug 23 21:38 buildDockerImages.log
-rwxrwxr-x  1 mfm mfm  13779 Aug 23 21:38 buildDockerImages.pl*
drwxrwxr-x  4 mfm mfm   4096 Aug 23 21:38 configFiles/
-rw-rw-r--  1 mfm mfm    460 Aug 23 21:38 create-persistent-vol.yaml
-rw-rw-r--  1 mfm mfm    197 Aug 23 21:38 create-storage-class.yaml
drwxrwxr-x  4 mfm mfm   4096 Aug 23 21:38 dbLoader/
-rwxrwxr-x  1 mfm mfm  21482 Aug 23 21:38 debugWeathervane.pl*
drwxr-xr-x  4 mfm mfm   4096 Aug 23 21:38 dist/
drwxrwxr-x  8 mfm mfm   4096 Aug 23 21:38 doc/
drwxrwxr-x 14 mfm mfm   4096 Aug 23 21:38 dockerImages/
drwxrwxr-x  3 mfm mfm   4096 Aug 23 21:38 gradle/
-rw-rw-r--  1 mfm mfm     20 Aug 23 21:38 gradle.properties
-rwxrwxr-x  1 mfm mfm   5305 Aug 23 21:38 gradlew*
-rwxrwxr-x  1 mfm mfm   2185 Aug 23 21:38 gradlew.bat*
-rw-rw-r--  1 mfm mfm    354 Aug 23 21:38 my.yaml
drwxrwxr-x  3 mfm mfm   4096 Aug 23 21:38 outDir/
drwxr-xr-x  2 mfm mfm   4096 Aug 23 21:38 output/
-rw-rw-r--  1 mfm mfm    461 Aug 23 21:38 pv01.yaml
-rw-rw-r--  1 mfm mfm    461 Aug 23 21:38 pv02.yaml
-rw-rw-r--  1 mfm mfm    461 Aug 23 21:38 pv03.yaml
-rw-rw-r--  1 mfm mfm    460 Aug 23 21:38 pv04.yaml
-rw-rw-r--  1 mfm mfm    460 Aug 23 21:38 pv05.yaml
-rw-rw-r--  1 mfm mfm    280 Aug 23 21:38 pvc2.yaml
-rw-rw-r--  1 mfm mfm    280 Aug 23 21:38 pvc3.yaml
drwxrwxr-x 14 mfm mfm   4096 Aug 23 21:38 runHarness/
-rwxrwxr-x  1 mfm mfm  20538 Aug 23 21:38 runWeathervane.pl*
-rwxrwxr-x  1 mfm mfm   2527 Aug 23 21:38 runmany.sh*
-rw-rw-r--  1 mfm mfm    145 Aug 23 21:38 settings.gradle
-rw-rw-r--  1 mfm mfm    277 Aug 23 21:38 test-pvc.yaml
drwxrwxr-x  3 mfm mfm   4096 Aug 23 21:38 testing/
drwxrwxr-x  2 mfm mfm   4096 Aug 23 21:38 tmpDir/
-rw-rw-r--  1 mfm mfm      6 Aug 23 21:38 version.txt
-rw-rw-r--  1 mfm mfm    708 Aug 23 21:38 weathervane.config.k8s.micro
-rw-rw-r--  1 mfm mfm    562 Aug 23 21:38 weathervane.config.k8s.quickstart
-rw-rw-r--  1 mfm mfm    721 Aug 23 21:38 weathervane.config.k8s.small2
-rwxrwxr-x  1 mfm mfm  42556 Aug 23 21:38 weathervane.pl*
-rw-r--r--  1 mfm mfm      0 Aug 23 21:38 weathervaneResults.csv
drwxrwxr-x  3 mfm mfm   4096 Aug 23 21:38 workloadConfiguration/
drwxrwxr-x  4 mfm mfm   4096 Aug 23 21:38 workloadDriver/
-rw-rw-r--  1 mfm mfm    791 Aug 23 21:38 wv-pvc.yaml
mfm@mm74:/home/mfm/weathervane_backup$ cd ..
mfm@mm74:/home/mfm$ du -s *
8       history_2208151459
20      history_220819
0       p.yaml
9196    runc.amd64
1076916 weathervane
1076912 weathervane_backup
mfm@mm74:/home/mfm$ cd weathervane
mfm@mm74:/home/mfm/weathervane$ ll
total 724
drwxrwxr-x 21 mfm  mfm    4096 Aug 23 04:13 ./
drwxr-x--- 10 mfm  mfm    4096 Aug 23 21:38 ../
-rw-r--r--  1 root root      0 Aug 17 19:56 .accept-weathervane
drwxrwxr-x  8 mfm  mfm    4096 Aug 19 19:06 .git/
-rw-rw-r--  1 mfm  mfm    2411 Aug 17 19:47 .gitignore
drwxrwxr-x 10 mfm  mfm    4096 Aug 23 03:55 .gradle/
-rw-rw-r--  1 mfm  mfm    2959 Aug 17 19:47 BRANCHING.md
-rw-rw-r--  1 mfm  mfm     200 Aug 17 19:47 Branches.md
-rw-rw-r--  1 mfm  mfm    5247 Aug 17 19:47 CODE-OF-CONDUCT.md
-rw-rw-r--  1 mfm  mfm    9540 Aug 17 19:47 CONTRIBUTING.md
-rw-rw-r--  1 mfm  mfm    4952 Aug 17 19:47 ISSUES.md
-rw-rw-r--  1 mfm  mfm    1485 Aug 17 19:47 LICENSE.txt
-rw-rw-r--  1 mfm  mfm     454 Aug 17 19:47 Notice.txt
-rw-rw-r--  1 mfm  mfm    4585 Aug 17 19:47 README.md
drwxrwxr-x  4 mfm  mfm    4096 Aug 23 03:55 auctionApp/
drwxrwxr-x  4 mfm  mfm    4096 Aug 23 03:56 auctionAppServerWarmer/
drwxrwxr-x  4 mfm  mfm    4096 Aug 23 03:56 auctionBidService/
drwxrwxr-x  4 mfm  mfm    4096 Aug 23 03:56 auctionWeb/
-rw-rw-r--  1 mfm  mfm   10152 Aug 17 19:47 build.gradle
-rw-rw-r--  1 mfm  mfm  378761 Aug 23 04:04 buildDockerImages.log
-rwxrwxr-x  1 mfm  mfm   13779 Aug 17 19:47 buildDockerImages.pl*
drwxrwxr-x  4 mfm  mfm    4096 Aug 17 19:47 configFiles/
-rw-rw-r--  1 mfm  mfm     460 Aug 18 21:18 create-persistent-vol.yaml
-rw-rw-r--  1 mfm  mfm     197 Aug 18 21:14 create-storage-class.yaml
drwxrwxr-x  4 mfm  mfm    4096 Aug 23 03:56 dbLoader/
-rwxrwxr-x  1 mfm  mfm   21482 Aug 17 22:08 debugWeathervane.pl*
drwxr-xr-x  4 mfm  mfm    4096 Aug 23 03:56 dist/
drwxrwxr-x  8 mfm  mfm    4096 Aug 17 19:47 doc/
drwxrwxr-x 14 mfm  mfm    4096 Aug 17 19:47 dockerImages/
drwxrwxr-x  3 mfm  mfm    4096 Aug 17 19:47 gradle/
-rw-rw-r--  1 mfm  mfm      20 Aug 17 19:47 gradle.properties
-rwxrwxr-x  1 mfm  mfm    5305 Aug 17 19:47 gradlew*
-rwxrwxr-x  1 mfm  mfm    2185 Aug 17 19:47 gradlew.bat*
-rw-rw-r--  1 mfm  mfm     354 Aug 17 21:42 my.yaml
drwxrwxr-x  3 mfm  mfm    4096 Aug 23 04:13 outDir/
drwxr-xr-x  2 root root   4096 Aug 17 19:56 output/
-rw-rw-r--  1 mfm  mfm     461 Aug 18 21:21 pv01.yaml
-rw-rw-r--  1 mfm  mfm     461 Aug 18 21:21 pv02.yaml
-rw-rw-r--  1 mfm  mfm     461 Aug 18 21:21 pv03.yaml
-rw-rw-r--  1 mfm  mfm     460 Aug 18 21:20 pv04.yaml
-rw-rw-r--  1 mfm  mfm     460 Aug 18 21:20 pv05.yaml
-rw-rw-r--  1 mfm  mfm     280 Aug 18 21:23 pvc2.yaml
-rw-rw-r--  1 mfm  mfm     280 Aug 18 21:23 pvc3.yaml
drwxrwxr-x 14 mfm  mfm    4096 Aug 17 19:47 runHarness/
-rwxrwxr-x  1 mfm  mfm   20538 Aug 18 20:34 runWeathervane.pl*
-rwxrwxr-x  1 mfm  mfm    2527 Aug 17 19:47 runmany.sh*
-rw-rw-r--  1 mfm  mfm     145 Aug 17 19:47 settings.gradle
-rw-rw-r--  1 mfm  mfm     277 Aug 18 21:23 test-pvc.yaml
drwxrwxr-x  3 mfm  mfm    4096 Aug 17 19:47 testing/
drwxrwxr-x  2 mfm  mfm    4096 Aug 23 04:13 tmpDir/
-rw-rw-r--  1 mfm  mfm       6 Aug 17 19:47 version.txt
-rw-rw-r--  1 mfm  mfm     708 Aug 17 19:47 weathervane.config.k8s.micro
-rw-rw-r--  1 mfm  mfm     562 Aug 17 21:29 weathervane.config.k8s.quickstart
-rw-rw-r--  1 mfm  mfm     721 Aug 17 19:47 weathervane.config.k8s.small2
-rwxrwxr-x  1 mfm  mfm   42556 Aug 17 19:47 weathervane.pl*
-rw-r--r--  1 root root      0 Aug 17 19:56 weathervaneResults.csv
drwxrwxr-x  3 mfm  mfm    4096 Aug 17 19:47 workloadConfiguration/
drwxrwxr-x  4 mfm  mfm    4096 Aug 23 03:56 workloadDriver/
-rw-rw-r--  1 mfm  mfm     791 Aug 18 21:37 wv-pvc.yaml
mfm@mm74:/home/mfm/weathervane$ history | grep quickstart
   92  cat > weathervane.config.k8s.quickstart << EOF
  115  cat weathervane.config.k8s.quickstart
  116  sudo ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  117  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  138  ./runWeathervane.pl --configFile weathervane.config.k8s.quickstart
  151  ./debugWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  154  ./debugWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  165  vim weathervane.config.k8s.quickstart
  169  vim weathervane.config.k8s.quickstart
  173  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  187  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  189  vim weathervane.config.k8s.quickstart
  192  cat weathervane.config.k8s.quickstart
  194  cat weathervane.config.k8s.quickstart
  195  vim  weathervane.config.k8s.quickstart
  201  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  203  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  224  cat weathervane.config.k8s.quickstart
  360  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  365  vim weathervane.config.k8s.quickstart
  366  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  368  vim weathervane.config.k8s.quickstart
  394  vim weathervane.config.k8s.quickstart
  453  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  459  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  462  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  502  ./runWeathervane.pl  --configFile=weathervane.config.k8s.quickstart
  538  ./runWeathervane.pl  --configFile=weathervane.config.k8s.quickstart
  574  ./runWeathervane.pl --skipPvTest --configFile=weathervane.config.k8s.quickstart
  581  ./runWeathervane.pl --skipPvTest --configFile=weathervane.config.k8s.quickstart
  582  sudo ./runWeathervane.pl --skipPvTest --configFile=weathervane.config.k8s.quickstart
  624  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  626  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart --outputDir /home/mfm/weathervane/output
  628  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart --outputDir /home/mfm/weathervane/outDir --tmpDir  /home/mfm/weathervane/tmpDir
  667  history | grep quickstart
mfm@mm74:/home/mfm/weathervane$ history
    1  sudo apt update
    2  sudo apt install -y ca-certificates curl gnupg lsb-release
    3  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    4  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list
    5  sudo apt update
    6  sudo apt install -y containerd.io
    7  wget https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64
    8  sudo install -m 755 runc.amd64 /usr/local/sbin/runc
    9  sudo mkdir -p /etc/containerd/
   10  containerd config default | sudo tee /etc/containerd/config.toml
   11  sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
   12  sudo sed -i 's/^disabled_plugins \=/\#disabled_plugins \=/g' /etc/containerd/config.toml
   13  sudo systemctl restart containerd
   14  sudo ufw allow 6443/tcp
   15  sudo ufw allow 2379/tcp
   16  sudo ufw allow 2380/tcp
   17  sudo ufw allow 10250/tcp
   18  sudo ufw allow 10257/tcp
   19  sudo ufw allow 10259/tcp
   20  sudo ufw reload
   21  sudo ufw allow 10250/tcp
   22  sudo ufw allow 30000:32767/tcp
   23  sudo ufw reload
   24  cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
   25  br_netfilter
   26  EOF
   27  cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
   28  net.bridge.bridge-nf-call-ip6tables = 1
   29  net.bridge.bridge-nf-call-iptables = 1
   30  net.ipv4.ip_forward = 1
   31  EOF
   32  sudo sysctl --system
   33  sudo swapoff -a
   34  sudo vi /etc/fstab  # comment out swap line
   35  sudo cat /etc/fstab
   36  sudo modprobe br_netfilter
   37  sudo sysctl net.bridge.bridge-nf-call-iptables=1
   38  sudo apt update
   39  sudo apt install -y apt-transport-https ca-certificates curl
   40  sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
   41  echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
   42  sudo apt update
   43  sudo apt install -y kubelet kubeadm kubectl
   44  sudo kubeadm init --pod-network-cidr=192.168.0.0/16
   45  mkdir -p $HOME/.kube
   46  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   47  sudo chown $(id -u):$(id -g) $HOME/.kube/config
   48  kubectl taint nodes --all node-role.kubernetes.io/master-
   49  kubectl taint nodes --all node-role.kubernetes.io/control-plane-
   50  kubectl create -f https://projectcalico.docs.tigera.io/manifests/tigera-operator.yaml
   51  kubectl create -f https://projectcalico.docs.tigera.io/manifests/custom-resources.yaml
   52  kubectl get nodes --show-labels
   53  sudo mkdir -p /k8s/weathervane/vol
   54  sudo chmod -R 777 /k8s
   55  git clone http://github.com/vmware/weathervane
   56  cd weathervane/
   57  cat > create-persistent-vol.yaml << EOF
   58  apiVersion: v1
   59  kind: PersistentVolume
   60  metadata:
   61    name: weathervane-pv
   62  spec:
   63    capacity:
   64      storage: 400Gi
   65    accessModes:
   66    - ReadWriteOnce
   67    persistentVolumeReclaimPolicy: Retain
   68    storageClassName: local-storage
   69    local:
   70      path: /k8s/weathervane/vol
   71    nodeAffinity:
   72      required:
   73        nodeSelectorTerms:
   74        - matchExpressions:
   75          - key: kubernetes.io/hostname
   76            operator: In
   77            values:
   78            - mm74
   79  EOF
   80  kubectl create -f create-persistent-vol.yaml
   81  kubectl get pv
   82  cat > create-storage-class.yaml << EOF
   83  kind: StorageClass
   84  apiVersion: storage.k8s.io/v1
   85  metadata:
   86    name: local-storage
   87  provisioner: kubernetes.io/no-provisioner
   88  volumeBindingMode: Immediate
   89  EOF
   90  kubectl create -f create-storage-class.yaml
   91  kubectl get sc
   92  cat > weathervane.config.k8s.quickstart << EOF
   93  {
   94    "description" : "micro",
   95    "configurationSize": "micro",
   96    "runStrategy" : "fixed",
   97    "dockerNamespace" : "mikemoranamd",
   98    "kubernetesClusters" : [
   99      {
  100        "name" : "kubernetes",
  101        "kubeconfigFile" : "/home/mfm/.kube/config",
  102        "kubeconfigContext" : "",
  103      },
  104    ],
  105    "driverCluster" : "kubernetes",
  106    "appInstanceCluster" : "kubernetes",
  107    "appIngressMethod" : "clusterip",
  108    "cassandraDataStorageClass" : "local-storage",
  109    "postgresqlStorageClass" : "local-storage",
  110    "nginxCacheStorageClass" : "local-storage",
  111  }
  112  EOF
  113  cat create-persistent-vol.yaml
  114  cat create-storage-class.yaml
  115  cat weathervane.config.k8s.quickstart
  116  sudo ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  117  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  118  history
  119  ll
  120  history > ~/history_2208151459
  121  ll ~
  122  uptime
  123  who
  124  cd ..
  125  cd .ssh
  126  ll
  127  vi authorized_keys
  128  ll
  129  who
  130  cd
  131  ll
  132  cd weathervane/
  133  ll
  134  kubectl get pods
  135  kubectl get ns
  136  cat ~/.kube/config
  137  ls
  138  ./runWeathervane.pl --configFile weathervane.config.k8s.quickstart
  139  ll
  140  cp test-pvc.yaml my.yaml
  141  vi my.yaml
  142  python3
  143  fg
  144  ls
  145  cat my.yaml
  146  ks
  147  ls
  148  ll
  149  cp runWeathervane.pl debugWeathervane.pl
  150  vi debugWeathervane.pl
  151  ./debugWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  152  jobs
  153  vi debugWeathervane.pl
  154  ./debugWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  155  kubectl get nodes
  156  kubectl get nodes -o wide
  157  kube get pods --allnamespace
  158  kubectl get pods --allnamespace
  159  kubectl get pods --all-namespace
  160  kubectl get pods -all ns
  161  kubectl get pods --all-namespace
  162  kubectl get pods --all-namespaces
  163  cd weathervane/
  164  ls -lat
  165  vim weathervane.config.k8s.quickstart
  166  kubectl get persisistvolume
  167  kubectl get pv
  168  kubectl get sc
  169  vim weathervane.config.k8s.quickstart
  170  vim runWeathervane.pl
  171  kubectl get ns
  172  vim runWeathervane.pl
  173  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  174  kubectl get pv
  175  kubectl get sc
  176  dir
  177  vim runWeathervane.pl
  178  vim create-persistent-vol.yaml
  179  vim create-storage-class.yaml
  180  kubectl get sc
  181  kubectl delete sc local-storage
  182  kubectl get sc
  183  kubectl apply -f create-storage-class.yaml
  184  kubectl get sc
  185  ./runWeathervane.pl --help
  186  kubectl get pods --all-namespaces
  187  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  188  vim weathervane.config.k8s.micro
  189  vim weathervane.config.k8s.quickstart
  190  vim weathervane.config.k8s.micro
  191  vim runWeathervane.pl
  192  cat weathervane.config.k8s.quickstart
  193  cat /home/mfm/.kube/config
  194  cat weathervane.config.k8s.quickstart
  195  vim  weathervane.config.k8s.quickstart
  196  kubectl get pods --all-namespaces
  197  kubectl get pvc
  198  kubectl get pods --all-namespaces
  199  kubectl get pvc
  200  vim runWeathervane.pl
  201  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  202  vim runWeathervane.pl
  203  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  204  vim test-pvc.yaml
  205  vim test-pvc.yaml
  206  vim my.yaml
  207  kubectl apply -f my.yaml
  208  vim test-pvc.yaml
  209  kubectl apply -f my.yaml
  210  kubectl apply -f test-pvc.yaml
  211  vim test-pvc.yaml
  212  kubectl apply -f test-pvc.yaml
  213  kubectl get pvc
  214  kubectl describe pvc weathervane-test-claim-02
  215  kubectl get pvc
  216  kubectl describe pvc weathervane-test-claim-02
  217  who
  218  ls
  219  cat history_2208151459
  220  cd weathervane/
  221  ll
  222  cat create-storage-class.yaml
  223  cat create-persistent-vol.yaml
  224  cat weathervane.config.k8s.quickstart
  225  kubectl get nodes
  226  kubectl get pv
  227  kubectl get sc
  228  kubectl get pvc
  229  cd weathervane/
  230  kubectl describe weathervane-test-claim-02
  231  kubectl describe pvc weathervane-test-claim-02
  232  kubectl get pv
  233  kubectl describe pv weathervane-pv
  234  ls -lat /k8s/weathervane/vol
  235  vim create-persistent-vol.yaml
  236  kubectl get node -o wide
  237  kubectl show labels
  238  kubectl get node --show-lables
  239  kubectl get node --show-labels
  240  vim create-persistent-vol.yaml
  241  ps -a
  242  who
  243  cd .ssh
  244  ll
  245  vi authorized_keys
  246  cd
  247  ls
  248  who
  249  uptime
  250  who
  251  man curl
  252  who
  253  uptime
  254  who
  255  ls
  256  kubectl get ps
  257  kubectl get sc
  258  ls
  259  cd weathervane/
  260  ;s
  261  ls
  262  vi runWeathervane.pl~
  263  vi runWeathervane.pl
  264  jobs
  265  fg
  266  jobs
  267  fg
  268  ps -a
  269  jobs
  270  ps -aef
  271  ps -aef | grep mfm
  272  fg
  273  cd weathervane/
  274  ls -alt
  275  vim create-persistent-vol.yaml
  276  vim create-storage-class.yaml
  277  kubectl get pv
  278  kubectl get pvc
  279  kubectl delete pvc weathervane-test-claim-02
  280  kubectl get pvc
  281  kubectl get pv
  282  kubectl describe pv weathervane-pv
  283  vim create-persistent-vol.yaml
  284  kubectl get pv
  285  vim create-persistent-vol.yaml
  286  vim create-storage-class.yaml
  287  kubectl get sc
  288  kubectl delete sc local-storage
  289  kubectl get sc
  290  kubectl apply -f create-storage-class.yaml
  291  kubectl get sc
  292  kubectl get sc -o wide
  293  kubectl describe sc local-storage
  294  kubectl get pc
  295  kubectl get pv
  296  kubectl apply -f test-pvc.yaml
  297  vim test-pvc.yaml
  298  kubectl get pvc
  299  kubectl get pv
  300  kubectl describe pv weathervane-pv
  301  kubectl get sc
  302  kubectl get pvc
  303  vim test-pvc.yaml
  304  kubectl describe pvc weathervane-test-claim-02
  305  cat /proc/cpuinfo
  306  vim test-pvc.yaml
  307  vim create-persistent-vol.yaml
  308  kubectl get pvc
  309  kubectl delete pvc weathervane-test-claim-02
  310  kubectl apply -f test-pvc.yaml
  311  kubectl get pvc
  312  kubectl get pv
  313  kubectl describe pvc weathervane-test-claim
  314  kubectl delete pvc weathervane-test-claim
  315  vim test-pvc.yaml
  316  kubectl get pv
  317  kubectl get pvc
  318  kubectl apply -f test-pvc.yaml
  319  kubectl get pvc
  320  kubectl describe pvc weathervane-test-claim
  321  kubectl delete pvc weathervane-test-claim
  322  vim test-pvc.yaml
  323  kubectl get pv
  324  ls /k8s/weathervane/vol/
  325  cd /k8s/weathervane/
  326  ls -lat
  327  cd vol/
  328  ls 0lat
  329  ls -lat
  330  touch test.tmp
  331  ls -alt
  332  cd ~/weathervane/
  333  ls -lat
  334  kubectl delete pv weathervane-pv
  335  kubectl get pv
  336  kubectl apply -f create-persistent-vol.yaml
  337  kubectl get pv
  338  kubectl get sc
  339  kubectl apply -f test-pvc.yaml
  340  kubectl get pvc
  341  kubectl describe pvc weathervane-test-claim
  342  cp test-pvc.yaml pvc2.yaml
  343  vim pvc2.yaml
  344  kubectl get pv
  345  kubectl get pvc
  346  kubectl apply -f pvc2.yaml
  347  kubectl get pvc
  348  kubectl describe pvc weathervane-test-claim-02
  349  vim pvc2.yaml
  350  vim create-persistent-vol.yaml
  351  kubectl get pvc
  352  kubectl describe pvc weathervane-test-claim
  353  kubectl get pvc
  354  kubectl delete pvc weathervane-test-claim-02
  355  kubectl delete pvc weathervane-test-claim
  356  kubectl get pv
  357  kubectl delete pv weathervane-pv
  358  kubectl get sc
  359  history | grep run
  360  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  361  kubectl get pv
  362  kubectl get pvc
  363  kubectl get sc
  364  kubectl delete sc local-storage
  365  vim weathervane.config.k8s.quickstart
  366  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  367  kubectl get sc
  368  vim weathervane.config.k8s.quickstart
  369  vim runWeathervane.pl
  370  kubectl get pv
  371  kubectl get pvc
  372  kubectl get sc
  373  kubectl apply -f test-pvc.yaml
  374  kubectl get pvc
  375  kubectl get pv
  376  kubectl get sc
  377  kubectl describe pvc weathervane-test-claim
  378  vim create-persistent-vol.yaml
  379  vim create-storage-class.yaml
  380  kubectl delete pvc weathervane-test-claim
  381  kubectl get sc
  382  kubectl get pv
  383  kubectl get pvc
  384  kubectl apply -f create-storage-class.yaml
  385  kubectl get sc
  386  kubectl apply -f test-pvc.yaml
  387  kubectl get pvc
  388  kubectl get pv
  389  kubectl get pvc
  390  kubectl describe pvc weathervane-test-claim
  391  vim weathervane.config.k8s.micro
  392  vim configFiles/kubernetes/cassandra.yaml
  393  kubectl get sc
  394  vim weathervane.config.k8s.quickstart
  395  vim weathervane.config.k8s.micro
  396  vim create-storage-class.yaml
  397  kubectl get pvc
  398  kubectl get pv
  399  kubectl get pvc
  400  kubectl get pvc -o wide
  401  kubectl describe pvc weathervane-test-claim
  402  kubectl describe pvc weathervane-test-claim -o yaml
  403  kubectl get pvc weathervane-test-claim -o yaml
  404  kubectl get pv
  405  kubectl get pvpvc
  406  kubectl get pvc
  407  kubectl delete pvc weathervane-test-claim
  408  kubectl get sc
  409  kubectl delete sc local-storage
  410  vim create-storage-class.yaml
  411  kubectl apply -f create-storage-class.yaml
  412  kubectl get sc
  413  kubectl apply -f test-pvc.yaml
  414  kubectl get pvc
  415  kubectl describe pvc weathervane-test-claim
  416  vim create-persistent-vol.yaml
  417  mkdir /k8s/weathervane/vol/v01
  418  mkdir /k8s/weathervane/vol/v02
  419  mkdir /k8s/weathervane/vol/v03
  420  mkdir /k8s/weathervane/vol/v04
  421  mkdir /k8s/weathervane/vol/v05
  422  cp create-persistent-vol.yaml pv01.yaml
  423  cp create-persistent-vol.yaml pv02.yaml
  424  cp create-persistent-vol.yaml pv03.yaml
  425  cp create-persistent-vol.yaml pv04.yaml
  426  cp create-persistent-vol.yaml pv05.yaml
  427  vim pv01.yaml
  428  vim pv02.yaml
  429  vim pv03.yaml
  430  vim pv04.yaml
  431  vim pv05.yaml
  432  kubectl get pvc
  433  kubectl delete pvc weathervane-test-claim
  434  vim pv01.yaml
  435  vim pv02.yaml
  436  vim pv03.yaml
  437  kubectl apply -f pv01.yaml pv02.yaml pv03.yaml
  438  kubectl apply -f pv01.yaml
  439  kubectl apply -f pv02.yaml
  440  kubectl apply -f pv03.yaml
  441  kubectl get storage
  442  kubectl get sc
  443  vim test-pvc.yaml
  444  vim pvc2.yaml
  445  cp pvc2.yaml pvc3.yaml
  446  vim pvc3.yaml
  447  kubectl apply -f test-pvc.yaml
  448  kubectl apply -f pvc2.yaml
  449  kubectl apply -f pvc3.yaml
  450  kubectl get pvc
  451  kubectl delete pvc weathervane-test-claim weathervane-test-claim-02 weathervane-test-claim-03
  452  history | grep run
  453  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  454  kubectl get pvs
  455  kubectl get pvc
  456  kubectl get pv
  457  kubectl get sc
  458  kubectl get pv
  459  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  460  ls -alt
  461  ifconfig
  462  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  463  kubectl get pvs
  464  kubectl get pvc
  465  kubectl get pvc weathervane-test-claim -o yaml
  466  kubectl get pvc weathervane-test-claim -o yaml > p.yaml
  467  cd weathervane/
  468  vim wv-pvc.yaml
  469  kubectl apply -f wv-pvc.yaml
  470  kubectl get pvc
  471  kubectl get pv
  472  kubectl get pvc
  473  kubectl apply -f pvc2.yaml
  474  kubectl get pvc
  475  kubectl get nodes
  476  kubectl get pvc
  477  cd weathervane/
  478  kubectl get pvc
  479  kubectl get pv
  480  kubectl get sc
  481  ls /k8s/weathervane/vol/
  482  kubectl get pv
  483  kubectl describe pvc weathervane-test-claim
  484  kubectl get sc
  485  ./runWeathervane.pl --help
  486  kubectl get pvc
  487  kubectl delete pvc weathervane-test-claim
  488  kubectl delete pvc weathervane-test-claim-02
  489  kubectl get pv
  490  kubectl delete pv weathervane-pv1
  491  kubectl delete pv weathervane-pv2
  492  kubectl delete pv weathervane-pv3
  493  kubectl sc
  494  kubectl get sc
  495  vim runWeathervane.pl
  496  kubectl apply -f pv01.yaml
  497  kubectl apply -f pv02.yaml
  498  kubectl apply -f pv03.yaml
  499  kubectl get pv
  500  vim runWeathervane.pl
  501  history | grep run
  502  ./runWeathervane.pl  --configFile=weathervane.config.k8s.quickstart
  503  kubectl get pv
  504  kubectl get pvc
  505  kubectl get pvc --all-namespace
  506  kubectl get pvc --all-namespaces
  507  kubectl get ns
  508  docker
  509  sudo apt install docker.io
  510  docker
  511  sudo apt install podman-docker
  512  dock
  513  podman
  514  podman ps -a
  515  vim runWeathervane.pl
  516  docker
  517  sudo apt remove podman-docker
  518  sudo apt purge podman-docker
  519  podman ps -a
  520  sudo apt install docker.io
  521  sudo apt install containerd.io docker.io
  522  podma
  523  podman
  524  podmannamespave
  525  podmannamespace
  526  podmannamespaces
  527  dockernamespave
  528  dockernamespace
  529  vim runWeathervane.pl
  530  sudo apt install podman-docker
  531  which podman
  532  sudo ln -s /usr/bin/docker /usr/bin/podman
  533  sudo ln -s /usr/bin/podman /usr/bin/docker
  534  ls /usr/bin/docker
  535  docker
  536  docker ps -a
  537  history | grep run
  538  ./runWeathervane.pl  --configFile=weathervane.config.k8s.quickstart
  539  cd weathervane/
  540  ls -lat
  541  ./buildDockerImages.pl --username psonemal
  542  vim buildDockerImages.log
  543  cat buildDockerImages.
  544  cat buildDockerImages.log
  545  docker run --name weathervane-builder --rm -v /home/mfm/weathervane/.gradle:/root/.gradle -v /home/mfm/weathervane:/root/weathervane -w /root/weathervane --entrypoint /root/weathervane/gradlew openjdk:8
  546  hostname
  547  ./buildDockerImages.pl --private --host mm74
  548  cat buildDockerImages.log
  549  cat /etc/containers/registries.conf
  550  ./buildDockerImages.pl --username psonemal
  551  cat buildDockerImages.log
  552  history
  553  ll
  554  history > history_220819
  555  cd weathervane/
  556  ls
  557  ls -lrt
  558  cat buildDockerImages.log
  559  tail ~/.ssh/authorized_keys
  560  cat buildDockerImages.pl
  561  ./buildDockerImages.pl --username mikemoranamd
  562  cat buildDockerImages.log
  563  who
  564  cd weathervane/
  565  cat pv01.yaml
  566  cat pv02.yaml
  567  cat pv03.yaml
  568  cat pv04.yaml
  569  cat pv05.yaml
  570  cat pvc2.yaml
  571  cat pvc3.yaml
  572  cat wv-pvc.yaml
  573  git status
  574  ./runWeathervane.pl --skipPvTest --configFile=weathervane.config.k8s.quickstart
  575  locate Term/ReadKey.pm
  576  sudo apt install plocate
  577  sudo apt install mlocate
  578  locate Term/ReadKey.pm
  579  cpan Term::ReadKey
  580  sudo cpan Term::ReadKey
  581  ./runWeathervane.pl --skipPvTest --configFile=weathervane.config.k8s.quickstart
  582  sudo ./runWeathervane.pl --skipPvTest --configFile=weathervane.config.k8s.quickstart
  583  cd weathervane/
  584  kubectl get pv
  585  kubectl get pvc
  586  ls -lat
  587  vim buildDockerImages.log
  588  docker ps -a
  589  docker iamge ls
  590  docker image ls
  591  cat buildDockerImages.log
  592  docker run --name weathervane-builder
  593  vim buildDockerImages.pl
  594  ./buildDockerImages.pl --username psonemal@amd.com
  595  cat buildDockerImages.log.
  596  ./buildDockerImages.pl --username psonemal
  597  cat buildDockerImages.log.
  598  cat buildDockerImages.log
  599  cat /etc/containers/registries.conf
  600  cat buildDockerImages.log
  601  podman compose
  602  podman-compose up
  603  vim /etc/containers/registries.conf
  604  sudo vim /etc/containers/registries.conf
  605  ./buildDockerImages.pl --username psonemal
  606  kubectl get pv
  607  kubectl get pvc
  608  kubectl get sc
  609  history | grep kubectl
  610  kubectl get pvc
  611  kubectl get pvc --all-namespaces
  612  kubectl get pvc --all-namespace
  613  kubectl get pvc --all-namespaces
  614  kubectl get pvc
  615  kubectl get pvc --all-namespaces
  616  kubectl get pv --all-namespaces
  617  kubectl delete pv weathervane-pv1
  618  kubectl delete pv weathervane-pv2
  619  kubectl delete pv weathervane-pv3
  620  kubectl apply -f pv01.yaml
  621  kubectl apply -f pv02.yaml
  622  kubectl apply -f pv03.yaml
  623  kubectl get pv
  624  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart
  625  ./runWeathervane.pl --help
  626  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart --outputDir /home/mfm/weathervane/output
  627  vim runWeathervane.pl
  628  ./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart --outputDir /home/mfm/weathervane/outDir --tmpDir  /home/mfm/weathervane/tmpDir
  629  ls outDir/
  630  ls tmpDir/
  631  exit
  632  cat /etc/containers/registries.conf
  633  podman ps -a
  634  kubectl get pv
  635  kubectl get pvc
  636  kubectl get pvc --all-namespaces
  637  kubectl get pv --all-namespaces
  638  kubectl get pvc --all-namespaces
  639  cd weathervane/
  640  ls -lat tmpDir/
  641  ls -lat  outDir/
  642  cat outDir/sequence.num
  643  top
  644  docker ps -a
  645  history | grep run
  646  kubectl get sc
  647  kubectl get pv --all-namespaces
  648  kubectl get sc
  649  kubectl get pvc --all-namespaces
  650  exit
  651  uname -a
  652  ll
  653  which zip
  654  which pkzip
  655  cd weathervane/
  656  ls
  657  ls -lrt
  658  cd ..
  659  cp -R weathervane/ weathervane_backup
  660  ll
  661  cd weathervane_backup/
  662  ll
  663  cd ..
  664  du -s *
  665  cd weathervane
  666  ll
  667  history | grep quickstart
  668  history
mfm@mm74:/home/mfm/weathervane$ !628
./runWeathervane.pl --configFile=weathervane.config.k8s.quickstart --outputDir /home/mfm/weathervane/outDir --tmpDir  /home/mfm/weathervane/tmpDir
Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.

***** {
  \"kind\": \"PersistentVolumeClaim\",
  \"apiVersion\": \"v1\",
  \"metadata\": {
    \"name\": \"weathervane-test-claim\",
    \"annotations\": {
        \"volume.beta.kubernetes.io/storage-class\": \"local-storage\"
    }
  },
  \"spec\": {
    \"accessModes\": [
      \"ReadWriteOnce\"
    ],
    \"resources\": {
      \"requests\": {
        \"storage\": \"1Gi\"
      }
    }
  }
}

Weathervane is unable to create a persistant volume using storage class local-storage in kubernetesCluster kubernetes.
Check the configuration of your cluster to ensure that the storage class exists and can provision persistent volumes.
mfm@mm74:/home/mfm/weathervane$ kubectl get pv
NAME              CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS     CLAIM                            STORAGECLASS    REASON   AGE
weathervane-pv1   10Gi       RWO            Retain           Released   default/weathervane-test-claim   local-storage            17h
weathervane-pv2   10Gi       RWO            Retain           Released   default/weathervane-test-claim   local-storage            17h
weathervane-pv3   10Gi       RWO            Retain           Released   default/weathervane-test-claim   local-storage            17h
mfm@mm74:/home/mfm/weathervane$

sudo kubeadm join 145.40.99.43:6443 --token ygvuj2.he7ssistontxqeel --discovery-token-ca-cert-hash sha256:1a519dbf0000655cec9f4acb8d562459d822cd0e288e264ed0ee54e522e24f62
